<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>黑群晖 NAS —— 在 OpenWRT 旁路由中启用 IPv6</title>
    <link href="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/"/>
    <url>/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/</url>
    
    <content type="html"><![CDATA[<h1 id="黑群晖-NAS-——-在-OpenWRT-旁路由中启用-IPv6"><a href="#黑群晖-NAS-——-在-OpenWRT-旁路由中启用-IPv6" class="headerlink" title="黑群晖 NAS —— 在 OpenWRT 旁路由中启用 IPv6"></a>黑群晖 NAS —— 在 OpenWRT 旁路由中启用 IPv6</h1><p>在之前配置旁路由内网穿透的时候，我们在 openwrt 中禁用了 IPv6，这主要是想在实现功能的同时尽可能简化配置过程。然而，工信部在 2023 年发布了 <a href="https://www.gov.cn/zhengce/zhengceku/2023-04/23/content_5752858.htm">工业和信息化部等八部门关于推进 IPv6 技术演进和应用创新发展的实施意见</a>。要在 2025 年前实现 IPv6 的全面普及，因此，直接关掉 IPv6 并不是一个好的使用方式。</p><p>在这里，我将补充讲解如何启用旁路由中的 IPv6。</p><h2 id="不启用-IPv6-会怎么样？"><a href="#不启用-IPv6-会怎么样？" class="headerlink" title="不启用 IPv6 会怎么样？"></a>不启用 IPv6 会怎么样？</h2><p>答案是不会怎么样。目前 IPv4 还是事实标准，并且许多拥有足量 IPv4 的人并不愿意让 IPv6 普及（动了谁的蛋糕？）。因此哪怕不开启 IPv6，对你的上网体验也不会有太大的影响。但是在配置群辉的过程中，我们为了公网访问群辉已经配置好了路由器和主机的 IPv6，如果不把整个家庭的 IPv6 都配置好，那不等于是白折腾了吗？</p><h2 id="路由器中已经启用了-IPv6-呀，为什么还要在旁路由再启用一次？"><a href="#路由器中已经启用了-IPv6-呀，为什么还要在旁路由再启用一次？" class="headerlink" title="路由器中已经启用了 IPv6 呀，为什么还要在旁路由再启用一次？"></a>路由器中已经启用了 IPv6 呀，为什么还要在旁路由再启用一次？</h2><p>原因是所有网关指向旁路由的设备流量都会经过旁路由代理，旁路由不开 ipv6 的话，等于过滤掉所有 IPv6 相关的流量，因此虽然电脑能够获取 IPv6 地址，但只要网关指向旁路由，就等于没有使用 IPv6。</p><p>这时候电脑去<a href="https://test-ipv6.com/">ipv6 测试网</a>的话，也是无法通过测试的，这是因为实际上测试的是旁路由的网络，而不是电脑的，旁路由不支持 IPv6 的话，就无法通过测试。</p><p>在配置好旁路由之后，就可以通过测试了：</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/ipv6%E6%B5%8B%E8%AF%95.png" alt="通过 IPv6 测试"></p><h2 id="旁路由的配置"><a href="#旁路由的配置" class="headerlink" title="旁路由的配置"></a>旁路由的配置</h2><p>首先进入 OpenWRT 的界面，我们主要操作网络部分：</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/%E4%B8%BB%E8%A6%81%E6%93%8D%E4%BD%9C%E7%BD%91%E7%BB%9C%E9%83%A8%E5%88%86.png"></p><p>看到这个 LAN 接口，我们需要在这个 LAN 接口中彻底禁用 IPv6。</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/ipv4%E6%8E%A5%E5%8F%A3.png"></p><p>在下图的设置中禁用 IPv6：</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan%E7%A6%81%E7%94%A8v6-1.png"><br><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan%E7%A6%81%E7%94%A8v6-2.png"><br><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan%E7%A6%81%E7%94%A8v6-3.png"></p><p>然后新增一个用于 IPv6 的接口：</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AAlan6%E6%8E%A5%E5%8F%A3.png"></p><p>并按照下图设置：</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan6%E8%AE%BE%E7%BD%AE.png"><br><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan6%E8%AE%BE%E7%BD%AE2.png"><br><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/lan6%E8%AE%BE%E7%BD%AE3.png"></p><p>然后到 DHCP&#x2F;DNS 页面，选择过滤器设置，确保下图两个选项没有勾选。</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/DHCPDNS%E8%BF%87%E6%BB%A4%E8%AE%BE%E7%BD%AE.png"></p><p>记得保存所有的设置，最好重启一下旁路由。</p><h2 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h2><p>在网络诊断中使用 IPv6 ping 测试网络连通性。</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/v6%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95.png"></p><p>如果 ping 正常的话就可以了，把主机的网络重新连接一下，进入 <a href="https://test-ipv6.com/">ipv6 测试网</a> 进行测试，能通过就说明 IPv6 已经开启了。</p><h2 id="openclash-配置"><a href="#openclash-配置" class="headerlink" title="openclash 配置"></a>openclash 配置</h2><p>现在的科学软件大多都支持了 IPv6，只通过简单的设置就可以完成。</p><p><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/openclashDNS.png"><br><img src="/2024/07/15/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_%E5%9C%A8OpenWRT%E6%97%81%E8%B7%AF%E7%94%B1%E4%B8%AD%E5%90%AF%E7%94%A8IPv6/openclashv6%E8%AE%BE%E7%BD%AE.png"></p><h2 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h2><p>进行 IPv6 等功能测试，如果有其他的问题，需要再进行排查。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>黑群晖 NAS Two in One 从入坑到入土——激进向教程 (旁路由篇)</title>
    <link href="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/"/>
    <url>/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="黑群晖-NAS-Two-in-One-从入坑到入土——激进向教程-旁路由篇"><a href="#黑群晖-NAS-Two-in-One-从入坑到入土——激进向教程-旁路由篇" class="headerlink" title="黑群晖 NAS Two in One 从入坑到入土——激进向教程 (旁路由篇)"></a>黑群晖 NAS Two in One 从入坑到入土——激进向教程 (旁路由篇)</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>前面挖了一个坑，利用旁路由域名劫持实现内外网无缝访问 NAS。在浏览下面的内容之前，请确保你现在的路由器本身没有域名劫持（挟持）功能。就是下图这个：</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-9fc4599a00e90b31866a2dfb25f98c42_b.jpg">  </p><p>openwrt 的域名劫持功能</p><p>如果你的路由器已经支持这个功能，那么只需要添加几个劫持域名即可，不需要配置旁路由。</p><h2 id="虚拟-OpenWRT"><a href="#虚拟-OpenWRT" class="headerlink" title="虚拟 OpenWRT"></a>虚拟 OpenWRT</h2><p>可以通过虚拟机或者 docker 虚拟，我没有试过 docker 的方式，理论可行，但我能预想到会有很多坑，比如桥接网络等，为了省事就用虚拟机就好。如果你有单独的旁路由硬件，可以使用 PVE 来虚拟，或者直装虚拟机；如果没有多余的设备，那就用群辉的虚拟机套件就好了。</p><p>多说一句，如果仅仅是为了域名劫持功能就搞一个单独的硬件，我认为有些过头了，毕竟功耗再低的主机也有个 10W 吧，天天开着也是一笔不小的费用。</p><h3 id="下载-OpenWRT-系统包"><a href="#下载-OpenWRT-系统包" class="headerlink" title="下载 OpenWRT 系统包"></a>下载 OpenWRT 系统包</h3><p>方式有很多，给大家推荐 <a href="https://openwrt.ai/?target=x86/64&id=generic">https://openwrt.ai/?target=x86/64&id=generic</a> 这个网站，可以免费定制，也可以免费下载作者编译好的，我们直接下载编译好的版本即可。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-a9e829bec31a501d4271b4ddd61d796a_b.jpg"><br>下载带 EFI 的版本即可，这个版本在虚拟机中不使用 UEFI 也可以启动。当然，你要下第一个也可以，应该没啥影响。</p><h3 id="安装群辉虚拟机套件或-PVE"><a href="#安装群辉虚拟机套件或-PVE" class="headerlink" title="安装群辉虚拟机套件或 PVE"></a>安装群辉虚拟机套件或 PVE</h3><p> PVE 的安装就不详细说了，网上随便就能搜到。</p><h3 id="群辉创建-OpenWRT-虚拟机"><a href="#群辉创建-OpenWRT-虚拟机" class="headerlink" title="群辉创建 OpenWRT 虚拟机"></a>群辉创建 OpenWRT 虚拟机</h3><p>群辉套件安装虚拟机，这里借用一下 <a href="https://blog.yanghong.dev/synology-nas-openwrt/">https://blog.yanghong.dev/synology-nas-openwrt/</a> 的文章，写得很详细。</p><p>在选择硬件配置那一步，我们刚开始不需要很高的配置，可以选择单核 512M 内存，如果后续有去广告等需求，再提高配置。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-ecfef6b362e35e77bbc5b7565e71466a_b.jpg">  </p><p>OpenWRT 配置选择</p><p>PVE 安装 OpenWRT 虚拟机</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-6d0d32451a34116e1b8381112049d3b6_b.jpg"><br>右键 pve 节点创建虚拟机。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-f7a5759cd1a073a6c7fd7306d60fb4db_b.jpg"><br>ID 用默认的即可，一般为 99+N，N 为你创建的虚拟机数量，这里假设为 100。名称随便写。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-149468a45ee559b151977c04ce3ef1e3_b.jpg"><br>选择不使用任何介质。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-723dc80d4b9f7e6d86d137f9b609ac90_b.jpg"><br>系统这一栏全部默认。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-b83747c41a905f02df298ce0e4e09606_b.jpg"><br>删除这个磁盘，后面几个标签页就改改 CPU 核心数和内存即可，其他全部默认。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-d0fd23e9598193a426dbe6b41bcb9028_b.jpg"><br>创建好的虚拟机应该类似这样，然后需要为他添加一块磁盘，也就是我打码的地方。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-25c1ae328d84d551a09be4cf6efd01ae_b.jpg"><br>上传系统文件，然后进入终端。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-8b9b65d37949846ced76e65cb5755eae_b.jpg"><br>cd 到 &#x2F;var&#x2F;lib&#x2F;vz&#x2F;template&#x2F;iso 中，这个目录存放了你上传的系统镜像</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@pve</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># cd /var/lib/vz/template/iso</span><br>root<span class="hljs-variable">@pve</span><span class="hljs-symbol">:/var/lib/vz/template/iso</span><span class="hljs-comment"># ls</span><br>openwrt<span class="hljs-number">-07.06</span>.<span class="hljs-number">2024</span>-x86<span class="hljs-number">-64</span>-generic-squashfs-combined-efi.img<br></code></pre></td></tr></table></figure><p>然后把系统镜像转换为磁盘镜像。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">qm</span> importdisk <span class="hljs-number">100</span> openwrt-<span class="hljs-number">07</span>.<span class="hljs-number">06</span>.<span class="hljs-number">2024</span>-x86-<span class="hljs-number">64</span>-generic-squashfs-combined-efi.img local-lvm<br></code></pre></td></tr></table></figure><p>里面的 100 为虚拟机编号，openwrt-07.06.2024-x86-64-generic-squashfs-combined-efi.img 为系统镜像名称。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-d7261efd16393b5b51e70165fcc98954_b.jpg"><br>出现类似的输出代表导入完成，然后虚拟机 100 中会多一个未使用的磁盘，编辑它。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-66f7b5e61e7a512dfc5c90a5b83f68a5_b.jpg"><br>总线&#x2F;设备那里选择 SCSI0，添加即可。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-969746c8c49ac74f66aaa10d052ee531_b.jpg"><br><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-c62728b0151db65bfd0a7359d98064af_b.jpg"><br>这样的话虚拟机硬件就配置完成了，最后在在启动顺序把 scsi 硬盘调整到第一项，打开开机自启动即可。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-4bb2705e71c35ac4ff9e20d58ca21095_b.jpg"><br>然后开机测试，如果开不了机的话检查一下 BIOS 是不是选成 EFI 启动了。</p><h2 id="配置-OpenWRT-实现域名劫持"><a href="#配置-OpenWRT-实现域名劫持" class="headerlink" title="配置 OpenWRT 实现域名劫持"></a>配置 OpenWRT 实现域名劫持</h2><p>开机进入控制台，先用 passwd 命令改密码。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-19f959d35e0a38fd129f8daac962b49d_b.jpg">  </p><h3 id="修改-OpenWRT-的-ip、dns、网关"><a href="#修改-OpenWRT-的-ip、dns、网关" class="headerlink" title="修改 OpenWRT 的 ip、dns、网关"></a>修改 OpenWRT 的 ip、dns、网关</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vim /etc/config/network<br></code></pre></td></tr></table></figure><p>vim 操作请自学。先添加或修改这些内容：</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-4fb513b158f63e0495ab367efb8ecae7_b.jpg">  </p><ul><li>ipaddr 的地址确保和你的路由器在同一网段，如果用户没有特别修改的话路由器地址一般为 192.168.X.1，那么 ip 填 192.168.X.{2,3,4,5 等等} 都可以。比如小米为 192.168.31.1，爱快是 192.168.9.1。netmask 是子网掩码，跟我一样就行。gateway 是网关，甜 192.168.X.1。</li><li>填好之后保存重启，然后在电脑浏览器中输入 <a href="http://192.168.X.2">http://192.168.X.2</a> (你自己设置的地址)，就可以访问 OpenWRT 的主页了。</li></ul><h3 id="接口配置"><a href="#接口配置" class="headerlink" title="接口配置"></a>接口配置</h3><p>把除了 LAN 之外的接口全部删除，旁路由不需要它们，然后编辑 LAN 接口。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-e44c853c8e188081fe02da693aa4131b_b.jpg"><br><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-71b5c56ffd92b8651609c7dc27a141aa_b.jpg"><br>常规设置里面我们已经通过命令行设置了，不用再动它。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-9e949cfac52bf886cfb4bc6bed6491c4_b.jpg"><br>高级设置里面添加三个 DNS 服务器即可。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-33dc707410e989a786e29f24be50a024_b.jpg"><br><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-6e2637288df7de47940eabfce02890b4_b.jpg"><br>DHCP 由主路由负责，并禁用所有 ipv6 相关的内容（内网中使用 ipv4 更方便）。</p><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-ed84345e429e7bfbc450e5f4bac8f1e5_b.jpg"><br>取消勾选 SYN-flood 防御。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-7612ea0167d04d87c16d7c69071d9206_b.jpg"><br>删除所有与 LAN 口无关的规则，主要是 WAN 口和 docker 相关规则。</p><h3 id="联网检测"><a href="#联网检测" class="headerlink" title="联网检测"></a>联网检测</h3><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-a48938003ed8042b5d16460a053e0100_b.jpg"><br>ping 一下能联网就行了。</p><h3 id="设置域名劫持"><a href="#设置域名劫持" class="headerlink" title="设置域名劫持"></a>设置域名劫持</h3><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-e19d66e8950e05c3429d892042212864_b.jpg"><br>注意，<strong>要添加一栏无用的接口</strong>，因为该版本的 OpenWRT 无法存储最后一个劫持数据。</p><h3 id="主路由设置"><a href="#主路由设置" class="headerlink" title="主路由设置"></a>主路由设置</h3><p>以爱快为例，网关和首选 DNS 更改为 OpenWRT 的 IP 地址即可，可能设备需要重连一下路由器，以重新分配网关和 DNS。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-e658059e57553f309b00fdbca1e5682b_b.jpg"><br>有些路由器不支持修改网关和 DNS，那么需要在终端设备手动设定，要麻烦一些。</p><p><img src="/2024/07/12/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B%E6%97%81%E8%B7%AF%E7%94%B1%E7%AF%87_EberyThingSay/v2-8b20060d2b0fdbee572dd8cf6f06a57c_b.jpg"></p><h2 id="主机设置"><a href="#主机设置" class="headerlink" title="主机设置"></a>主机设置</h2><h3 id="这部分仅供参考，我这里不起作用"><a href="#这部分仅供参考，我这里不起作用" class="headerlink" title="这部分仅供参考，我这里不起作用"></a>这部分仅供参考，我这里不起作用</h3><p>家用的 windows 系统一般是优先 ipv6，如果解析不到 ipv6 再使用 ipv4，这导致我们做的域名劫持使得域名成为了双栈，虽然可以解析到内网的 ipv4 地址，但系统还是会默认使用 ipv6 地址。因此还需要在电脑上更改一下 v4 和 v6 的优先级。</p><p>参考这篇博客的方法：<a href="https://blog.xiaoz.org/archives/20079">Windows 10&#x2F;11 设置 IPv4 优先访问</a></p><p>以管理员身份运行终端，然后输入下面的命令查看优先级：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh interface ipv6 show prefixpolicies<br></code></pre></td></tr></table></figure><p>没有修改系统的输出如下：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">查询活动状态<span class="hljs-string">...</span><br><br>优先顺序    标签   前缀<br><span class="hljs-params">----------</span>  <span class="hljs-params">-----</span>  <span class="hljs-params">--------------------------------</span><br>        50      0  :<span class="hljs-function">:1</span>/128<br>        40      1  ::<span class="hljs-string">/0</span><br>        35      4  :<span class="hljs-function">:ffff</span><span class="hljs-function">:0</span><span class="hljs-function">:0</span>/96<br>        30      2  2002::<span class="hljs-string">/16</span><br>         5      5  2001::<span class="hljs-string">/32</span><br>         3     13  fc00::<span class="hljs-string">/7</span><br>         1     11  fec0::<span class="hljs-string">/10</span><br>         1     12  3ffe::<span class="hljs-string">/16</span><br>         1      3  ::<span class="hljs-string">/96</span><br></code></pre></td></tr></table></figure><p>然后修改优先级</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh interface ipv6 <span class="hljs-built_in">set</span> prefixpolicy ::ffff:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>/<span class="hljs-number">96</span> <span class="hljs-number">100</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>这样设置后，将优先使用 IPv4 而不是 IPv6 进行访问。</p><p>ping 一下内网域名，可以看到优先返回了 v4 地址：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$<span class="hljs-built_in"> ping </span>debian12.example<br><br>正在<span class="hljs-built_in"> Ping </span>debian12.example [192.168.9.99] 具有 32 字节的数据:<br>来自 192.168.9.99 的回复: 字节=32 时间&lt;1ms <span class="hljs-attribute">TTL</span>=64<br>来自 192.168.9.99 的回复: 字节=32 时间=1ms <span class="hljs-attribute">TTL</span>=64<br><br>192.168.9.99 的<span class="hljs-built_in"> Ping </span>统计信息:<br>    数据包: 已发送 = 2，已接收 = 2，丢失 = 0 (0% 丢失)，<br>往返行程的估计时间(以毫秒为单位):<br>    最短 = 0ms，最长 = 1ms，平均 = 0ms<br></code></pre></td></tr></table></figure><p>这个方法重启就会失效，不建议使用。实测下来直接使用 ipv6 的速度也不算慢。如果觉得麻烦的话，不做域名劫持也无所谓。</p><p>最近学习了一下 IPv6 的寻址方式，其实 IPv6 的寻址方式和 DNS 递归解析服务器比较像，都是一层层寻找的。因此你在自家路由器这一层就已经完成了寻址，所以用这个公网 IP 的速率与内网并没有什么区别。</p><h2 id="域名劫持的其他作用"><a href="#域名劫持的其他作用" class="headerlink" title="域名劫持的其他作用"></a>域名劫持的其他作用</h2><p>域名劫持可以很方便地管理内网的设备，尤其是主机数量多的时候，例如。</p><ul><li>服务器 192.168.9.99</li><li>openwrt 192.168.9.77</li><li>群晖 192.168.9.106</li><li>ikuai 192.168.9.1</li></ul><p>把这些设备的 ip 都记下来还是很有难度的。通过域名劫持搭建小型家用 DNS 服务器的话，可以很方便管理这些设备。如：</p><ul><li>linux.example -&gt; 192.168.9.99</li><li>openwrt.example -&gt; 192.168.9.77</li><li>nas.example -&gt; 192.168.9.106</li><li>ikuai.example -&gt; 192.168.9.1</li></ul><p>这样的域名看着也比冷冰冰的数字更舒服。</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>假如我在阿里云中将域名 store.domain 解析到了群辉的 ipv6 地址 240e::1，那么当我在外面时，就会通过 ipv6 来访问家中的群辉。而我在家中，与群辉同处于一个内网时，OpenWRT 将我的域名解析请求劫持，并返回 ipv4 地址 192.168.9.100。</p><p>这个功能确实能够实现，但如上篇文章所说，并没有实际效果。</p><h2 id="能不能把域名劫持为-IPv6？从而实现与-v4-类似的功能"><a href="#能不能把域名劫持为-IPv6？从而实现与-v4-类似的功能" class="headerlink" title="能不能把域名劫持为 IPv6？从而实现与 v4 类似的功能"></a>能不能把域名劫持为 IPv6？从而实现与 v4 类似的功能</h2><p>这个思路其实是可以的，但效果并不比直接用公网地址好多少，并且容易出现一些切换错误的问题，所以在带宽不受限的情况下，不推荐用这种方式。</p><p>要使用这种方式，你需要修改路由器的 <code>/etc/hosts</code> 文件，添加以下的内容：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">fe80</span>::<span class="hljs-number">91</span>e3  nas.example.com<br></code></pre></td></tr></table></figure><p>将你的内网 v6 (这个地址在 windows 中叫本地链路回环地址，是固定的地址，系统不重装的话一般不会发生变化，可以放心劫持，其他系统在网络设置中找到 fe80 开头的就行) 劫持。</p><h2 id="真正有用的用户"><a href="#真正有用的用户" class="headerlink" title="真正有用的用户"></a>真正有用的用户</h2><p>建议无公网 ip 的 v4 内网穿透用户采用这种方式，实测可以在公网与内网之间无缝切换，顶多就是重启一下 app，Synology Photos, Drive Server 等软件，Jellyfin，navidrome 等服务都可以正常使用。</p><p>例如：我首先把群晖的访问端口改为 52491（v4 用户默认端口必改）穿透为 <code>192.168.9.100:52491 -&gt; frp-example.cc:52491</code>。然后在内网劫持<code>frp-example.cc</code>为<code>192.168.9.100</code>，</p><p>由于 v4 之间不存在优先级关系，劫持了就是劫持了，内网下面只能放问到 <code>192.168.9.100</code>，所以就很完美地实现了内外网无缝衔接。并且由于内网穿透往往上行带宽受限，这样做的效果是十分显著的，可以跑满内网带宽。只要注意群晖访问端口与穿透端口一致即可。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>文章修修改改了很多次，自己也是在摸索中前进，想要把 NAS 做到完美，但后来发现，其实就用公网 v6 是最方便省事的。</p><p>文章被搞的比较杂乱，有空再进行整理。</p>]]></content>
    
    
    <categories>
      
      <category>NAS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>黑群晖 NAS Two in One 从入坑到入土——激进向教程</title>
    <link href="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/"/>
    <url>/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="黑群晖-NAS-Two-in-One-从入坑到入土——激进向教程"><a href="#黑群晖-NAS-Two-in-One-从入坑到入土——激进向教程" class="headerlink" title="黑群晖 NAS Two in One 从入坑到入土——激进向教程"></a>黑群晖 NAS Two in One 从入坑到入土——激进向教程</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>作为一个计算机爱好者（***，毕业了都不敢说自己是学计算机的，只敢说自己是个爱好者），由于以下原因，让我有了入一台 NAS 的想法：</p><ol><li>看网上的在线电视剧和电影总是卡，体验感不佳。</li><li>刚需 onedrive，但由于 E5 被大面积封杀的原因，不再是长久之计，但又很馋它的功能。</li><li>不想再开音乐会员，反正就听那么几首歌而已。</li></ol><p>在决定入手之前，我用手上的 mini 主机虚拟了一台黑群晖使用，发现体验不错，自带的 Drive, Photos, Audio 和 video 都很好用，所以我直接上网买了一台 N100 的 NAS。</p><p>（当时很想买绿联的 4800，但是怕翻车，就买了台小厂的成品 8 盘位 NAS，不到 1100。当时想的是这种组装机方便折腾，结果买回来之后出人意料的很好用……对比起来绿联真的是……）</p><p>我家是电信的宽带，并且一直都是使用路由器拨号，因此 ipv6 很简单就可以配置好，这也为 NAS 提供了一个良好的网络条件。</p><p>为什么说是激进向呢？因为本文将不会考虑任何公网 ipv4 相关的使用，包括 frp 等，只战未来（懒）。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>从前言的三点可以看出，核心的需求就四点。</p><ul><li>存储</li><li>音乐</li><li>视频</li><li>相册</li></ul><p>这些可以通过 docker 容器或者是群辉的套件进行解决。</p><h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><p><a href="https://sspai.com/post/88898">https://sspai.com/post/88898</a></p><p>这个教程很多，就不重复造轮子了。</p><h2 id="公网-ipv6-访问"><a href="#公网-ipv6-访问" class="headerlink" title="公网 ipv6 访问"></a>公网 ipv6 访问</h2><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p><a href="https://home.console.aliyun.com/home/dashboard/ProductAndService">https://home.console.aliyun.com/home/dashboard/ProductAndService</a></p><p>首先购买一个阿里云的域名，找个便宜的就行，我买的是 icu 后缀的，9 块一年。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-26ac99001f11143087fb3a1adb6cf14b_b.jpg"><br>在域名管理中进行解析，假如你买的域名是 <a href="http://example.com/">http://example.com</a></p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-934edc3e2d2b82aa07477ba14e27b39e_b.jpg"><br>记录类型为 AAAA，意思是把域名指向一个 ipv6 地址。主机记录填写子域名，例如 storage、nas、stg 等，本文以 nas 为例。记录值可以临时写一个::1，表示环回地址，类似于 127.0.0.1，后面会用 DDNS-GO 自动更新公网 ip。TTL 设置为 10 分钟即可。</p><h3 id="DDNS-GO"><a href="#DDNS-GO" class="headerlink" title="DDNS-GO"></a>DDNS-GO</h3><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-74757f965a161373a7dde9f05dcdc4ed_b.jpg"><br>在套件中心中安装这个 DDNS-GO 套件，打开。登陆到 ddns 服务的后台后，主要填写这几个内容。在阿里云服务中填入 AccessKey 的 ID 和 Secret。这个相当于阿里云 ddns 服务的账号和密码。AccessKey 的 ID 和 Secret 可以在阿里云控制台中申请。现在阿里云不可以查看 Secret 了，所以你只有一次保存的机会，请务必保存好，不然就要重新创建了。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-76b9a747f9167853ebb6a67e2198066e_b.jpg"><br><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-e47b590c9e29aefca540462b3266c76f_b.jpg"><br>DDNS-GO 设置如下</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-b1d49407d41adb26a71e8ecf126cd9ce_b.jpg"><br><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-e1d86f2571d94cf28a762456c83ced42_b.jpg"><br>不启用 ipv4，获取 ip 方式为通过网卡获取，domains 为 子域名。域名，例如 <a href="http://nas.example.com,主要就修改这个地方,点击保存.如果设置无误.网页左边就会有解析成功的提示了.解析成功之后,我们就可以尝试用域名/">http://nas.example.com，主要就修改这个地方，点击保存。如果设置无误。网页左边就会有解析成功的提示了。解析成功之后，我们就可以尝试用域名</a> <a href="http://nas.example.com/">http://nas.example.com/</a> 登陆 nas。这回应该非常方便就可以登录，包括套件也可以用这个域名登录。</p><h3 id="SSL-证书"><a href="#SSL-证书" class="headerlink" title="SSL 证书"></a>SSL 证书</h3><p>这一块其实很简单，但被我弄复杂了。建议域名是谁家的，就用谁家的 SSL。</p><p>我用的腾讯云 SSL，需要在阿里云域名解析下面添加一条 CNAME 解析，挺麻烦的，这里就不过多解释了。</p><p>如果域名和 SSL 是一家的话很简单，就不赘述了。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-c609d5dccc97e02ef6b660d986d21828_b.jpg"><br>在这里添加证书即可，用 https 访问就不会再有“不安全“的提示了。</p><h3 id="UPS"><a href="#UPS" class="headerlink" title="UPS"></a>UPS</h3><p>如果家里的电不稳定，可以购置一台 UPS，我用的山特 TG-BOX 600，毕竟市面上就这一款排插型的 UPS，比较实用，可以插一些别的东西。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-754e289aea9b1d8004bf797dace00826_b.jpg"><br>在控制面板图示位置启用 UPS 即可。</p><h2 id="Synology-Drive-解决存储需求"><a href="#Synology-Drive-解决存储需求" class="headerlink" title="Synology Drive 解决存储需求"></a>Synology Drive 解决存储需求</h2><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-d0082875805f3261fe3e21334a7789ad_b.jpg">  </p><p>安装这个套件</p><p>一般在第一次进入系统时就会询问你是否安装这个套件，直接安装即可。</p><p>然后在电脑上也要下载对应的软件：</p><p><a href="https://www.synology.cn/zh-cn/support/download">https://www.synology.cn/zh-cn/support/download</a></p><p>然后使用你的域名 <a href="http://nas.example.com/">http://nas.example.com/</a>，再加上账号和密码登录即可使用，如果开启按需同步功能的话，就和 onedrive 类似。</p><p>[<a href="https://kb.synology.cn/zh-cn/DSM/tutorial/What/_is/_On-demand/_Sync#:~:text=%E6%8C%89%E9%9C%80%E5%90%8C%E6%AD%A5">https://kb.synology.cn/zh-cn/DSM/tutorial/What\_is\_On-demand\_Sync#:~:text=按需同步</a> 是用于在计算机和 Synology NAS 之间配置 Synology Drive，同步任务的选项。启用此选项后，仅当您打开、修改本地副本或将其固定到计算机时，文件才会下载到本地计算机。下表提供了有关指示已启用 按需同步 的文件的同步状态的图标的详细信息。](<a href="https://kb.synology.cn/zh-cn/DSM/tutorial/What/_is/_On-demand/_Sync#:~:text=%E6%8C%89%E9%9C%80%E5%90%8C%E6%AD%A5">https://kb.synology.cn/zh-cn/DSM/tutorial/What\_is\_On-demand\_Sync#:~:text=按需同步</a> 是用于在计算机和Synology NAS之间配置 Synology Drive,同步任务的选项。 启用此选项后，仅当您打开、修改本地副本或将其固定到计算机时，文件才会下载到本地计算机。 下表提供了有关指示已启用 按需同步 的文件的同步状态的图标的详细信息。)</p><p>按需同步这个功能对于我来说是刚需，如果你只需要一个网盘磁盘功能的话，就不需要安装这个，自带的 smb 访问就挺好了。这个功能目前好像就群辉有，别的平替我暂时没找到。</p><h2 id="Synology-Photos-实现相册备份"><a href="#Synology-Photos-实现相册备份" class="headerlink" title="Synology Photos 实现相册备份"></a>Synology Photos 实现相册备份</h2><p>安装这个套件，这个套件使用比较简单，就不多说了，可以参考以下链接。</p><p><a href="https://www.zabit.cn/support/9289/">https://www.zabit.cn/support/9289/</a></p><p>但是需要解释一下这些功能。</p><ol><li>人物相册应该是需要显卡才能正常使用，不过我没用过，没有这个需求。</li><li>AME 的安装还挺麻烦，需要完美黑才能在套件中心直接安装，这里提供一个安装方法<a href="https://imnks.com/385.html">https://imnks.com/385.html</a>。<strong>这一步一定要做，不然后续很多功能都会受限。</strong></li></ol><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-5c4ed4047399a743240467973e94b7a5_b.jpg">  </p><h2 id="Jellyfin-媒体服务器"><a href="#Jellyfin-媒体服务器" class="headerlink" title="Jellyfin 媒体服务器"></a>Jellyfin 媒体服务器</h2><p>其实我最初使用群辉官方的 Video Station，但怎么说呢？这个程序有以下几个问题：</p><ol><li>刮削器老刮出英文源信息。</li><li>电视端播放器根本用不了。</li><li>手机端播放器不支持倍速，转码等功能。</li></ol><p>综上所述，基本没啥用，所以最近给换成了 Jellyfin。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-3fbe0e9cb318de692dccb4514cf5f2cc_b.jpg"><br>在套件中心安装这个套件。打开，会提示你创建管理员账户，自便即可。</p><p>进入之后，需要进行几项设置，主要是要把<strong>语言和国家</strong>选择正确。</p><p>语言选 chinese，国家好像是 People’s Republic of China。</p><p>这种设定，刮削的信息会以中文优先。</p><h3 id="开启-ipv6-访问"><a href="#开启-ipv6-访问" class="headerlink" title="开启 ipv6 访问"></a>开启 ipv6 访问</h3><p>Jellyfin 默认不支持 ipv6 访问，需要手动开启。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-77e919e5b33ecea34c3abc5e018bb814_b.jpg"><br>勾选启用 ipv4 和启用 ipv6 保存，需要重启一下套件才会生效，可以等我们所有内容设置完之后再重启套件。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-b3ff12453ffe2212cd046d3481df69ac_b.jpg">  </p><h3 id="硬件加速设置"><a href="#硬件加速设置" class="headerlink" title="硬件加速设置"></a>硬件加速设置</h3><p>有了这个，CPU 在转码的时候就不会 100% 了。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-1296092ba9a403c2066ed18492b18869_b.jpg"><br>按图示设置即可。</p><h3 id="测试硬件转码是否有效"><a href="#测试硬件转码是否有效" class="headerlink" title="测试硬件转码是否有效"></a>测试硬件转码是否有效</h3><p>在手机的 jellyfin 上播放一段视频，然后选择 360p 播放，看 NAS 的 CPU 使用率是否低于 50%，如果达到了八九十，就说明硬件加速没有生效。</p><h3 id="创建一个用于观影的普通用户"><a href="#创建一个用于观影的普通用户" class="headerlink" title="创建一个用于观影的普通用户"></a>创建一个用于观影的普通用户</h3><p>我以前觉得这个操作没必要，直到我在电视上把整个媒体库清空。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-f63c4379b229e69715940ac1f340c64a_b.jpg"><br>点击这个加号添加用户，把箭头所指的三个地方取消勾选（其实默认就是取消的）。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-4af559f31b76bf841ad1885c9b5461e7_b.jpg"><br>然后就可以在电视和手机上愉快的观影了。</p><h3 id="开启强制-https"><a href="#开启强制-https" class="headerlink" title="开启强制 https"></a>开启强制 https</h3><p>参考该文即可，主要就是把群辉的证书转换为 PFX 格式。</p><p><a href="https://www.bilibili.com/read/cv9244919/">https://www.bilibili.com/read/cv9244919/</a></p><p> 强制 https 可开可不开，建议开启（不然搞 SSL 证书干嘛）。</p><h2 id="Navidrome-音乐服务器"><a href="#Navidrome-音乐服务器" class="headerlink" title="Navidrome 音乐服务器"></a>Navidrome 音乐服务器</h2><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-2ad5bab8b606b142a39acf3cd54560eb_b.jpg"><br>安装这个套件，打开，同样会提示你设置管理员账户。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-5a224685d2faec0553c659a1ad7a8ca6_b.jpg"><br>在个性化设置中可以调整为中文，注意，每个用户的配置文件是分开的，需要分别设定。</p><h3 id="创建只读权限用户"><a href="#创建只读权限用户" class="headerlink" title="创建只读权限用户"></a>创建只读权限用户</h3><p>理由同上，在图示位置创建即可。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-76e0bee961715bb6c4855e840e2ddf89_b.jpg">  </p><h3 id="手机上播放音乐"><a href="#手机上播放音乐" class="headerlink" title="手机上播放音乐"></a>手机上播放音乐</h3><p>直接打开网站 <a href="http://nas.example.com:8096/">http://nas.example.com:8096/</a> 即可，苹果手机和 mac 都可以把网页创建成一个 app 使用，安卓手机可以创建一个快捷方式。</p><p>也可以下载第三方的音乐 APP，例如 substreamer，但是体验我感觉一般，歌词支持不完善，还容易闪退，我建议直接网页。</p><h3 id="配合-MusicTag-软件搭建个人音乐库"><a href="#配合-MusicTag-软件搭建个人音乐库" class="headerlink" title="配合 MusicTag 软件搭建个人音乐库"></a>配合 MusicTag 软件搭建个人音乐库</h3><p>网上下载的音乐多少带点私货，使用 MusicTag 可以实现：</p><ol><li>按规则（如：歌手 - 歌曲）重命名歌曲。</li><li>自动爬取歌曲的封面和歌词等信息。</li><li>判定重复、无效等音乐文件，供你删除。</li></ol><p>功能很强大，建议人手一个。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-b9c80297c9658afa6fa8f5b7b229195b_b.jpg">  </p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>到目前为止，我们实现了存储、相册、视频、音乐四个功能。但是头顶上还有两座乌云停留。</p><ol><li>数据的安全性如何保证。</li><li>如何实现无缝切换内网公网，也就是说，使用同一个域名，在家里的时候走内网，在外面的时候走公网。</li></ol><p>这两点恰恰是最难处理的，尤其是第二点，需要路由器支持 DNS 劫持。如果不支持也没关系，我们也有其他方法应对。</p><h2 id="Hyper-Backup-备份到天翼云盘"><a href="#Hyper-Backup-备份到天翼云盘" class="headerlink" title="Hyper Backup 备份到天翼云盘"></a>Hyper Backup 备份到天翼云盘</h2><p>我个人认为，只要是存储在本地硬盘的内容，就没有绝对的安全一说，在备份这件事情上，还真得相信云盘。电信给了我家 4T 的空间，用来备份正合适。</p><p>天翼云盘不能直接挂载，需要通过 Alist 挂载 webdav 实现。</p><h3 id="Alist-挂载天翼云盘"><a href="#Alist-挂载天翼云盘" class="headerlink" title="Alist 挂载天翼云盘"></a>Alist 挂载天翼云盘</h3><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-5d01251a33723ba0257f789ecbea083c_b.jpg"><br>下载这个套件，打开，改掉默认的账户密码。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-9af2802f43090a8b833a4cc0aecc12fc_b.jpg"><br>点击管理，进入管理页面。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-1c3a8dc5a1403d9c8a1f240a1f457547_b.jpg"><br>添加一个客户端，需要设置的地方如下</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-2a40c20ecf131856dcb9e308f9d076b3_b.jpg"><br>用户名就是你的手机号。</p><p>然后点及保存，看到状态为 work 的话就成功了。重新打开 alist，可以看到挂载的网盘，</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-e3e845047633ecf6fb6990e7792cfade_b.jpg"><br>点进去，有文件就行</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-1451ff13daed395eb993e39e22072531_b.jpg">  </p><h3 id="用户文件备份到天翼云盘"><a href="#用户文件备份到天翼云盘" class="headerlink" title="用户文件备份到天翼云盘"></a>用户文件备份到天翼云盘</h3><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-4ba49fa47b2c07c379c5acfe8a788f71_b.jpg"><br>点击 + 创建备份任务</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-ea540f302f5597332ef6aa248087c60b_b.jpg"><br><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-f725d706da32586bff4c8ed0e1a05e7b_b.jpg"><br><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-2800c4869741486912e40ba7435b98d9_b.jpg"><br>以上内容根据你的实际情况填写即可。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-3c4bad21aab2ec3c5e8f1529cc2e516d_b.jpg"><br>目的地这个地方需要注意，服务器地址抄我的即可，用户账号和密码是你在<strong>alist 中所设置的账户和密码</strong>，而不是天翼云的账户和密码。</p><p>创建好任务之后，可以手动备份一次，后面他自己备份就行。Hyper Backup 的备份是增量的，每次只会备份修改过的内容，这一点非常好。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-fe8e1ca5a36c62aac051e6bd1aecd67b_b.jpg"><br>在版本列表中可以追溯以前的文件，这个功能也非常实用。</p><h3 id="如果群辉崩了，但我需要继续使用上面的文件怎么办？"><a href="#如果群辉崩了，但我需要继续使用上面的文件怎么办？" class="headerlink" title="如果群辉崩了，但我需要继续使用上面的文件怎么办？"></a>如果群辉崩了，但我需要继续使用上面的文件怎么办？</h3><p>这个情况虽然很少出现，但一出现就会很致命，因此，我们需要一个可靠的 plan B。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-cea2c884a943e963d7952a4287da65f8_b.jpg"><br>安装这个同步插件。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-752bd94c27215438b34f900f103dbd6b_b.jpg"><br>选择你拥有的网盘，登录账号设置即可，比较简单，就不赘述了。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-e9d8da5d3992fc3ec548644dc4c93837_b.jpg"><br>在任务列表中可以查看连接情况，途中的意思是同步群辉的 &#x2F;homes&#x2F;sukipai 文件夹和 onedrive 中的 &#x2F;群辉同步文件&#x2F;sukipai 文件夹。这样设定主要是考虑到 onedrive 中可能自动在根目录生成一些文件，这些没用的文件会反向同步到 NAS，因此同步文件夹最好不要放在根目录。当然，这个你可以自行设定。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-fae893a53264ad35621060570ab20c15_b.jpg"><br>这是我女朋友单纯备份照片的实例，她只使用群辉的相册功能，因此同步相册就够了。</p><h2 id="路由器-DNS-劫持实现内外网访问"><a href="#路由器-DNS-劫持实现内外网访问" class="headerlink" title="路由器 DNS 劫持实现内外网访问"></a>路由器 DNS 劫持实现内外网访问</h2><p>这一块比较复杂，这里仅简单讲解一下思路，后面我可能会单独拿一篇文章来写这个功能。</p><p>在阿里云的 DNS 解析中，我们将域名 <a href="http://nas.example.com/">http://nas.example.com/</a> 解析为了 [ipv6] 地址，因此，理论上无论在何方，我都可以通过域名 <a href="http://nas.example.com/">http://nas.example.com/</a> 来访问 NAS。在家中，除了使用域名，我们还可以直接使用内网的 ipv4 地址来访问 NAS，从而实现更快的访问速度，拒绝中间商。</p><p>而对比内外网，多了一个什么设备？路由器。如何在路由器中劫持域名 <a href="http://nas.example.com,让他不通过/">http://nas.example.com，让他不通过</a> DNS 服务器来进行域名解析，而是直接被解析为群辉主机的 ipv4 地址，不就可以实现这个功能了吗？</p><p>这样的话，我们在外面，通过 DNS 服务器解析域名为 [ipv6]，在家中，通过路由器解析为 ipv4，岂不美哉。</p><p>不过这事说起来容易做起来难，路由器不支持的话，就需要虚拟一个旁路网关（旁路由）来实现 DNS 劫持——这样做不需要购买额外的设备，效果如下。</p><p><img src="/2024/07/07/%E9%BB%91%E7%BE%A4%E6%99%96_NAS_Two_in_One_%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%85%A5%E5%9C%9F%E6%BF%80%E8%BF%9B%E5%90%91%E6%95%99%E7%A8%8B_EberyThingSay/v2-f588fab776cb6740aaf575643ec7d686_b.jpg"><br>在内网直接将 <a href="http://nas.example.com/">http://nas.example.com/</a> 劫持为 192.168.9.100（群辉 ipv4 地址）。</p><p>但这在实际操作会存在一些问题，内网解析 IPv4，公网解析 IPv6，实际上是把这个域名在内网变成了双栈（也就是既可以解析到 v6 地址，也可以解析到 v4 地址）。而在操作系统中，几乎都会优先使用 IPv6 解析地址，这是因为 v6 是下一代标准，未来肯定会全面向 v6 过渡。</p><p>这就导致我们的确在 v4 层面劫持了这一域名，但实际上并没有起到效果。</p><p>再者，我实测在同一局域网下，公网 v6 的传输速度与内网 v4 差不多，只是网页加载速度 v4 会快一些。所以，我觉得只使用公网 v6 也够了，不用多加配置，也不用添加旁路由，用 v4 的时候可以用 ip 地址访问。</p><h2 id="那么域名挟持真的一点用也没有吗？"><a href="#那么域名挟持真的一点用也没有吗？" class="headerlink" title="那么域名挟持真的一点用也没有吗？"></a>那么域名挟持真的一点用也没有吗？</h2><p>其实也不是的，域名挟持对于做内网穿透的用户有大用，能够真正实现内外网无缝切换。</p><p>例如：我首先把群晖的访问端口改为 52491（v4 用户默认端口必改）穿透为 <code>192.168.9.100:52491 -&gt; frp-example.cc:52491</code>。然后在内网劫持<code>frp-example.cc</code>为<code>192.168.9.100</code>，</p><p>由于 v4 之间不存在优先级关系，劫持了就是劫持了，内网下面只能放问到 <code>192.168.9.100</code>，所以就很完美地实现了内外网无缝衔接。</p><p>只要注意群晖访问端口与穿透端口一致即可。</p><p>本来说不讲 v4 的，结果还是说了这么一大堆。。。。。。</p><p>下一篇文章还是会稍微讲讲旁路由和域名劫持相关的内容。</p>]]></content>
    
    
    <categories>
      
      <category>NAS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于 windows host，USB 外接虚拟黑群晖方案分享</title>
    <link href="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/"/>
    <url>/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="基于-windows-host，USB-外接虚拟黑群晖方案分享"><a href="#基于-windows-host，USB-外接虚拟黑群晖方案分享" class="headerlink" title="基于 windows host，USB 外接虚拟黑群晖方案分享"></a>基于 windows host，USB 外接虚拟黑群晖方案分享</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在校期间试了很多类型的网盘，包括 Onedrive, seafile（学校搭建），百度网盘等，都不是很满意。</p><p>Onedrive：网速慢</p><p>seafile：综合体验最好，学校自建。但是学校运维不太行，隔三差五崩掉，急用的时候简直崩溃。</p><p>百度网盘：你还是老实做个资源站吧</p><p>最终我决定搞一个黑群晖，正好快毕业了，把手里的机械君利用起来，做一个小型 All in One。</p><h3 id="为什么用-windows-做-host？"><a href="#为什么用-windows-做-host？" class="headerlink" title="为什么用 windows 做 host？"></a>为什么用 windows 做 host？</h3><p>其实我一开始是用的 NixOS，搭配 KVM 做虚拟黑群晖，其实这样做没啥问题，非常稳定，但是我偶尔要用一下电脑的话，就还得再开一个 windows 虚拟机，以使用 office、raylink 等软件。</p><p>考虑到有虚拟 NAS 之后，本地存储需求将会急剧减少，所以我觉得把闲置的 128G 硬盘拿来装 win10 LTSC（稳定），然后装几个常用软件和 vmware，存储需求就用 vmware 虚拟黑群晖，NAT 方案，我表达能力不太行，用图说话。</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-33d353a13c80e0f1fcf3428b98288bb3_b.jpg">  </p><p>NAT 简单模型</p><p>等毕业之后，如果有路由器的话，也可以从 NAT 很方便地改为<strong>桥接</strong>，从而满足不同的需求。</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-e2b34adff51daae17b21119ea07573b7_b.jpg">  </p><p>桥接设备</p><p>注：由于需要做内网穿透，所以最好令内网访问与公网访问端口一致，方便做 DNS 劫持，从而实现内外网只能切换，所以可能需要做端口转发或者<strong>直接修改端口（推荐），</strong>让 5001 端口映射或修改为内网穿透的端口。这种情况下，将群晖链接到一台可以做 DNS 劫持的设备最合适。</p><p>第一张图中，电脑本身可以做 DNS 劫持（选择 <strong>NAT</strong> 的原因）。</p><p>第二张图中，路由器可以做 DNS 劫持，或者直接修改群晖端口好（<strong>桥接</strong>的原因）。</p><p>不过还是得根据实际需求来。</p><p>例如，穿透后的公网为 <a href="http://example.com:58819/">http://example.com:58819</a></p><p>进行端口转发或修改端口 5001 -&gt; 58819</p><p>这时候，你可以用 192.168.XX.XX:58819 进行内网访问，也可以用 <a href="http://example.com:58819/">http://example.com:58819/</a> 进行公网访问。</p><p>此时，将内网的 <a href="http://example.com/">http://example.com/</a> 进行劫持，<a href="http://example.com/">http://example.com/</a> -&gt; 192.168.XX.XX。</p><p>就可以实现，连路由器的时候用内网，否则联公网（想出这个方案的真是人才）。</p><p>这个是后话，可能后面会对这篇文章进行补充。</p><h2 id="安装-DS918-黑群晖"><a href="#安装-DS918-黑群晖" class="headerlink" title="安装 DS918+ 黑群晖"></a>安装 DS918+ 黑群晖</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.bilibili.com/read/cv30010953/">https://www.bilibili.com/read/cv30010953/</a> （USB 改内置）</p><p><a href="https://github.com/RROrg/rr/releases">https://github.com/RROrg/rr/releases</a> （黑群晖引导文件）下载 rr-<version>.img.zip 文件解压</version></p><h3 id="硬盘格式转换"><a href="#硬盘格式转换" class="headerlink" title="硬盘格式转换"></a>硬盘格式转换</h3><p><a href="https://www.starwindsoftware.com/download-starwind-products">https://www.starwindsoftware.com/download-starwind-products</a></p><p>使用这个软件将 img 的 raw 硬盘转换为 vmdk</p><h3 id="虚拟机创建"><a href="#虚拟机创建" class="headerlink" title="虚拟机创建"></a>虚拟机创建</h3><p>使用 vmware 创建一台 linux64 虚拟机，使用转换好的硬盘，除此之外，还需要添加一块 sata 系统盘，留下这些硬件即可（CD&#x2F;DVD 也可以不要），配置不用太高，内存最好 4G+。</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-829982a6d01365929258b99bcfb11b10_b.jpg"><br>启动模式可以调成 UEFI。</p><p>注：群晖跟一般的电脑系统不一样，每插一块硬盘，该硬盘上面都会安装一个系统，从而实现硬盘拔插或坏掉不影响系统使用。这里添加的硬盘只是装系统用的，后面会使用 sata 或 usb 的实体硬盘进行数据存储。如果系统稳定的话，这块 sata 盘可以删掉。</p><h3 id="安装黑群晖系统"><a href="#安装黑群晖系统" class="headerlink" title="安装黑群晖系统"></a>安装黑群晖系统</h3><p><a href="https://post.smzdm.com/p/am3epen4/">https://post.smzdm.com/p/am3epen4/</a></p><p>根据这篇文章安装即可，主要为四个步骤</p><ol><li>更换语言</li><li>选择型号（如果只使用 SATA，可以选择 DS923+；如果需要外接 USB 硬盘，选 DS918+）</li><li>版本选择：最新版</li><li>编译引导并启动</li></ol><p>然后浏览器 ip:5000 进入系统安装页面，点击安装，不要启动数据收集和更新等等服务。</p><p>注：这一步直接选择<strong>自动下载</strong>即可，一般都能安装成功，如果不行再手动下载安装。</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-857af01419147db1d74e957aa1e63dc1_b.jpg"><br>装好之后进入系统，进行一些初始化啥的，不赘述。</p><h3 id="将-USB-设定为内置硬盘"><a href="#将-USB-设定为内置硬盘" class="headerlink" title="将 USB 设定为内置硬盘"></a>将 USB 设定为内置硬盘</h3><p><a href="https://www.bilibili.com/read/cv30010953/">https://www.bilibili.com/read/cv30010953/</a></p><p>直接跳到，<strong>使用 RR 的设置方法</strong>。</p><p>跟着教程走就行，主要说一下计算。</p><p>打开计算器</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-0dd3be70291db9726facb97469e8da15_b.jpg"><br>功能比较简陋，需要在“查看”调成程序员模式，并调成程序员模式</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-2aac833a183dba24416142253622ba07_b.jpg"><br>然后用“or”按钮计算 usbportcfg | internalportcfg</p><p>然后设定 usbportcfg&#x3D;0，internalportcfg&#x3D;计算出的值即可，以我为例</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@HeiSynology</span><span class="hljs-symbol">:/etc</span>.defaults<span class="hljs-variable">$ </span>cat synoinfo.conf  | grep usbport<br>usbportcfg=<span class="hljs-string">&quot;0x3f00000&quot;</span><br>root<span class="hljs-variable">@HeiSynology</span><span class="hljs-symbol">:/etc</span>.defaults<span class="hljs-variable">$ </span>cat synoinfo.conf  | grep internalport<br>internalportcfg=<span class="hljs-string">&quot;0xfffff&quot;</span><br></code></pre></td></tr></table></figure><p>计算 0x3f00000 | 0xffff &#x3D; 3FFFFFF</p><p>所以设定</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">usbportcfg</span><span class="hljs-operator">=</span><span class="hljs-number">0</span><br><span class="hljs-attribute">internalportcfg</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>x3FFFFFF<br></code></pre></td></tr></table></figure><p>然后重新编译引导，启动，就可以看到 usb 硬盘被识别为内置。</p><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-f78ad3dd9b44630487f48a723c275ea8_b.jpg"><br>硬盘 2 是虚拟硬盘，硬盘 17 是我的测使用 U 盘。</p><h3 id="固定-ip"><a href="#固定-ip" class="headerlink" title="固定 ip"></a>固定 ip</h3><p>vmware 创建的虚拟机 ipv4 地址似乎不会变，不用动。</p><h2 id="公网访问"><a href="#公网访问" class="headerlink" title="公网访问"></a>公网访问</h2><p><a href="https://doc.natfrp.com/app/synology.html">https://doc.natfrp.com/app/synology.html</a></p><p>在群晖系统中把访问端口修改为你申请到的内网穿透端口，例如 58819。</p><p>确认你此时能够在内网通过 内网 ip:58819 访问管理页面</p><p>然后做好内网穿透。</p><p>实测，穿透 5001 &#x3D;&gt; 58819 端口基本上够用了，内网里面手机电脑连接 photos，drive 都可以直接用 5001 &#x3D;&gt; 58819 端口进行登陆。</p><p><strong>但是外网有坑</strong></p><p><a href="https://zhuanlan.zhihu.com/p/679868467">https://zhuanlan.zhihu.com/p/679868467</a></p><p>如果电脑端需要外网连接 Drive，需要再映射一下 6690 端口，手机端和内网不用，直接 58819 访问即可。</p><h2 id="功能修复"><a href="#功能修复" class="headerlink" title="功能修复"></a>功能修复</h2><p><a href="https://post.smzdm.com/p/a7pw05r9/">https://post.smzdm.com/p/a7pw05r9/</a></p><p>主要是视频解码方面的内容，按以上文章一键修复。</p><h3 id="洗白：修复除-QC-外功能"><a href="#洗白：修复除-QC-外功能" class="headerlink" title="洗白：修复除 QC 外功能"></a>洗白：修复除 QC 外功能</h3><p><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-0d20dbc7add9db98d41eea32420a76b6_b.jpg"><br><img src="/2024/05/20/%E5%9F%BA%E4%BA%8E_windows_hostUSB_%E5%A4%96%E6%8E%A5%E8%99%9A%E6%8B%9F%E9%BB%91%E7%BE%A4%E6%99%96%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB_EberyThingSay/v2-c7584d0837975168edbeb6b4c98e07f7_b.jpg"><br>找到这个自定义 SN&#x2F;MAC 的选项，输入购买的 SN &#x2F;MAC 即可。</p><h2 id="Drive-空文件夹问题"><a href="#Drive-空文件夹问题" class="headerlink" title="Drive 空文件夹问题"></a>Drive 空文件夹问题</h2><p>表现：某文件夹在网页端有内容，但使用 Drive 进行按需同步的时候，文件夹显示为空。</p><p><a href="https://zhuanlan.zhihu.com/p/681513928">https://zhuanlan.zhihu.com/p/681513928</a></p><p>将 homes&#x2F;user 的属性勾选“应用到这个文件夹、子文件夹及文件夹”即可。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>如果虚拟机关机了，启动虚拟机时要把硬盘及时连通进去。</li><li>如果 host 不常使用的话，还是建议用 PVE 或者 linux 做 host，windows 还是有些不稳定。</li><li>如果 host windows 要搞操作，先关掉虚拟机再操作，比如垃圾清理内存释放之类的。</li><li>如果你不幸在操作之后，群晖系统出现<strong>硬盘损坏的提示</strong>，不用慌，重启一下虚拟机，自动修复硬盘即可。</li></ol>]]></content>
    
    
    <categories>
      
      <category>NAS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PVE 内网穿透</title>
    <link href="/2024/05/13/PVE_%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F_EberyThingSay/"/>
    <url>/2024/05/13/PVE_%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="PVE-内网穿透"><a href="#PVE-内网穿透" class="headerlink" title="PVE 内网穿透"></a>PVE 内网穿透</h1><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>DNS: 223.5.5.5，需要联网</p><h2 id="换源（转载自-Tismagic：PVE8-1-下软件源更新与其它配置）"><a href="#换源（转载自-Tismagic：PVE8-1-下软件源更新与其它配置）" class="headerlink" title="换源（转载自 Tismagic：PVE8.1 下软件源更新与其它配置）"></a>换源（转载自 Tismagic：PVE8.1 下软件源更新与其它配置）</h2><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs leaf"><span class="hljs-punctuation">#</span> 1. 更新debian 软件源<br><span class="hljs-punctuation">#</span><span class="hljs-params">(任选一个源)</span><br><span class="hljs-punctuation">#</span>1.1.1 清华源<br><span class="hljs-punctuation">#</span> 参考: https://mirrors.tuna.tsinghua.edu.cn/help/debian/<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.tuna.tsinghua.edu.cn/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list  <br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.tuna.tsinghua.edu.cn/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.2 中科大源<br><span class="hljs-punctuation">#</span> 参考: https://mirrors.ustc.edu.cn/help/proxmox.html<br>sed -i.bak &#x27;s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g&#x27; /etc/apt/sources.list<br>sed -i &#x27;s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g&#x27; /etc/apt/sources.list<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.3 aliyun源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.aliyun.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>修改文件的同时, 会创建一个.bak后缀的备份文件<br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.aliyun.com/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list  <span class="hljs-punctuation">#</span>阿里Debian源<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.4 163源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.163.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>163Debian源<br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.163.com/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>163Debian源<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span> 2. PVE 软件源<br><span class="hljs-punctuation">#</span> 删除默认企业源<br>rm -rf /etc/apt/sources.list.d/pve-enterprise.list<br><br><span class="hljs-punctuation">#</span><span class="hljs-params">(任选一个源)</span><br><span class="hljs-punctuation">#</span> 2.1.1 清华源<br>echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bookworm pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list<br><br><span class="hljs-punctuation">#</span> 2.1.2 中科大源<br>echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bookworm pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list<br><br><span class="hljs-punctuation">#</span>3 CEPH分布式源<br><span class="hljs-punctuation">#</span>3.1.1 中科大源<br>echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription&quot; &gt; /etc/apt/sources.list.d/ceph.list     <span class="hljs-punctuation">#</span>中科大源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">http</span><span class="hljs-punctuation">:</span>//download.proxmox.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">https</span><span class="hljs-punctuation">:</span>//mirrors.ustc.edu.cn/proxmox/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /usr/share/perl5/PVE/CLI/pveceph.pm     <span class="hljs-punctuation">#</span>中科大源<br><br><span class="hljs-punctuation">#</span> --------------------------------------------------------<br><span class="hljs-punctuation">#</span> 更新索引, 升级安装软件包, 重启系统<br><span class="hljs-punctuation">#</span> --------------------------------------------------------<br><span class="hljs-punctuation">#</span> 如果无法拉取https软件源时安装<br>apt update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br>apt update &amp;&amp; apt dist-upgrade<br><br><span class="hljs-punctuation">#</span>4.LXC容器仓库源(CT)<br><span class="hljs-punctuation">#</span> 4.1.1 中科大源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">http</span><span class="hljs-punctuation">:</span>//download.proxmox.com/images<span class="hljs-punctuation">#</span><span class="hljs-keyword">https</span><span class="hljs-punctuation">:</span>//mirrors.ustc.edu.cn/proxmox/images<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /usr/share/perl5/PVE/APLInfo.pm  <br>systemctl restart pvedaemon  <span class="hljs-punctuation">#</span> 稍等下手动刷新webui 页面<br><br><span class="hljs-punctuation">#</span> 删除订阅弹窗<br>sed -Ezi.bak &quot;s/(Ext.Msg.show\(\&#123;\s+title: gettext\(&#x27;No valid sub)/void\(\&#123; \/\/\1/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js &amp;&amp; systemctl restart pveproxy.service<br><span class="hljs-punctuation">#</span> 执行完成后，需注销PVE登录后, 重新启动浏览器<br></code></pre></td></tr></table></figure><h2 id="启用内网穿透"><a href="#启用内网穿透" class="headerlink" title="启用内网穿透"></a>启用内网穿透</h2><p><a href="https://www.natfrp.com/tunnel/">https://www.natfrp.com/tunnel/</a> 申请一个免费节点（本地端口为 8006）</p><p><img src="/2024/05/13/PVE_%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F_EberyThingSay/v2-c76d91e2501b825cda133f7685a647bc_b.jpg"><br> 下载 sakura 的 Frpc 文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://nya.globalslb.net/natfrp/client/launcher-unix/<span class="hljs-number">3</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>/natfrp-service_linux_amd64.tar.zst<br></code></pre></td></tr></table></figure><p>假设保存在 &#x2F;root&#x2F;Documents&#x2F; 下面，cd 到该目录，解压缩，给权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/sakurafrp<br>tar -I zstd xvf natfrp-service_linux_amd64.tar.zst<br><span class="hljs-built_in">chmod</span> +x ./*<br></code></pre></td></tr></table></figure><p>先运行一次 .&#x2F;frpc 生成配置文件，配件文件保存在 .&#x2F;frpc.ini 中</p><h3 id="PVE-系统添加-frpc-自启动"><a href="#PVE-系统添加-frpc-自启动" class="headerlink" title="PVE 系统添加 frpc 自启动"></a>PVE 系统添加 frpc 自启动</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/</span>sakurafrp.service<br></code></pre></td></tr></table></figure><p>然后编写一个启动脚本，如果你的文件目录跟我放的一样，可以复制粘贴</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=sakuraFrp for systemd<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">ExecStart</span>=/opt/sakurafrp/frpc -c /opt/sakurafrp/frpc.ini<br><span class="hljs-attr">Type</span>=simple<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=default.target<br></code></pre></td></tr></table></figure><p>重启，登陆 root, 查看进程状态是否正常</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl status sakurafrp</span><br></code></pre></td></tr></table></figure><p>如果一切正常，直接通过 sakura 的 [IP]:[Port] 访问即可。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 nix-darwin 为 sonoma 配置一个简洁高效的 zsh</title>
    <link href="/2024/04/29/%E4%BD%BF%E7%94%A8_nix-darwin_%E4%B8%BA_sonoma_%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84_zsh_EberyThingSay/"/>
    <url>/2024/04/29/%E4%BD%BF%E7%94%A8_nix-darwin_%E4%B8%BA_sonoma_%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84_zsh_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="使用-nix-darwin-为-sonoma-配置一个简洁高效的-zsh"><a href="#使用-nix-darwin-为-sonoma-配置一个简洁高效的-zsh" class="headerlink" title="使用 nix-darwin 为 sonoma 配置一个简洁高效的 zsh"></a>使用 nix-darwin 为 sonoma 配置一个简洁高效的 zsh</h1><p>更新原因：用了很久的 homebrew，感觉不是很完美，就尝试切换到了 nix，挺香的。</p><p>不过本文仅适合入门，nix 也仅配置了 flake 和 configuration，不包括 home-manager（macos 上问题太多）。</p><hr><p>游戏本 xxxx</p><p>macbook ++++</p><p>自己拿一台游戏本，整天折腾 linux，消磨了我很多时光。遂重新审视自己的需求，发现其实游戏玩的不多，故卖之，换 macbook。</p><p>但是终端不像 Arch 那么好配置了，所以还是记录一下吧。</p><h2 id="安装-Darwin-nix"><a href="#安装-Darwin-nix" class="headerlink" title="安装 Darwin-nix"></a>安装 Darwin-nix</h2><p>一行代码解决</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sh &lt;(curl -L https:<span class="hljs-regexp">//</span>nixos.org<span class="hljs-regexp">/nix/i</span>nstall)<br></code></pre></td></tr></table></figure><p>终端输入 nix，有输出则说明成功，使用 nix 必须使用科学上网工具，如果没有请滑走。</p><h2 id="nix-基本方案说明"><a href="#nix-基本方案说明" class="headerlink" title="nix 基本方案说明"></a>nix 基本方案说明</h2><p>本人仅使用 nix 配置终端工具，且不包括 python（我使用自带 python+pdm，更方便，nix 先天不善于处理 python）</p><h2 id="nix-简单配置"><a href="#nix-简单配置" class="headerlink" title="nix 简单配置"></a>nix 简单配置</h2><p>在 ~&#x2F;.zprofile 中添加</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">export <span class="hljs-type">NIX_PATH</span><span class="hljs-operator">=</span>darwin<span class="hljs-operator">-</span>config<span class="hljs-operator">=</span><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.nixpkgs/</span>darwin<span class="hljs-operator">-</span>configuration.nix:<span class="hljs-regexp">/nix/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/nix/</span>profiles<span class="hljs-regexp">/per-user/</span>root<span class="hljs-regexp">/channels:$HOME/</span>.nix<span class="hljs-operator">-</span>defexpr<span class="hljs-regexp">/channels:nixpkgs-overlays=$HOME/</span>.nixpkgs<span class="hljs-regexp">/overlays/</span>:nixpkgs<span class="hljs-operator">-</span>overlays<span class="hljs-operator">=</span><span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.nixpkgs/</span>overlays<span class="hljs-operator">/</span><br></code></pre></td></tr></table></figure><p>然后 clone 我的模板仓库<a href="https://github.com/songguokunsgg/nixos-darwin-config">https://github.com/songguokunsgg/nixos-darwin-config</a></p><p>将 clone 下来的文件夹移动为 <code>~/.nixpkgs</code></p><p>将 flake.nix 中的主机名修改为你自己的主机名</p><p>然后 cd 到~&#x2F;.nixpkgs, 使用以下命令进行第一次安装</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">nix run nix</span><span class="hljs-literal">-</span><span class="hljs-comment">darwin</span> <span class="hljs-literal">--</span><span class="hljs-comment">extra</span><span class="hljs-literal">-</span><span class="hljs-comment">experimental</span><span class="hljs-literal">-</span><span class="hljs-comment">features nix</span><span class="hljs-literal">-</span><span class="hljs-comment">command</span> <span class="hljs-literal">--</span><span class="hljs-comment">extra</span><span class="hljs-literal">-</span><span class="hljs-comment">experimental</span><span class="hljs-literal">-</span><span class="hljs-comment">features flakes</span> <span class="hljs-literal">--</span> <span class="hljs-comment">switch</span> <span class="hljs-literal">--</span><span class="hljs-comment">flake</span> <span class="hljs-string">.</span><br></code></pre></td></tr></table></figure><p>后续使用这两行命令进行升级</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">nix flake update ~<span class="hljs-string">/.nixpkgs</span><br>darwin-rebuild switch <span class="hljs-params">--flake</span> ~<span class="hljs-string">/.nixpkgs</span><br></code></pre></td></tr></table></figure><p>如果没有找到 darwin-rebuild，检查环境变量。</p><p>仓库的 README 有一些其他说明，可酌情查看。</p><h2 id="zsh-配置"><a href="#zsh-配置" class="headerlink" title="zsh 配置"></a>zsh 配置</h2><h3 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h3><p>主要用到 4 个插件：</p><ul><li>zsh-autosuggestions</li><li>zsh-syntax-highlighting</li><li>zsh-completions（可选）</li><li>zsh-theme-powerlevel10k（可选）</li></ul><p>前三个是功能性插件，最后一个是主题插件，如果对美观要求不高的话，可以不装最后一个</p><h3 id="拉取功能插件"><a href="#拉取功能插件" class="headerlink" title="拉取功能插件"></a>拉取功能插件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 自动补全</span><br>git clone --depth=<span class="hljs-number">1</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions ~<span class="hljs-regexp">/.zsh/</span>plugins/zsh-autosuggestions<br><br><span class="hljs-comment"># 语法高亮</span><br>git clone --depth=<span class="hljs-number">1</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-syntax-highlighting ~<span class="hljs-regexp">/.zsh/</span>plugins/zsh-syntax-highlighting<br><br><span class="hljs-comment"># 这个插件我也没弄明白是干嘛的，可选。。。。</span><br>git clone --depth=<span class="hljs-number">1</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-completions ~<span class="hljs-regexp">/.zsh/</span>plugins/zsh-completions<br><br><span class="hljs-comment"># p10k 主题</span><br>git clone --depth=<span class="hljs-number">1</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/romkatv/</span>powerlevel10k.git ~<span class="hljs-regexp">/.zsh/</span>plugins/powerlevel10k<br></code></pre></td></tr></table></figure><p>将 zsh 的插件统一放置在 ~&#x2F;.zsh&#x2F;plugins&#x2F; 下</p><h3 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h3><p>推荐使用 nerd-fonts-hack 字体作为终端字体</p><p><img src="/2024/04/29/%E4%BD%BF%E7%94%A8_nix-darwin_%E4%B8%BA_sonoma_%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84_zsh_EberyThingSay/v2-84f7a6bbb8a6e11575afa1e8731a7d12_b.jpg">  </p><h3 id="编写-zsh-配置文件"><a href="#编写-zsh-配置文件" class="headerlink" title="编写 zsh 配置文件"></a>编写 zsh 配置文件</h3><p>环境变量存放位置为 ～&#x2F;.zprofile，配置文件在 ~&#x2F;.zshrc，主要编写 ～&#x2F;. zshrc 文件</p><p>将以下代码加入 .zshrc 以使用插件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> ~<span class="hljs-regexp">/.zsh/</span>plugins<span class="hljs-regexp">/zsh-syntax-highlighting/</span>zsh-syntax-highlighting.zsh<br><span class="hljs-keyword">source</span> ~<span class="hljs-regexp">/.zsh/</span>plugins<span class="hljs-regexp">/zsh-autosuggestions/</span>zsh-autosuggestions.zsh<br><span class="hljs-keyword">source</span> ~<span class="hljs-regexp">/.zsh/</span>plugins<span class="hljs-regexp">/zsh-completions/</span>zsh-completions.plugin.zsh<br><span class="hljs-keyword">source</span> ~<span class="hljs-regexp">/.zsh/</span>plugins<span class="hljs-regexp">/powerlevel10k/</span>powerlevel10k.zsh-theme<br></code></pre></td></tr></table></figure><p>然后进行功能配置，直接复制粘贴下面代码即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#color&#123;&#123;&#123;</span><br><span class="hljs-built_in">autoload</span> -U colors &amp;&amp; colors<br><br><span class="hljs-comment">#命令别名 &#123;&#123;&#123;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cp</span>=<span class="hljs-string">&#x27;cp -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">mv</span>=<span class="hljs-string">&#x27;mv -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">rm</span>=<span class="hljs-string">&#x27;rm -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">ls</span>=<span class="hljs-string">&#x27;ls -a --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> grep=<span class="hljs-string">&#x27;grep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> vim=<span class="hljs-string">&#x27;nvim&#x27;</span><br><span class="hljs-built_in">alias</span> vi=<span class="hljs-string">&#x27;nvim&#x27;</span><br><br><span class="hljs-comment"># 更新软件</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">update</span></span>() &#123;<br>nix flake update ~/.nixpkgs<br>darwin-rebuild switch --flake ~/.nixpkgs<br>&#125;<br><br><span class="hljs-comment"># 清理垃圾</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">clean</span></span>() &#123;<br>nix-collect-garbage -d<br>&#125;<br><br><span class="hljs-comment">#终端代理</span><br>hostip=<span class="hljs-string">&quot;127.0.0.1&quot;</span><br><span class="hljs-comment"># hostip=$(cat /etc/resolv.conf |grep -oP &#x27;(?&lt;=nameserver\ ).*&#x27;)</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">proxy_on</span></span>() &#123;<br>    proxy_statu=<span class="hljs-string">&quot;on&quot;</span><br>    <span class="hljs-built_in">export</span> https_proxy=<span class="hljs-string">&quot;http://<span class="hljs-variable">$&#123;hostip&#125;</span>:7890&quot;</span><br>    <span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;http://<span class="hljs-variable">$&#123;hostip&#125;</span>:7890&quot;</span><br>    <span class="hljs-built_in">export</span> all_proxy=<span class="hljs-string">&quot;socks5://<span class="hljs-variable">$&#123;hostip&#125;</span>:7890&quot;</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;终端代理已开启。&quot;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">proxy_off</span></span>()&#123;<br>    <span class="hljs-built_in">unset</span> http_proxy https_proxy all_proxy<br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;终端代理已关闭。&quot;</span><br>    proxy_statu=<span class="hljs-string">&quot;off&quot;</span><br>&#125;<br><br><span class="hljs-keyword">for</span> color <span class="hljs-keyword">in</span> RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; <span class="hljs-keyword">do</span><br><span class="hljs-built_in">eval</span> _<span class="hljs-variable">$color</span>=<span class="hljs-string">&#x27;%&#123;$terminfo[bold]$fg[$&#123;(L)color&#125;]%&#125;&#x27;</span><br><span class="hljs-built_in">eval</span> <span class="hljs-variable">$color</span>=<span class="hljs-string">&#x27;%&#123;$fg[$&#123;(L)color&#125;]%&#125;&#x27;</span><br>(( count = <span class="hljs-variable">$count</span> + <span class="hljs-number">1</span> ))<br><span class="hljs-keyword">done</span><br>FINISH=<span class="hljs-string">&quot;%&#123;<span class="hljs-variable">$terminfo</span>[sgr0]%&#125;&quot;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#命令提示符</span><br>RPROMPT=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$RED</span>%D %T<span class="hljs-variable">$FINISH</span>&quot;</span>)<br>PROMPT=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CYAN</span>%n@<span class="hljs-variable">$YELLOW</span>%M:<span class="hljs-variable">$GREEN</span>%/<span class="hljs-variable">$_YELLOW</span>&gt;<span class="hljs-variable">$FINISH</span> &quot;</span>)<br><br><span class="hljs-comment">#PROMPT=$(echo &quot;$BLUE%M$GREEN%/</span><br><span class="hljs-comment">#$CYAN%n@$BLUE%M:$GREEN%/$_YELLOW&gt;&gt;&gt;$FINISH &quot;)</span><br><span class="hljs-comment">#标题栏、任务栏样式&#123;&#123;&#123;</span><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$TERM</span> <span class="hljs-keyword">in</span> (*xterm*|*rxvt*|(dt|k|E)term)<br><span class="hljs-function"><span class="hljs-title">precmd</span></span> () &#123; <span class="hljs-built_in">print</span> -Pn <span class="hljs-string">&quot;\e]0;%n@%M//%/\a&quot;</span> &#125;<br><span class="hljs-function"><span class="hljs-title">preexec</span></span> () &#123; <span class="hljs-built_in">print</span> -Pn <span class="hljs-string">&quot;\e]0;%n@%M//%/\ <span class="hljs-variable">$1</span>\a&quot;</span> &#125;<br>;;<br><span class="hljs-keyword">esac</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#编辑器</span><br><span class="hljs-built_in">export</span> EDITOR=vim<br><span class="hljs-comment">#关于历史纪录的配置 &#123;&#123;&#123;</span><br><span class="hljs-comment">#历史纪录条目数量</span><br><span class="hljs-built_in">export</span> HISTSIZE=10000<br><span class="hljs-comment">#注销后保存的历史纪录条目数量</span><br><span class="hljs-built_in">export</span> SAVEHIST=10000<br><span class="hljs-comment">#历史纪录文件</span><br><span class="hljs-built_in">export</span> HISTFILE=~/.zhistory<br><span class="hljs-comment">#以附加的方式写入历史纪录</span><br><span class="hljs-built_in">setopt</span> INC_APPEND_HISTORY<br><span class="hljs-comment">#如果连续输入的命令相同，历史纪录中只保留一个</span><br><span class="hljs-built_in">setopt</span> HIST_IGNORE_DUPS<br><span class="hljs-comment">#为历史纪录中的命令添加时间戳</span><br><span class="hljs-built_in">setopt</span> EXTENDED_HISTORY      <br><br><span class="hljs-comment">#启用 cd 命令的历史纪录，cd -[TAB]进入历史路径</span><br><span class="hljs-built_in">setopt</span> AUTO_PUSHD<br><span class="hljs-comment">#相同的历史路径只保留一个</span><br><span class="hljs-built_in">setopt</span> PUSHD_IGNORE_DUPS<br><br><span class="hljs-comment">#每个目录使用独立的历史纪录&#123;&#123;&#123;</span><br><span class="hljs-function"><span class="hljs-title">cd</span></span>() &#123;<br><span class="hljs-built_in">builtin</span> <span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>                             <span class="hljs-comment"># do actual cd</span><br><span class="hljs-built_in">fc</span> -W                                       <span class="hljs-comment"># write current history  file</span><br><span class="hljs-built_in">local</span> HISTDIR=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span>&quot;</span>      <span class="hljs-comment"># use nested folders for history</span><br><span class="hljs-keyword">if</span>  [ ! -d <span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>&quot;</span> ] ; <span class="hljs-keyword">then</span>          <span class="hljs-comment"># create folder if needed</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">export</span> HISTFILE=<span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>/zhistory&quot;</span>     <span class="hljs-comment"># set new history file</span><br><span class="hljs-built_in">touch</span> <span class="hljs-variable">$HISTFILE</span><br><span class="hljs-built_in">local</span> ohistsize=<span class="hljs-variable">$HISTSIZE</span><br>HISTSIZE=0                              <span class="hljs-comment"># Discard previous dir&#x27;s history</span><br>HISTSIZE=<span class="hljs-variable">$ohistsize</span>                     <span class="hljs-comment"># Prepare for new dir&#x27;s history</span><br><span class="hljs-built_in">fc</span> -R                                       <span class="hljs-comment">#read from current histfile</span><br>&#125;<br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span><br><span class="hljs-built_in">export</span> HISTFILE=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span>/zhistory&quot;</span><br><br><span class="hljs-keyword">function</span> allhistory &#123;<br><span class="hljs-built_in">cat</span> $(find <span class="hljs-variable">$HOME</span>/.zsh_history -name zhistory)<br>&#125;<br><br><span class="hljs-keyword">function</span> convhistory &#123;<br><span class="hljs-built_in">sort</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">uniq</span> |<br>sed <span class="hljs-string">&#x27;s/^:[0−9]∗:[0-9]*;.∗/\1::::::\2/&#x27;</span> |<br>awk -F<span class="hljs-string">&quot;::::::&quot;</span> <span class="hljs-string">&#x27;&#123; $1=strftime(&quot;%Y-%m-%d %T&quot;,$1) &quot;|&quot;; print &#125;&#x27;</span><br>&#125;<br><br><span class="hljs-comment">#使用 histall 命令查看全部历史纪录</span><br><span class="hljs-keyword">function</span> histall &#123;<br>convhistory =(allhistory) | sed <span class="hljs-string">&#x27;/^.\&#123;20\&#125; *cd/i\\&#x27;</span> <br>&#125;<br><br><span class="hljs-comment">#使用 hist 查看当前目录历史纪录</span><br><span class="hljs-keyword">function</span> hist &#123;<br>convhistory <span class="hljs-variable">$HISTFILE</span><br>&#125;<br><br><span class="hljs-comment">#全部历史纪录 top50</span><br><span class="hljs-keyword">function</span> top50 &#123; allhistory | awk -F<span class="hljs-string">&#x27;:[ 0-9]*:[0-9]*;&#x27;</span> <span class="hljs-string">&#x27;&#123; $1=&quot;&quot; ; print &#125;&#x27;</span> | sed <span class="hljs-string">&#x27;s/ /\n/g&#x27;</span> | sed <span class="hljs-string">&#x27;/^$/d&#x27;</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -nr | <span class="hljs-built_in">head</span> -n 50 &#125;<br><br><span class="hljs-comment">#允许在交互模式中使用注释  例如：</span><br><span class="hljs-built_in">setopt</span> INTERACTIVE_COMMENTS      <br><br><span class="hljs-comment">#启用自动 cd，输入目录名回车进入目录</span><br><span class="hljs-built_in">setopt</span> AUTO_CD<br><br><span class="hljs-comment">#扩展路径</span><br><span class="hljs-built_in">setopt</span> complete_in_word<br><br><span class="hljs-comment">#禁用 core dumps</span><br><span class="hljs-built_in">limit</span> coredumpsize 0<br><br><span class="hljs-comment">#Emacs风格 键绑定</span><br><span class="hljs-built_in">bindkey</span> -e<br><br><span class="hljs-comment">#以下字符视为单词的一部分</span><br>WORDCHARS=<span class="hljs-string">&#x27;*?_-[]~=&amp;;!#$%^()&#123;&#125;&lt;&gt;&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#自动补全功能 &#123;&#123;&#123;</span><br><span class="hljs-built_in">setopt</span> AUTO_LIST<br><span class="hljs-built_in">setopt</span> AUTO_MENU<br><br><span class="hljs-comment">#开启此选项，补全时会直接选中菜单项</span><br><span class="hljs-built_in">setopt</span> MENU_COMPLETE<br><br><span class="hljs-built_in">autoload</span> -U compinit<br>compinit<br><br><span class="hljs-comment">#自动补全缓存</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::complete:*&#x27;</span> use-cache on<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::complete:*&#x27;</span> cache-path .zcache<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:cd:*&#x27;</span> ignore-parents parent <span class="hljs-built_in">pwd</span><br><br><span class="hljs-comment">#自动补全选项</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> verbose <span class="hljs-built_in">yes</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> menu <span class="hljs-keyword">select</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:default&#x27;</span> force-list always<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> select-prompt <span class="hljs-string">&#x27;%SSelect:  lines: %L  matches: %M  [%p]&#x27;</span><br><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:match:*&#x27;</span> original only<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::prefix-1:*&#x27;</span> completer _complete<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:predict:*&#x27;</span> completer _complete<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:incremental:*&#x27;</span> completer _complete _correct<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> completer _complete _prefix _correct _prefix _match _approximate<br><br><span class="hljs-comment">#路径补全</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> <span class="hljs-built_in">expand</span> <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> squeeze-shlashes <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::complete:*&#x27;</span> <span class="hljs-string">&#x27;\\&#x27;</span><br><br><span class="hljs-comment">#彩色补全菜单</span><br><span class="hljs-built_in">export</span> CLICOLOR=1<br><span class="hljs-built_in">export</span> LSCOLORS=ExGxFxdaCxDaDahbadeche<br><span class="hljs-built_in">zmodload</span> zsh/complist<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> list-colors <span class="hljs-variable">$&#123;(s.:.)LS_COLORS&#125;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:kill:*:processes&#x27;</span> list-colors <span class="hljs-string">&#x27;=(#b) #([0-9]#)*=0=01;31&#x27;</span><br><br><span class="hljs-comment">#修正大小写</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> matcher-list <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;m:&#123;a-zA-Z&#125;=&#123;A-Za-z&#125;&#x27;</span><br><span class="hljs-comment">#错误校正</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> completer _complete _match _approximate<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:match:*&#x27;</span> original only<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:approximate:*&#x27;</span> max-errors 1 numeric<br><br><span class="hljs-comment">#kill 命令补全</span><br>compdef pkill=<span class="hljs-built_in">kill</span><br>compdef pkill=killall<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:kill:*&#x27;</span> menu <span class="hljs-built_in">yes</span> <span class="hljs-keyword">select</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:*:*:processes&#x27;</span> force-list always<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:processes&#x27;</span> <span class="hljs-built_in">command</span> <span class="hljs-string">&#x27;ps -au$USER&#x27;</span><br><br><span class="hljs-comment">#补全类型提示分组</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:matches&#x27;</span> group <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> group-name <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:options&#x27;</span> description <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:options&#x27;</span> auto-description <span class="hljs-string">&#x27;%d&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:descriptions&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;33m -- %d --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:messages&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;35m -- %d --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:warnings&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;31m -- No Matches Found --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:corrections&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;32m -- %d (errors: %e) --\e[0m&#x27;</span><br><br><span class="hljs-comment"># cd ~ 补全顺序</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:-tilde-:*&#x27;</span> group-order <span class="hljs-string">&#x27;named-directories&#x27;</span> <span class="hljs-string">&#x27;path-directories&#x27;</span> <span class="hljs-string">&#x27;users&#x27;</span> <span class="hljs-string">&#x27;expand&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##行编辑高亮模式</span><br><span class="hljs-comment"># Ctrl+@ 设置标记，标记和光标点之间为 region</span><br>zle_highlight=(region:<span class="hljs-built_in">bg</span>=magenta <span class="hljs-comment">#选中区域</span><br>special:bold      <span class="hljs-comment">#特殊字符</span><br>isearch:underline)#搜索时使用的关键字<br><br><span class="hljs-comment">##空行(光标在行首)补全 &quot;cd &quot; &#123;&#123;&#123;</span><br>user-<span class="hljs-function"><span class="hljs-title">complete</span></span>()&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-variable">$BUFFER</span> <span class="hljs-keyword">in</span><br><span class="hljs-string">&quot;&quot;</span> )                       <span class="hljs-comment"># 空行填入 &quot;cd &quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd &quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-string">&quot;cd --&quot;</span> )                  <span class="hljs-comment"># &quot;cd --&quot; 替换为 &quot;cd +&quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd +&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-string">&quot;cd +-&quot;</span> )                  <span class="hljs-comment"># &quot;cd +-&quot; 替换为 &quot;cd -&quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd -&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br>* )<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-keyword">esac</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N user-complete<br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;\t&quot;</span> user-complete<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##在命令前插入 sudo &#123;&#123;&#123;</span><br><span class="hljs-comment">#定义功能</span><br>sudo-command-<span class="hljs-function"><span class="hljs-title">line</span></span>() &#123;<br>[[ -z <span class="hljs-variable">$BUFFER</span> ]] &amp;&amp; <span class="hljs-built_in">zle</span> up-history<br>[[ <span class="hljs-variable">$BUFFER</span> != <span class="hljs-built_in">sudo</span>\ * ]] &amp;&amp; BUFFER=<span class="hljs-string">&quot;sudo <span class="hljs-variable">$BUFFER</span>&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line                 <span class="hljs-comment">#光标移动到行末</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N sudo-command-line<br><span class="hljs-comment">#定义快捷键为： [Esc] [Esc]</span><br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;\e\e&quot;</span> sudo-command-line<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><span class="hljs-comment">#[Esc][h] man 当前命令时，显示简短说明</span><br><span class="hljs-built_in">alias</span> run-help &gt;&amp;/dev/null &amp;&amp; <span class="hljs-built_in">unalias</span> run-help<br><span class="hljs-built_in">autoload</span> run-help<br><br><span class="hljs-comment">#历史命令 top10</span><br><span class="hljs-built_in">alias</span> top10=<span class="hljs-string">&#x27;print -l  $&#123;(o)history%% *&#125; | uniq -c | sort -nr | head -n 10&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#路径别名 &#123;&#123;&#123;</span><br><span class="hljs-comment">#进入相应的路径时只要 cd ~xxx</span><br><span class="hljs-built_in">hash</span> -d A=<span class="hljs-string">&quot;/media/ayu/dearest&quot;</span><br><span class="hljs-built_in">hash</span> -d H=<span class="hljs-string">&quot;/media/data/backup/ayu&quot;</span><br><span class="hljs-built_in">hash</span> -d E=<span class="hljs-string">&quot;/etc/&quot;</span><br><span class="hljs-built_in">hash</span> -d D=<span class="hljs-string">&quot;/home/ayumi/Documents&quot;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#补全 ping</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:ping:*&#x27;</span> hosts 192.168.1.&#123;1,50,51,100,101&#125; www.google.com<br><br><span class="hljs-comment">#补全 ssh scp sftp 等</span><br><span class="hljs-built_in">zstyle</span> -e <span class="hljs-string">&#x27;:completion::*:*:*:hosts&#x27;</span> hosts <span class="hljs-string">&#x27;reply=($&#123;=$&#123;$&#123;(f)&quot;$(cat &#123;/etc/ssh_,~/.ssh/known_&#125;hosts(|2)(N) /dev/null)&quot;&#125;%%[# ]*&#125;//,/ &#125;)&#x27;</span><br><br><span class="hljs-comment">#F1 计算器</span><br>arith-eval-<span class="hljs-function"><span class="hljs-title">echo</span></span>() &#123;<br>LBUFFER=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LBUFFER&#125;</span>echo \$(( &quot;</span><br>RBUFFER=<span class="hljs-string">&quot; ))<span class="hljs-variable">$RBUFFER</span>&quot;</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N arith-eval-echo<br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;^[[11~&quot;</span> arith-eval-echo<br><br><span class="hljs-keyword">function</span> timeconv &#123; <span class="hljs-built_in">date</span> -d @<span class="hljs-variable">$1</span> +<span class="hljs-string">&quot;%Y-%m-%d %T&quot;</span> &#125;<br><br><span class="hljs-built_in">zmodload</span> zsh/mathfunc<br><span class="hljs-built_in">autoload</span> -U zsh-mime-setup<br>zsh-mime-setup<br><span class="hljs-built_in">setopt</span> EXTENDED_GLOB<br><br><span class="hljs-built_in">setopt</span> correctall<br><span class="hljs-built_in">autoload</span> compinstall<br><br><span class="hljs-comment">#漂亮又实用的命令高亮界面</span><br><span class="hljs-built_in">setopt</span> extended_glob<br>TOKENS_FOLLOWED_BY_COMMANDS=(<span class="hljs-string">&#x27;|&#x27;</span> <span class="hljs-string">&#x27;||&#x27;</span> <span class="hljs-string">&#x27;;&#x27;</span> <span class="hljs-string">&#x27;&amp;&#x27;</span> <span class="hljs-string">&#x27;&amp;&amp;&#x27;</span> <span class="hljs-string">&#x27;sudo&#x27;</span> <span class="hljs-string">&#x27;do&#x27;</span> <span class="hljs-string">&#x27;time&#x27;</span> <span class="hljs-string">&#x27;strace&#x27;</span>)<br><br>recolor-<span class="hljs-function"><span class="hljs-title">cmd</span></span>() &#123;<br>region_highlight=()<br>colorize=<span class="hljs-literal">true</span><br>start_pos=0<br><span class="hljs-keyword">for</span> arg <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;(z)BUFFER&#125;</span>; <span class="hljs-keyword">do</span><br>((start_pos+=<span class="hljs-variable">$&#123;#BUFFER[$start_pos+1,-1]&#125;</span>-<span class="hljs-variable">$&#123;#<span class="hljs-variable">$&#123;BUFFER[$start_pos+1,-1]## #&#125;</span>&#125;</span>))<br>((end_pos=<span class="hljs-variable">$start_pos</span>+<span class="hljs-variable">$&#123;#arg&#125;</span>))<br><span class="hljs-keyword">if</span> <span class="hljs-variable">$colorize</span>; <span class="hljs-keyword">then</span><br>colorize=<span class="hljs-literal">false</span><br>res=$(LC_ALL=C <span class="hljs-built_in">builtin</span> <span class="hljs-built_in">type</span> <span class="hljs-variable">$arg</span> 2&gt;/dev/null)<br><span class="hljs-keyword">case</span> <span class="hljs-variable">$res</span> <span class="hljs-keyword">in</span><br>*<span class="hljs-string">&#x27;reserved word&#x27;</span>*)   style=<span class="hljs-string">&quot;fg=magenta,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;alias for&#x27;</span>*)       style=<span class="hljs-string">&quot;fg=cyan,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;shell builtin&#x27;</span>*)   style=<span class="hljs-string">&quot;fg=yellow,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;shell function&#x27;</span>*)  style=<span class="hljs-string">&#x27;fg=green,bold&#x27;</span>;;<br>*<span class="hljs-string">&quot;<span class="hljs-variable">$arg</span> is&quot;</span>*)<br>[[ <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;sudo&#x27;</span> ]] &amp;&amp; style=<span class="hljs-string">&quot;fg=red,bold&quot;</span> || style=<span class="hljs-string">&quot;fg=blue,bold&quot;</span>;;<br>*)                   style=<span class="hljs-string">&#x27;none,bold&#x27;</span>;;<br><span class="hljs-keyword">esac</span><br>region_highlight+=(<span class="hljs-string">&quot;<span class="hljs-variable">$start_pos</span> <span class="hljs-variable">$end_pos</span> <span class="hljs-variable">$style</span>&quot;</span>)<br><span class="hljs-keyword">fi</span><br>[[ <span class="hljs-variable">$&#123;<span class="hljs-variable">$&#123;TOKENS_FOLLOWED_BY_COMMANDS[(r)<span class="hljs-variable">$&#123;arg//|/\|&#125;</span>]&#125;</span>:+yes&#125;</span> = <span class="hljs-string">&#x27;yes&#x27;</span> ]] &amp;&amp; colorize=<span class="hljs-literal">true</span><br>start_pos=<span class="hljs-variable">$end_pos</span><br><span class="hljs-keyword">done</span><br>&#125;<br>check-cmd-self-<span class="hljs-function"><span class="hljs-title">insert</span></span>() &#123; <span class="hljs-built_in">zle</span> .self-insert &amp;&amp; recolor-cmd &#125;<br>check-cmd-backward-delete-<span class="hljs-function"><span class="hljs-title">char</span></span>() &#123; <span class="hljs-built_in">zle</span> .backward-delete-char &amp;&amp; recolor-cmd &#125;<br><br><span class="hljs-built_in">zle</span> -N self-insert check-cmd-self-insert<br><span class="hljs-built_in">zle</span> -N backward-delete-char check-cmd-backward-delete-char<br></code></pre></td></tr></table></figure><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>p10k 在首次进入时需要进行配置，按照提示进行即可，配置之后，会在 zshrc 行首和行尾分别添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [[ -r <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;XDG_CACHE_HOME:-<span class="hljs-variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="hljs-variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span> ]]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">source</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;XDG_CACHE_HOME:-<span class="hljs-variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="hljs-variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>以及</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua"># To customize prompt, run `p10k configure` <span class="hljs-keyword">or</span> edit ~/.p10k.zsh.<br><span class="hljs-string">[[ ! -f ~/.p10k.zsh ]]</span> || source ~/.p10k.zsh<br></code></pre></td></tr></table></figure><p>需要把上面三句代码移动到 4 个 source 的后面，否则每次启动终端都会报错</p><p><img src="/2024/04/29/%E4%BD%BF%E7%94%A8_nix-darwin_%E4%B8%BA_sonoma_%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84_zsh_EberyThingSay/v2-f6eca7374890887d630bff2c420a11a5_b.jpg">  </p><h3 id="搞定收工"><a href="#搞定收工" class="headerlink" title="搞定收工"></a>搞定收工</h3><p><img src="/2024/04/29/%E4%BD%BF%E7%94%A8_nix-darwin_%E4%B8%BA_sonoma_%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%AE%80%E6%B4%81%E9%AB%98%E6%95%88%E7%9A%84_zsh_EberyThingSay/v2-3995831831ab86eb202942a276d94213_b.jpg">  </p>]]></content>
    
    
    <categories>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>真香警告，2024 年中的 vscode+latex 写作</title>
    <link href="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/"/>
    <url>/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="真香警告，2024-年中的-vscode-latex-写作"><a href="#真香警告，2024-年中的-vscode-latex-写作" class="headerlink" title="真香警告，2024 年中的 vscode+latex 写作"></a>真香警告，2024 年中的 vscode+latex 写作</h1><p>2024 年 4 月 20 日诈尸更新，内容如下：</p><ul><li>去掉了使用第三方 PDF 阅读器的方法，因为浏览器已经足够好用，且跨平台性能强。</li><li>修改了配置文件，去除传统的 xe-&gt;bib-&gt;xe*2 类型的编译链，转为全部使用性能更好，使用更加简单的 latexmk。</li><li>去掉了可能有坑的配置项，尽量减少对插件默认配置的修改，代码量大幅缩水。</li></ul><p>我只说三点理由，劝你使用 latexmk 取代传统方法：</p><ol><li>排错功能。latexmk 对于错误容忍度低，一点小错都不会放过，可以对你起监督作用，避免写出屎山还不自知。</li><li>增量编译。xe 和 pdf 都是全量编译的，十分之慢，latexmk 只会编译你改动的部分，大大减少编译时间，不会出现你明明什么都没改，不小心点到编译还是会进行全量编译的情况（笔记本电池说谢谢你）。</li><li>智能编译链。从此再也不用管什么先 xe 后 bib 了，latexmk 直接一键搞定。</li></ol><hr><p>2023 年 6 月 8 日更新，内容如下：</p><ul><li>修改了增加了使用浏览器进行外部查看的方式</li><li>添加了自定义编译脚本的相关说明，并附有一个通用编译模板</li><li>增加了 macOS 的安装说明</li></ul><hr><p>2023 年 1 月 22 日大年初一更新一次，更新内容如下：</p><ul><li>修改了文章标题。。。与时俱进</li></ul><hr><p>2022 年 12 月 19 日更新一次，增加了用 winget 安装 okular 的配置方法</p><hr><p>2022 年 11 月 20 日更新一次，优化了 okular 路径的填写方法</p><p>git bash 可以找到 okular 程序路径，直接定位到路径即可，并不需要定位到图标</p><hr><p>2022 年 11 月 13 日更新一次，增加了一些 linux 端 (Archlinux 为例) 配置的说明</p><hr><p>为什么我不用 texwork 或者 texstudio？因为 vscode 太香了，不多 bb</p><h2 id="安装-texlive"><a href="#安装-texlive" class="headerlink" title="安装 texlive"></a>安装 texlive</h2><h3 id="windows-端的安装"><a href="#windows-端的安装" class="headerlink" title="windows 端的安装"></a>windows 端的安装</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/</a></p><p>直接下载 texlive.iso，运行里面的 install-tl-windows.bat</p><p><img src="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/v2-db20e80c4405dfb8254efa4ce3255211_b.jpg"><br>取消勾选这个没用的 texwork（如果你觉得好用，请别打我）</p><p>等待一阵漫长的安装（什么时候才能用包管理器一键安装啊……）</p><h3 id="linux-端的安装（windows-用户跳过）"><a href="#linux-端的安装（windows-用户跳过）" class="headerlink" title="linux 端的安装（windows 用户跳过）"></a>linux 端的安装（windows 用户跳过）</h3><p>linux 端 通过命令或者文件管理器挂载文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mount -o loop texlive.iso /mnt<br></code></pre></td></tr></table></figure><p>如果需要使用图形界面安装的话，需要安装下面两个软件包</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo pacman -S <span class="hljs-keyword">perl</span> <span class="hljs-keyword">perl</span>-tk<br></code></pre></td></tr></table></figure><p>perl 一般发行版都自带了，perl-tk 可能需要自行安装，然后使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> ./install -gui<br></code></pre></td></tr></table></figure><p>就会打开与 windows 相同的图形安装界面，直接点安装即可，也可以自行更改安装路径（建议 &#x2F;usr&#x2F;local 或者 &#x2F;opt&#x2F;）</p><p>有些发行版可以通过包管理器一键安装，不过需要网络，以 Archlinux 为例：</p><p>添加竹林源</p><p><a href="https://pacman.ltd/">https://pacman.ltd/</a></p><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S texlive-full<br></code></pre></td></tr></table></figure><p>最近这个源好像出了一些问题，有些包没有了，如果无法下载可以本地安装。</p><p>最后需要添加 windows 字体，不然 tex 编译的字体可能不正确，也很简单，直接找一台 windows 电脑，把 C:&#x2F;windows&#x2F;fonts 复制到 &#x2F;usr&#x2F;share&#x2F;fonts&#x2F; 下面，然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> fc-cache -fsv<br></code></pre></td></tr></table></figure><p>就可以了，解决字体办法有很多，我认为这是最简单的一种了，双系统用户 0 难度。</p><p>这里默认 linux 用户都是懂电脑的，所以就不配图了。</p><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><p>打开终端，输入 xelatex，如果有以下输出，说明安装成功：</p><p><img src="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/v2-3e64b8f65ec9b0316b54087da991999d_b.jpg">  </p><h3 id="macOS-端的安装"><a href="#macOS-端的安装" class="headerlink" title="macOS 端的安装"></a>macOS 端的安装</h3><p>最简单无脑的就是 macOS，安装包与前面 Linux 和 Windows 用的不同，下载地址：</p><p><a href="https://tug.org/mactex/mactex-download.html">https://tug.org/mactex/mactex-download.html</a></p><p>这个包是 universe 的，inter 和 m 芯片的都可以用。直接像装普通软件一样安装即可，安装后会多出几个这玩意</p><p><img src="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/v2-813c1aeb4ec28d69a4f80f19e664c347_b.jpg"><br>除了 BibDesk 之外，用得都不多，BibDesk 也可以用别的文献管理软件替代。</p><p>进一步验证安装，在终端输入：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">latex -v</span><br></code></pre></td></tr></table></figure><p>有形如下图的输出即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pdfTeX</span> <span class="hljs-number">3</span>.<span class="hljs-number">141592653</span>-<span class="hljs-number">2</span>.<span class="hljs-number">6</span>-<span class="hljs-number">1</span>.<span class="hljs-number">40</span>.<span class="hljs-number">25</span> (TeX Live <span class="hljs-number">2023</span>)<br><span class="hljs-attribute">kpathsea</span> version <span class="hljs-number">6</span>.<span class="hljs-number">3</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">Copyright</span> <span class="hljs-number">2023</span> Han The Thanh (pdfTeX) et al.<br><span class="hljs-attribute">There</span> is NO warranty.  Redistribution of this software is<br><span class="hljs-attribute">covered</span> by the terms of both the pdfTeX copyright and<br><span class="hljs-attribute">the</span> Lesser GNU General Public License.<br><span class="hljs-attribute">For</span> more information about these matters, see the file<br><span class="hljs-attribute">named</span> COPYING and the pdfTeX source.<br><span class="hljs-attribute">Primary</span> author of pdfTeX: Han The Thanh (pdfTeX) et al.<br><span class="hljs-attribute">Compiled</span> with libpng <span class="hljs-number">1</span>.<span class="hljs-number">6</span>.<span class="hljs-number">39</span>; using libpng <span class="hljs-number">1</span>.<span class="hljs-number">6</span>.<span class="hljs-number">39</span><br><span class="hljs-attribute">Compiled</span> with zlib <span class="hljs-number">1</span>.<span class="hljs-number">2</span>.<span class="hljs-number">13</span>; using zlib <span class="hljs-number">1</span>.<span class="hljs-number">2</span>.<span class="hljs-number">13</span><br><span class="hljs-attribute">Compiled</span> with xpdf version <span class="hljs-number">4</span>.<span class="hljs-number">04</span><br></code></pre></td></tr></table></figure><h2 id="安装-visual-studio-code（windows）"><a href="#安装-visual-studio-code（windows）" class="headerlink" title="安装 visual studio code（windows）"></a>安装 visual studio code（windows）</h2><p>这个不用说了，应用商店一键安装，也可以下载安装包安装</p><p><img src="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/v2-5ba0b29fb14d860b57ccdd940b973aff_b.jpg"><br>设置中文之类的就不说了（我的 vscode 用作代码编辑，insider 版本当文档编辑，配置都是一样的）</p><h2 id="安装-visual-studio-code（linux）"><a href="#安装-visual-studio-code（linux）" class="headerlink" title="安装 visual studio code（linux）"></a>安装 visual studio code（linux）</h2><p>下载 deb 安装，通过包管理器安装都可以，ubuntu 用 ppa，arch 用 yay，略过。</p><p>我现在切换到了 NixOS，就顺便提一句，只能使用 vscode-fhs 才行（懂得都懂我在说什么，不懂的你也没必要懂）。</p><h3 id="安装-visual-studio-code（macOS）"><a href="#安装-visual-studio-code（macOS）" class="headerlink" title="安装 visual studio code（macOS）"></a>安装 visual studio code（macOS）</h3><p>下载 universe 的版本安装即可，略过。</p><h2 id="配置-latex"><a href="#配置-latex" class="headerlink" title="配置 latex"></a>配置 latex</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><img src="/2024/04/22/%E7%9C%9F%E9%A6%99%E8%AD%A6%E5%91%8A_2024%E5%B9%B4%E4%B8%AD%E7%9A%84vscodelatex%E5%86%99%E4%BD%9C_EberyThingSay/v2-063179a134c4be3b49dbc69f1e6aa27d_b.jpg"><br>就这一个玩意就可以满足基本需求</p><h3 id="使用浏览器作为-PDF-阅读器"><a href="#使用浏览器作为-PDF-阅读器" class="headerlink" title="使用浏览器作为 PDF 阅读器"></a>使用浏览器作为 PDF 阅读器</h3><p>这种方式可以很便携的实现反向定位和自动刷新。以下几种浏览器我都测过可以完美实现：</p><ul><li>Chrome，Edge，Arc</li><li>Firefox</li><li>Safari</li></ul><h3 id="配置-latex-workshop-1"><a href="#配置-latex-workshop-1" class="headerlink" title="配置 latex-workshop[1]"></a>配置 latex-workshop[1]</h3><p>直接复制粘贴即可，</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>    // latex 配置<br>    <span class="hljs-string">&quot;latex-workshop.view.pdf.viewer&quot;</span>: <span class="hljs-string">&quot;browser&quot;</span>,<br>    <span class="hljs-string">&quot;latex-workshop.view.pdf.ref.viewer&quot;</span>: <span class="hljs-string">&quot;auto&quot;</span>,<br>    <span class="hljs-string">&quot;latex-workshop.view.pdf.external.viewer.args&quot;</span>: [<br>        <span class="hljs-string">&quot;%PDF%&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;latex-workshop.latex.tools&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex-latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;-synctex=1&quot;</span>,<br>                <span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>                <span class="hljs-string">&quot;-file-line-error&quot;</span>,<br>                <span class="hljs-string">&quot;-xelatex&quot;</span>,<br>                <span class="hljs-string">&quot;-outdir=%OUTDIR%&quot;</span>,<br>                <span class="hljs-string">&quot;%DOC%&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex-latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;-synctex=1&quot;</span>,<br>                <span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>                <span class="hljs-string">&quot;-file-line-error&quot;</span>,<br>                <span class="hljs-string">&quot;-pdf&quot;</span>,<br>                <span class="hljs-string">&quot;-outdir=%OUTDIR%&quot;</span>,<br>                <span class="hljs-string">&quot;%DOC%&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex-latexmk-with-shell-escape&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;--shell-escape&quot;</span>,<br>                <span class="hljs-string">&quot;-synctex=1&quot;</span>,<br>                <span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>                <span class="hljs-string">&quot;-file-line-error&quot;</span>,<br>                <span class="hljs-string">&quot;-xelatex&quot;</span>,<br>                <span class="hljs-string">&quot;-outdir=%OUTDIR%&quot;</span>,<br>                <span class="hljs-string">&quot;%DOC%&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex-latexmk-with-shell-escape&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;--shell-escape&quot;</span>,<br>                <span class="hljs-string">&quot;-synctex=1&quot;</span>,<br>                <span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>                <span class="hljs-string">&quot;-file-line-error&quot;</span>,<br>                <span class="hljs-string">&quot;-pdf&quot;</span>,<br>                <span class="hljs-string">&quot;-outdir=%OUTDIR%&quot;</span>,<br>                <span class="hljs-string">&quot;%DOC%&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;-f&quot;</span>,<br>                <span class="hljs-string">&quot;-synctex=1&quot;</span>,<br>                <span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>                <span class="hljs-string">&quot;-file-line-error&quot;</span>,<br>                <span class="hljs-string">&quot;-pdf&quot;</span>,<br>                <span class="hljs-string">&quot;%DOC%&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;bibtex&quot;</span>,<br>            <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;bibtex&quot;</span>,<br>            <span class="hljs-string">&quot;args&quot;</span>: [<br>                <span class="hljs-string">&quot;%DOCFILE%&quot;</span><br>            ]<br>        &#125;,<br>    ],<br>    // 用于配置编译链<br>    <span class="hljs-string">&quot;latex-workshop.latex.recipes&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;latexmk&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex-latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;xelatex-latexmk&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex-latexmk&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;pdflatex-latexmk&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex-latexmk-with-shell-escape&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;xelatex-latexmk-with-shell-escape&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex-latexmk-with-shell-escape&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;pdflatex-latexmk-with-shell-escape&quot;</span><br>            ]<br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;BibTeX&quot;</span>,<br>            <span class="hljs-string">&quot;tools&quot;</span>: [<br>                <span class="hljs-string">&quot;bibtex&quot;</span><br>            ]<br>        &#125;,<br>    ],<br>    // 文件清理<br>    <span class="hljs-string">&quot;latex-workshop.latex.clean.fileTypes&quot;</span>: [<br>        <span class="hljs-string">&quot;*.log&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;latex-workshop.latex.recipe.default&quot;</span>: <span class="hljs-string">&quot;lastUsed&quot;</span>,<br>    <span class="hljs-string">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span>: <span class="hljs-string">&quot;double-click&quot;</span>,<br>    <span class="hljs-string">&quot;latex-workshop.showContextMenu&quot;</span>: true,<br>    <span class="hljs-string">&quot;latex-workshop.intellisense.package.enabled&quot;</span>: true,<br>    <span class="hljs-string">&quot;[latex]&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;editor.formatOnPaste&quot;</span>: true,<br>        <span class="hljs-string">&quot;editor.suggestSelection&quot;</span>: <span class="hljs-string">&quot;recentlyUsedByPrefix&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;latex-workshop.latex.autoBuild.run&quot;</span>: <span class="hljs-string">&quot;onSave&quot;</span>,<br>&#125;  <br></code></pre></td></tr></table></figure><p>之前在每一个配置项上都写了注释，这里全部删了，因为但你把他们粘贴到 vscode 配置文件中时，鼠标移动到对应选项上都会出现相关说明，没有必要长篇大论。</p><h3 id="自编译脚本（可选）"><a href="#自编译脚本（可选）" class="headerlink" title="自编译脚本（可选）"></a>自编译脚本（可选）</h3><p>针对一些比较特殊的需求，可增加一个自定义编译脚本选项。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;latex-workshop.latex.external.build.command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;./compile.sh&quot;</span><br></code></pre></td></tr></table></figure><p>意思是，但你编译（无论自动还是手动）时，不使用 latexshop 的编译链，而是执行 compile.sh 脚本，这种方式能够控制得更加底层，我提供一个模板 <a href="http://compile.sh/">http://compile.sh/</a>，编译链为<em>tex -&gt; bibtex -&gt; tex^2</em>，可按需修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 脚本用于编译latex</span><br><br><span class="hljs-comment"># 主文件名</span><br>filename=<span class="hljs-string">&quot;&lt;NAME&gt;&quot;</span><br><br><span class="hljs-comment"># 编译器</span><br><span class="hljs-comment"># command=&quot;pdflatex&quot;</span><br><span class="hljs-built_in">command</span>=<span class="hljs-string">&quot;xelatex&quot;</span><br><br><span class="hljs-comment"># 编译参数</span><br>args=<span class="hljs-string">&quot;-synctex=1 -interaction=nonstopmode -file-line-error -pdf&quot;</span><br><br><span class="hljs-comment"># 编译链</span><br><span class="hljs-comment"># xetex -&gt; bibtex -&gt; xetex^2</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1 .. 3&#125;<br><span class="hljs-keyword">do</span><br><span class="hljs-variable">$command</span> <span class="hljs-variable">$args</span> <span class="hljs-variable">$filename</span>.tex<br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$i</span> -eq 1 ]; <span class="hljs-keyword">then</span><br>bibtex <span class="hljs-variable">$filename</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>该脚本可以完成大多数论文的编译工作。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>latexmk 对于错误容忍度比较低，连 bib 不正确都会显示为编译失败（但是文档可以正确输出），这可以在一定程度上帮助你排错，但是如果你错误太多可能会比较烦，这时候可以考虑用自编译脚本。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="#ref_1_0">#ref_1_0</a>相比之前的版本有所改动</li></ol>]]></content>
    
    
    <categories>
      
      <category>latex</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用最少的时间打造一个强大的 neovim</title>
    <link href="/2024/04/20/%E7%94%A8%E6%9C%80%E5%B0%91%E7%9A%84%E6%97%B6%E9%97%B4%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E5%BC%BA%E5%A4%A7%E7%9A%84_neovim_EberyThingSay/"/>
    <url>/2024/04/20/%E7%94%A8%E6%9C%80%E5%B0%91%E7%9A%84%E6%97%B6%E9%97%B4%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E5%BC%BA%E5%A4%A7%E7%9A%84_neovim_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="用最少的时间打造一个强大的-neovim"><a href="#用最少的时间打造一个强大的-neovim" class="headerlink" title="用最少的时间打造一个强大的 neovim"></a>用最少的时间打造一个强大的 neovim</h1><p>vim 的作者去世一段时间了，所以我将这篇文章从新组织了一次。2024 年，vim 还是存在一些小问题，在 windows 和 macos 上的体验不太好，所以我现在换用 neovim 了，这套配置还是依然适用，vim 和 neovim。</p><h3 id="为什么不用-lua-写配置"><a href="#为什么不用-lua-写配置" class="headerlink" title="为什么不用 lua 写配置"></a>为什么不用 lua 写配置</h3><p>以前写过一套 lua 的配置，但是，就这点配置，这点插件，性能差距不大，用 vimscript 写的话，适用性更好，用 vim 和 neovim 的人都能用。</p><h3 id="适用人群"><a href="#适用人群" class="headerlink" title="适用人群"></a>适用人群</h3><p>简单的代码或者文本编辑，无需将 neovim 配置成 IDE。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>配了几个轻量插件，实用性更强，需要安装<a href="https://github.com/junegunn/vim-plug">https://github.com/junegunn/vim-plug</a>，兼顾了外观和功能。</p><p>注意：如果你使用的是 windows 下 git 自带的 vim，则会被认为处在 linux 环境下，安装 vimplug 的目录需要选择 linux 的目录。</p><p>把下面的代码放在 ~&#x2F;.config&#x2F;nvim&#x2F;init.vim 里面</p><p>vim 的话是 ~&#x2F;.vimrc</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">let</span> <span class="hljs-variable">g:iswindows</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:islinux</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">has</span>(<span class="hljs-string">&quot;win32&quot;</span>) || <span class="hljs-built_in">has</span>(<span class="hljs-string">&quot;win64&quot;</span>) || <span class="hljs-built_in">has</span>(<span class="hljs-string">&quot;win95&quot;</span>) || <span class="hljs-built_in">has</span>(<span class="hljs-string">&quot;win16&quot;</span>))<br>        <span class="hljs-keyword">set</span> <span class="hljs-keyword">shell</span>=powershell<br>        <span class="hljs-keyword">set</span> shellcmdflag=-<span class="hljs-keyword">command</span><br>        <span class="hljs-comment">&quot; 设置默认终端，不然会使用cmd</span><br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">g:iswindows</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">set</span> encoding=utf-<span class="hljs-number">8</span><br>        <span class="hljs-comment">&quot; 编码设置</span><br>        <span class="hljs-keyword">let</span> <span class="hljs-variable">g:islinux</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">endif</span><br><span class="hljs-comment">&quot; 首先进行平台判断</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">has</span>(<span class="hljs-string">&quot;gui_running&quot;</span>)<br>        <span class="hljs-keyword">set</span> guifont=Source\ Code\ Pro:h16<br><span class="hljs-keyword">endif</span><br><span class="hljs-comment">&quot; gui判断</span><br><br><span class="hljs-comment">&quot; Configuration file for vim</span><br><span class="hljs-keyword">set</span> modelines=<span class="hljs-number">0</span><span class="hljs-comment">&quot; CVE-2007-2438</span><br><br><span class="hljs-string">&quot; let &amp;t_SI.=&quot;</span>\<span class="hljs-keyword">e</span>[<span class="hljs-number">5</span> q<span class="hljs-string">&quot; &quot;</span>SI = INSERT <span class="hljs-keyword">mode</span><br><span class="hljs-string">&quot; let &amp;t_SR.=&quot;</span>\<span class="hljs-keyword">e</span>[<span class="hljs-number">4</span> q<span class="hljs-string">&quot; &quot;</span>SR = REPLACE <span class="hljs-keyword">mode</span><br><span class="hljs-string">&quot; let &amp;t_EI.=&quot;</span>\<span class="hljs-keyword">e</span>[<span class="hljs-number">1</span> q<span class="hljs-string">&quot; &quot;</span>EI = NORMAL <span class="hljs-keyword">mode</span> (ELSE)<br><span class="hljs-comment">&quot; 正确设置光标，使用 vim 的话取消注释这三行</span><br><br><span class="hljs-keyword">syntax</span> <span class="hljs-keyword">on</span><br><span class="hljs-comment">&quot; 语法高亮</span><br><br><span class="hljs-keyword">autocmd</span> InsertLeave * <span class="hljs-keyword">se</span> nocul<br><span class="hljs-keyword">autocmd</span> InsertEnter * <span class="hljs-keyword">se</span> cul<br><span class="hljs-comment">&quot; 用浅色高亮当前行</span><br><br><span class="hljs-keyword">set</span> smartindent<br><span class="hljs-comment">&quot; 智能对齐</span><br><br><span class="hljs-keyword">set</span> autoindent<br><span class="hljs-comment">&quot; 自动对齐</span><br><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">confirm</span><br><span class="hljs-comment">&quot; 在处理未保存或只读文件的时候，弹出确认</span><br><br><span class="hljs-keyword">set</span> tabstop=<span class="hljs-number">2</span><br><span class="hljs-comment">&quot; Tab键的宽度</span><br><br><span class="hljs-keyword">set</span> softtabstop=<span class="hljs-number">4</span><br><span class="hljs-keyword">set</span> <span class="hljs-built_in">shiftwidth</span>=<span class="hljs-number">4</span><br><span class="hljs-comment">&quot;  统一缩进为 4</span><br><br><span class="hljs-keyword">set</span> noexpandtab<br><span class="hljs-comment">&quot; 不要用空格代替制表符</span><br><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">number</span><br><span class="hljs-comment">&quot; 显示行号</span><br><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">history</span>=<span class="hljs-number">50</span><br><span class="hljs-comment">&quot; 历史纪录数</span><br><br><span class="hljs-keyword">set</span> hlsearch<br><span class="hljs-keyword">set</span> incsearch<br><span class="hljs-comment">&quot; 搜索逐字符高亮</span><br><br><span class="hljs-keyword">set</span> gdefault<br><span class="hljs-comment">&quot; 行内替换</span><br><br><span class="hljs-keyword">set</span> langmenu=zn_CN.UTF-<span class="hljs-number">8</span><br><span class="hljs-keyword">set</span> helplang=<span class="hljs-keyword">cn</span><br><span class="hljs-comment">&quot; 语言设置</span><br><br><span class="hljs-keyword">set</span> cmdheight=<span class="hljs-number">2</span><br><span class="hljs-comment">&quot; 命令行（在状态行）的高度，默认为1,这里是2</span><br><br><span class="hljs-keyword">set</span> ruler<br><span class="hljs-comment">&quot; 在编辑过程中，在右下角显示光标位置的状态行</span><br><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span><br><span class="hljs-comment">&quot; 总是显示状态行</span><br><br><span class="hljs-keyword">set</span> showcmd<br><span class="hljs-comment">&quot; 在状态行显示目前所执行的命令，未完成的指令片段亦会显示出来</span><br><br><span class="hljs-keyword">set</span> scrolloff=<span class="hljs-number">3</span><br><span class="hljs-comment">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span><br><br><span class="hljs-keyword">set</span> showmatch<br><span class="hljs-comment">&quot; 高亮显示对应的括号</span><br><br><span class="hljs-keyword">set</span> matchtime=<span class="hljs-number">5</span><br><span class="hljs-comment">&quot; 对应括号高亮的时间（单位是十分之一秒）</span><br><br><span class="hljs-keyword">set</span> autowrite<br><span class="hljs-comment">&quot; 在切换buffer时自动保存当前文件</span><br><br><span class="hljs-keyword">set</span> wildmenu<br><span class="hljs-comment">&quot; 增强模式中的命令行自动完成操作</span><br><br><span class="hljs-keyword">set</span> linespace=<span class="hljs-number">2</span><br><span class="hljs-comment">&quot; 字符间插入的像素行数目</span><br><br><span class="hljs-keyword">set</span> whichwrap=<span class="hljs-keyword">b</span>,s,&lt;,&gt;,[,]<br><span class="hljs-comment">&quot; 开启Normal或Visual模式下Backspace键，空格键，左方向键，右方向键，Insert或replace模式下左方向键，右方向键跳行的功能。</span><br><br><span class="hljs-keyword">filetype</span> plugin <span class="hljs-built_in">indent</span> <span class="hljs-keyword">on</span><br><span class="hljs-comment">&quot; 分为三部分命令：file on, file plugin on, file indent on.分别表示自动识别文件类型，用文件类型脚本，使用缩进定义文件。</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">executable</span>(<span class="hljs-string">&#x27;clipboard-provider&#x27;</span>)<br>  <span class="hljs-keyword">let</span> <span class="hljs-variable">g:clipboard</span> = &#123;<br>          \ <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;myClipboard&#x27;</span>,<br>          \     <span class="hljs-string">&#x27;copy&#x27;</span>: &#123;<br>          \         <span class="hljs-string">&#x27;+&#x27;</span>: <span class="hljs-string">&#x27;clipboard-provider copy&#x27;</span>,<br>          \         <span class="hljs-string">&#x27;*&#x27;</span>: <span class="hljs-string">&#x27;clipboard-provider copy&#x27;</span>,<br>          \     &#125;,<br>          \     <span class="hljs-string">&#x27;paste&#x27;</span>: &#123;<br>          \         <span class="hljs-string">&#x27;+&#x27;</span>: <span class="hljs-string">&#x27;clipboard-provider paste&#x27;</span>,<br>          \         <span class="hljs-string">&#x27;*&#x27;</span>: <span class="hljs-string">&#x27;clipboard-provider paste&#x27;</span>,<br>          \     &#125;,<br>          \ &#125;<br><span class="hljs-keyword">endif</span><br><span class="hljs-string">&quot; 使用系统剪切板 &quot;</span>+<span class="hljs-keyword">y</span> <span class="hljs-comment">&quot;+p</span><br><br><span class="hljs-comment">&quot; vim-plug 安装</span><br><span class="hljs-string">&quot; sh -c &#x27;curl -fLo &quot;</span>$&#123;XDG_DATA_HOME:-$HOME/.local/share&#125;<span class="hljs-comment">&quot;/nvim/site/autoload/plug.vim --create-dirs \</span><br><span class="hljs-comment">&quot;   https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&#x27;</span><br><span class="hljs-keyword">call</span> plug#begin(<span class="hljs-string">&#x27;~/.vim/plugged/&#x27;</span>)<br>Plug <span class="hljs-string">&#x27;skywind3000/vim-auto-popmenu&#x27;</span><br>Plug <span class="hljs-string">&#x27;skywind3000/vim-dict&#x27;</span><br>Plug <span class="hljs-string">&#x27;preservim/nerdtree&#x27;</span><br>Plug <span class="hljs-string">&#x27;jiangmiao/auto-pairs&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline&#x27;</span><br>Plug <span class="hljs-string">&#x27;vim-airline/vim-airline-themes&#x27;</span><br>Plug <span class="hljs-string">&#x27;morhetz/gruvbox&#x27;</span><br>Plug <span class="hljs-string">&#x27;neoclide/coc.nvim&#x27;</span>, &#123;<span class="hljs-string">&#x27;branch&#x27;</span>: <span class="hljs-string">&#x27;release&#x27;</span>&#125;<br>Plug <span class="hljs-string">&#x27;skywind3000/asynctasks.vim&#x27;</span><br>Plug <span class="hljs-string">&#x27;skywind3000/asyncrun.vim&#x27;</span><br><span class="hljs-keyword">call</span> plug#end()<br><br><span class="hljs-comment">&quot; 代码补全配置</span><br><span class="hljs-string">&quot; 设定需要生效的文件类型，如果是 &quot;</span>*<span class="hljs-comment">&quot; 的话，代表所有类型</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:apc_enable_ft</span> = &#123;<span class="hljs-string">&#x27;*&#x27;</span>:<span class="hljs-number">1</span>&#125;<br><span class="hljs-comment">&quot; 设定从字典文件以及当前打开的文件里收集补全单词，详情看 &#x27;:help cpt&#x27;</span><br><span class="hljs-keyword">set</span> cpt=.,<span class="hljs-keyword">k</span>,<span class="hljs-keyword">w</span>,<span class="hljs-keyword">b</span><br><br><span class="hljs-comment">&quot; 不要自动选中第一个选项。</span><br><span class="hljs-keyword">set</span> completeopt=<span class="hljs-keyword">menu</span>,menuone,noselect<br><br><span class="hljs-comment">&quot; 禁止在下方显示一些啰嗦的提示</span><br><span class="hljs-keyword">set</span> shortmess+=<span class="hljs-keyword">c</span><br><br><span class="hljs-comment">&quot; nerdtree 按F1 打开关闭</span><br><span class="hljs-keyword">map</span> <span class="hljs-symbol">&lt;F1&gt;</span> :NERDTreeToggle<span class="hljs-symbol">&lt;CR&gt;</span><br><br><span class="hljs-comment">&quot; 状态栏设置</span><br><span class="hljs-keyword">set</span> laststatus=<span class="hljs-number">2</span>  <span class="hljs-comment">&quot;永远显示状态栏</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_powerline_fonts</span> = <span class="hljs-number">1</span>  <span class="hljs-comment">&quot; 支持 powerline 字体</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline</span>#extensions#tabline#enabled = <span class="hljs-number">1</span> <span class="hljs-comment">&quot; 显示窗口tab和buffer</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_theme</span>=<span class="hljs-string">&#x27;molokai&#x27;</span>  <span class="hljs-comment">&quot; murmur配色不错</span><br><br><span class="hljs-keyword">if</span> !exists(<span class="hljs-string">&#x27;g:airline_symbols&#x27;</span>)<br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_symbols</span> = &#123;&#125;<br><span class="hljs-keyword">endif</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_left_sep</span> = <span class="hljs-string">&#x27;▶&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_left_alt_sep</span> = <span class="hljs-string">&#x27;❯&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_right_sep</span> = <span class="hljs-string">&#x27;◀&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_right_alt_sep</span> = <span class="hljs-string">&#x27;❮&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_symbols</span>.linenr = <span class="hljs-string">&#x27;¶&#x27;</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:airline_symbols</span>.branch = <span class="hljs-string">&#x27;⎇&#x27;</span><br><br><span class="hljs-comment">&quot; colorscheme pablo</span><br><span class="hljs-comment">&quot; colorscheme torte</span><br><span class="hljs-comment">&quot; colorscheme koehler</span><br><span class="hljs-keyword">colorscheme</span> gruvbox<br><span class="hljs-keyword">set</span> background=dark<br><span class="hljs-comment">&quot; 设置颜色主题</span><br><br><span class="hljs-comment">&quot; 映射两个代码运行的快捷键</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">g:asyncrun_open</span> = <span class="hljs-number">10</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;C-g&gt;</span> :AsyncTask <span class="hljs-keyword">file</span>-run<span class="hljs-symbol">&lt;cr&gt;</span><br><span class="hljs-keyword">noremap</span> <span class="hljs-symbol">&lt;silent&gt;</span><span class="hljs-symbol">&lt;C-b&gt;</span> :AsyncTask <span class="hljs-keyword">file</span>-build<span class="hljs-symbol">&lt;cr&gt;</span><br></code></pre></td></tr></table></figure><p>去掉了快捷键基本上使用默认配置，F1 打开 nerdtree，Ctrl+g 运行当前文件，Ctrl+b 构建当前项目（但针对这一点我不做过多讲解，否则偏离了文章的主题）。使用 gruvbox 主题</p><p>更新一版，加入了 gui 和平台特性，因为我要在 win 下用 gvim</p><p>再一键安装 Coc 插件，这是我常用的，你可以装自己需要的插件</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">CocInstall coc-html coc-tsserver coc-sumneko-lua coc-<span class="hljs-keyword">sh </span>coc-pyright coc-<span class="hljs-keyword">json </span>coc-clangd<br></code></pre></td></tr></table></figure><p>然后简单的配置一下 asyncrun, vim ~&#x2F;.vim&#x2F;tasks.ini，我常用的语言配置如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[file-<span class="hljs-built_in">run</span>]<br><span class="hljs-attribute">command</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILEPATH)</span>&quot;</span><br>command:<span class="hljs-attribute">python</span>=python <span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILENAME)</span>&quot;</span><br>command:<span class="hljs-attribute">javascript</span>=node <span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILENAME)</span>&quot;</span><br>command:<span class="hljs-attribute">sh</span>=bash <span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILENAME)</span>&quot;</span><br>command:<span class="hljs-attribute">lua</span>=lua <span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILENAME)</span>&quot;</span><br>command:<span class="hljs-attribute">rust</span>=rust <span class="hljs-string">&quot;<span class="hljs-variable">$(VIM_FILENAME)</span>&quot;</span><br><span class="hljs-attribute">output</span>=terminal<br><span class="hljs-attribute">cwd</span>=$(VIM_FILEDIR)<br><span class="hljs-attribute">save</span>=2<br></code></pre></td></tr></table></figure><p>这个插件功能十分强大，详情可见<a href="https://github.com/skywind3000/asynctasks.vim">https://github.com/skywind3000/asynctasks.vim</a></p><p>这样的话，进行一些简易的代码编写和文本编辑都没问题了</p><h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>我并不建议将 neovim 作为大型项目的编辑器，因为它在项目管理，构建上的配置难度比单文件高得多，插件装得太多也会影响 neovim 本身的性能，所以还是专注于简单文本编辑比较好。如果需要管理大型工程，使用 vs、xcode 等 IDE 是更为明智的选择。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机械君迷你主机使用指南 (刚买的一定要来看看)</title>
    <link href="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/"/>
    <url>/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="机械君迷你主机使用指南-刚买的一定要来看看"><a href="#机械君迷你主机使用指南-刚买的一定要来看看" class="headerlink" title="机械君迷你主机使用指南 (刚买的一定要来看看)"></a>机械君迷你主机使用指南 (刚买的一定要来看看)</h1><p>之前我有写过一篇关于迷你主机的杂谈，但是没有什么有深度的内容。今天这篇文章将会详细描述我使用机械君以来的真实感受，并附上真实的折腾过程。</p><h2 id="我应不应该购买机械君？"><a href="#我应不应该购买机械君？" class="headerlink" title="我应不应该购买机械君？"></a>我应不应该购买机械君？</h2><p><img src="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/v2-a63698da119c5c8b8b71aaf0328b11a0_b.jpg"><br>以上是我购买的迷你主机，可以看到价格确实很香，但是价格香代表问题多，后面我会详细描述。先说结论，针对地球上的所有人，我都不建议你购买这一款迷你主机，哪怕他价格很香，哪怕他性能很强，但是带来的糟心体验是真的很难受。</p><p>我购买的原因是，手里有一块闲置的 2T 固态和一根 8g 内存条，想着利用起来，就买了这台主机，还另外买了一根 32g 内存，凑成了 40g。</p><p>第一次发的货风扇不转，就换货了，所以图上能看到有一个售后详情。换的货二手痕迹非常严重，但是使用正常，我也不想再折腾了，就拿下了，然而麻烦才刚刚开始。</p><h2 id="遇到的问题及解决方案"><a href="#遇到的问题及解决方案" class="headerlink" title="遇到的问题及解决方案"></a>遇到的问题及解决方案</h2><h3 id="HDMI-接口问题"><a href="#HDMI-接口问题" class="headerlink" title="HDMI 接口问题"></a>HDMI 接口问题</h3><p><img src="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/v2-afea268e2447211922173fbb083a5c9a_b.jpg"><br>拿到手装上了驱动，用 HDMI 线接上了我的 4k 显示器，然后……</p><p><strong>怎么只能使用 4k 30HZ？</strong></p><p>立马找到客服确认，客服说是 HDMI2.0，说我驱动有问题，还找了个人工装模作样的帮我解决了一下问题（但最后并没有解决）。</p><p>但是我发现<strong>typec 接口可以实现 4k 60</strong>，就不想跟他争辩了。</p><p>网上也有人有这种情况（查资料的时候刷到过好几次，写文章的时候反而找不到了），我可以打包票，这两个 HDMI 接口一定是 1.4，绝非 2.0，如果你有接 4k 的需求，直接走人吧。</p><h3 id="3-5mm-怎么没声音"><a href="#3-5mm-怎么没声音" class="headerlink" title="3.5mm 怎么没声音"></a>3.5mm 怎么没声音</h3><p>该问题无解，很多人也有这个情况，可以看这篇帖子<a href="https://post.smzdm.com/p/a8xgz856/">https://post.smzdm.com/p/a8xgz856/</a>。</p><h3 id="蓝牙怎么搜不到其他设备？"><a href="#蓝牙怎么搜不到其他设备？" class="headerlink" title="蓝牙怎么搜不到其他设备？"></a>蓝牙怎么搜不到其他设备？</h3><p>该主机用的原装网卡是，8852BE，有多垃圾我就不想描述了。但是，光换网卡是不够的，因为天线也有问题。所以你还需要一个</p><p><img src="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/v2-1eb58a10ccadb2ed3abc553d6c2bc6ba_b.jpg"><br>把内置的天线干掉，你会发现，信号怎么这么好，网速怎么这么快，蓝牙怎么一点问题都没了。</p><p>问题好解决，但是排查起来相当痛苦。</p><h2 id="温度怎么这么高？"><a href="#温度怎么这么高？" class="headerlink" title="温度怎么这么高？"></a>温度怎么这么高？</h2><p>迷你主机体积小是一个很大的优点，但是带来的散热问题也是无法忽略的。</p><p><a href="https://tieba.baidu.com/p/8873148967">https://tieba.baidu.com/p/8873148967</a></p><p>我买的咸鱼一个做 3D 打印的后盖，就不给链接了。</p><p><img src="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/v2-42da2b0c347e4870c49992866e05e2d7_b.jpg"><br>卖家预留了 8010 风扇接口，但我感觉没必要，下面开了口之后散热已经好很多了，再加上风扇只能用 usb 的，会占用一个接口，我个人感觉得不偿失。</p><h3 id="接口太少"><a href="#接口太少" class="headerlink" title="接口太少"></a>接口太少</h3><p>还好有一个 typec 接口，多接一个扩展坞吧。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>把以上步骤做完，其实也要花一两百块钱了，为什么不一步到位买个大牌的，而是买这么个玩意折腾自己。</p><h2 id="软件方面的折腾"><a href="#软件方面的折腾" class="headerlink" title="软件方面的折腾"></a>软件方面的折腾</h2><h3 id="BIOS-更改显存"><a href="#BIOS-更改显存" class="headerlink" title="BIOS 更改显存"></a>BIOS 更改显存</h3><p>这个倒不是机械君的问题，因为很多锐龙的 U 都把显存默认限制在 512M，但还好，留了修改的接口。</p><p><a href="https://www.bilibili.com/video/BV1w84y167ep/">https://www.bilibili.com/video/BV1w84y167ep/</a></p><p>16g 内存设 2-4g，32g 内存就可以直接设 8g，16g 显存的话……应该没必要吧。</p><p>如果是黑苹果的话，建议改到 4g 以上，可以有效减少花屏概率。</p><p><strong>你刚刚说了啥？黑苹果？？？？</strong></p><h3 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h3><p>虽然客服让你安装 5900HX 的驱动，但这个主机的显卡驱动是不能装 5900HX 的，而是要装 5800H 的……</p><p>至于为什么，我不好评判……</p><p><a href="https://www.amd.com/zh-hans/support/apu/amd-ryzen-processors/amd-ryzen-7-mobile-processors-radeon-graphics/amd-ryzen-7-5800h">https://www.amd.com/zh-hans/support/apu/amd-ryzen-processors/amd-ryzen-7-mobile-processors-radeon-graphics/amd-ryzen-7-5800h</a></p><h3 id="黑苹果"><a href="#黑苹果" class="headerlink" title="黑苹果"></a>黑苹果</h3><p>这台机器可以直接使用 零氪 5800H 迷你主机的 EFI，功能基本正常，网卡需要更换为 AX210。我提供一个 EFI：</p><p><a href="https://github.com/songguokunsgg/jixiejun-5900hx-es-hackintosh-efi">https://github.com/songguokunsgg/jixiejun-5900hx-es-hackintosh-efi</a></p><p>5800H&#x2F;5900HX 的迷你主机可用</p><p>但是使用过程中，可能会不定期自动重启（从早一直用到晚可能会触发，频次低），这个问题我没有排查出来，可能跟硬盘有关。</p><p>不过每次几秒钟就会重新启动，窗口数据也都还在，倒也不是很影响使用。</p><p>注意，安装过程中需要禁用 nootedred，安装完成，进入系统后再启用 nootedred，详细操作就不描述了，使用 OCAT 就可以搞定。</p><p><img src="/2024/04/07/%E6%9C%BA%E6%A2%B0%E5%90%9B%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E5%88%9A%E4%B9%B0%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E6%9D%A5%E7%9C%8B%E7%9C%8B_EberyThingSay/v2-e9448980daac76a61131736fff2d555b_b.jpg"><br>推荐使用 13.6.6 系统，屏蔽 macOS 14 的更新，实测很稳定。</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>时间有限，先写这么多吧，如果后面有什么好玩的，我会再分享出来。</p><p>如果你还没有购买机械君，建议换别的品牌，如果你已经买了，相信这篇文章会为你提供一些帮助。</p><p>文中出现的问题仅限于我这台机器，如果你的机器没有，请不要喷我，我都是实话实说。</p>]]></content>
    
    
    <categories>
      
      <category>PC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>迷你主机浅谈</title>
    <link href="/2024/02/21/%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E6%B5%85%E8%B0%88_EberyThingSay/"/>
    <url>/2024/02/21/%E8%BF%B7%E4%BD%A0%E4%B8%BB%E6%9C%BA%E6%B5%85%E8%B0%88_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="迷你主机浅谈"><a href="#迷你主机浅谈" class="headerlink" title="迷你主机浅谈"></a>迷你主机浅谈</h1><h2 id="为什么市面上会出现迷你主机"><a href="#为什么市面上会出现迷你主机" class="headerlink" title="为什么市面上会出现迷你主机"></a>为什么市面上会出现迷你主机</h2><p>我已经忘记了迷你主机是什么时候开始在市场上占有一席之地的，隐约记得是 NUC 带动的。我记得有一款 intel i5-8259U 的 NUC，在黑苹果市场特别火，在更换免驱网卡之后几乎可以完美黑苹果。在接下来的几年中，也不断有新款的迷你主机问世，但是并没有引起广泛关注。2022 年到 2023 年之间，多出了很多厂商做这款业务，这款产品才逐渐进入大众视野。</p><p>我在去年（2023）入手了一台机械君的 R9-5900HX ES 版的准系统主机，1299 元。这也是目前我入手过的唯一一台，说实在的，我最开始并没有指望这款机器有多耐用，抑或是有多么强的性能，我只是单纯的好奇这样的产品。顺带一提，我一直是 macos 党，手里的笔记本是 macbook pro，入手这样一款小主机也能够弥补我没有 windows 的问题，这也是我选择 ES 版的原因，比较便宜，能够用上我闲置的笔记本 DDR4 内存。</p><p>下面，我将从我自身使用的角度，以及一些预想的场景，来写一写，迷你主机究竟适合那些用户，以及笔记本电脑的痛点是什么。</p><h3 id="场景一：大学生上课"><a href="#场景一：大学生上课" class="headerlink" title="场景一：大学生上课"></a>场景一：大学生上课</h3><p>这个场景是我虚构的场景，但我好歹也曾经上过课，因此可以大胆的假设一下。</p><p>在七点的早晨，要赶早八的你将桌面上的迷你主机装进背包，将电源线和键盘鼠标装进背包的第二格，腋下夹着一块便携屏，嘴里含着一块面包。你急匆匆的走到教室，那个你往常都在的座位，但很不幸，不知道是谁已经坐在了那里。你心想完蛋了，整个教室就那一个座位有插头。幸运的是，你带了排插，当你拿出所有的设备，却发现 HDMI 线没带。（<strong>设备太杂乱容易忘带某件物品</strong>）。你看着身边带着笔记本电脑的同学，觉得自己也应该，买一台。</p><h3 id="场景二：移动办公"><a href="#场景二：移动办公" class="headerlink" title="场景二：移动办公"></a>场景二：移动办公</h3><p>你在办公室放了一台迷你主机，下班后，你将他带回家，接上 oculink 拓展坞，爽玩游戏。反正办公室和家里都有显示器和键鼠，一台轻巧的小主机能够满足你所有的需求，还不用把数据倒来倒去，岂不美哉？</p><p>该场景同样适用于<strong>大学生放假回家</strong>等情况。</p><h3 id="场景三：小型服务器"><a href="#场景三：小型服务器" class="headerlink" title="场景三：小型服务器"></a>场景三：小型服务器</h3><p>你已经有了一台其他的设备，但你需要一台 24 小时不间断工作的设备，以完成一些自动化工作。你将迷你主机配置好之后，直接 ssh 进去，将自动化工作挂在后台。此后的一个月，你都没有去碰它，但它却默默地为你付出着。（前提是机器质量要好，别跑几天就熄火了）。</p><p>在背后付出的他，不需要键盘鼠标，不需要显示器，放在一个角落，插着电即可。</p><h3 id="场景四：多平台"><a href="#场景四：多平台" class="headerlink" title="场景四：多平台"></a>场景四：多平台</h3><p>你有一台 macbook，但是出于某些原因，你需要一台 windows 电脑和一台 linux 电脑。他们不常用，但不能没有。你选择了一台迷你主机，装好 windows，再用虚拟机装一个 linux，在你有需要的时候，他就会派上用场。而这只需要 1000 出头的价格。你心想，如果买笔记本或者配一台相同性能的台式机，怎么也得几千块吧，还占地方。</p><h3 id="场景五：跑路"><a href="#场景五：跑路" class="headerlink" title="场景五：跑路"></a>场景五：跑路</h3><p>你不想干了，看着桌子下面几十斤重的 4090 主机，你想让老板来帮你抬一抬，但这是不可能的。要是把 4090 放家里，公司留一台迷你主机多好，你跑路都没人追得上你。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>虚构了五个场景，有些情况有些极端。但我相信，你看完之后一定能够有所思考。需要明白的是，迷你主机，始终是主机，他对标的应该是台式机而不是笔记本（迷你笔记本对标笔记本）。迷你主机相比主机而言，便宜、便携性强，但是、性能差、散热差，这是他们差异化的表现。我总结了以下几点容易陷入的误区。</p><ol><li>迷你主机不适合随叫随到型移动办公：要想使用迷你主机，你需要带齐一整套外设。经常移动的话，反而是一种负担，这种情况应该购买笔记本。</li><li>迷你主机不适合高性能追求者：迷你主机用的 cpu 和显卡都是移动端的，散热也比主机更差，因此性能比不过是可以理解的。现在可以通过外接显卡的方式实现高性能，但这着实是麻烦了一点。如果你的使用场景契合场景二，可以考虑购入。</li><li>迷你主机不适合小白：对电脑的了解程度直接决定你是否应该买迷你主机。目前迷你主机的水很深，有可能会买到不心仪的产品。比如说，机械君的这台迷你主机，客服说 HDMI 接口是 2.0，但其实是虚假宣传，4k 根本跑不到 60 帧，如果你不懂电脑，可能注意不到这些偷工减料的地方。提供几个参考名词：Ryzen、IPC、NVME、DP、RGB、内存、硬盘。如果你不知道这些名词的意思，建议不买（有懂哥帮忙除外）。</li><li>迷你主机适合已经有一台笔记本的人：由于笔记本已经能够满足移动办公需求，迷你主机刚好可以跟笔记本互补。如果你不喜欢主机的傻大黑粗，那就更适合了。</li></ol>]]></content>
    
    
    <categories>
      
      <category>PC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何准备机器学习工程师的面试？</title>
    <link href="/2024/02/13/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E9%9D%A2%E8%AF%95__EberyThingSay/"/>
    <url>/2024/02/13/%E5%A6%82%E4%BD%95%E5%87%86%E5%A4%87%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E9%9D%A2%E8%AF%95__EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="如何准备机器学习工程师的面试？"><a href="#如何准备机器学习工程师的面试？" class="headerlink" title="如何准备机器学习工程师的面试？"></a>如何准备机器学习工程师的面试？</h1><h2 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h2><p>这份文档是我为校招面试而准备的，最后并没有用上。许多的内容都来自于互联网和 ChatGPT，我只针对相关知识进行了简单梳理，并不保证全面和严谨。在撰写过程中几乎都是用人话写的，应该还算通俗，如果您觉得有所帮助，可以点个关注，谢谢。</p><p>注意：文档最初使用 markdown 写的，导入的时候行内公式没有正确转换，我手动修改了一些，但是仍有不少遗漏，敬请谅解。</p><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><h3 id="归一化以及标准化"><a href="#归一化以及标准化" class="headerlink" title="归一化以及标准化"></a>归一化以及标准化</h3><p>归一化（Normalization）和标准化（Standardization）是数据预处理的两种常用技术，它们都旨在处理数据特征的尺度问题，以便于进行后续的数据分析或模型训练。</p><h3 id="归一化"><a href="#归一化" class="headerlink" title="归一化"></a>归一化</h3><p>归一化通常是将数据按比例缩放，使之落入一个小的、特定的区间，常见的是将数据缩放到 [0, 1] 或者 [-1, 1] 的区间。</p><p><strong>作用</strong>：</p><ul><li>提高模型的收敛速度；</li><li>提高模型的精度。</li><li>原因 (统一数据尺度，加速梯度下降，避免梯度消失和梯度爆炸，正则化效果)</li></ul><p><strong>常用的归一化公式</strong>：</p><ol><li><strong>Min-Max 归一化</strong>：</li></ol><p>$ x_{\text{norm}} &#x3D; \frac{x - x_{\text{min}}}{x_{\text{max}} - x_{\text{min}}} $ </p><ol><li><strong>Max 归一化</strong>：</li></ol><p>$ x_{\text{norm}} &#x3D; \frac{x}{x_{\text{max}}} $ </p><h3 id="标准化"><a href="#标准化" class="headerlink" title="标准化"></a>标准化</h3><p>标准化通常是去均值、方差缩放，使数据符合<strong>标准正态分布</strong>，即均值为 0，标准差为 1。</p><p><strong>作用</strong>：</p><ul><li>使不同规模或单位的特征可比；</li><li>符合一些模型对数据分布的假设（例如 PCA、线性回归模型等）。</li></ul><p><strong>常用的标准化公式</strong>：</p><ol><li><strong>Z-score 标准化</strong>：</li></ol><p>$ x_{\text{std}} &#x3D; \frac{x - \mu}{\sigma} $ </p><p>其中$\mu$ 是均值， $\sigma$ 是标准差。</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li><strong>归一化</strong>通常应用在梯度下降、神经网络等模型中，这些模型对<strong>特征的尺度比较敏感</strong>;</li><li><strong>标准化</strong>适用于 PCA、逻辑回归、支持向量机等<strong>依赖于距离或梯度</strong>的模型。</li></ul><p>值得注意的是，归一化和标准化的选择需要依据具体的模型和问题场景来定。在某些场合下，原始的、非标准化的数据可能会带来更好的结果。所以，在模型训练时，合适尝试不同的数据预处理方法，以便找到最佳的策略。</p><h3 id="过滤方法（Filter-Methods）"><a href="#过滤方法（Filter-Methods）" class="headerlink" title="过滤方法（Filter Methods）"></a>过滤方法（Filter Methods）</h3><p>特征工程（Feature Engineering）包括特征选择和特征提取。”Filter” 通常指的是过滤方法（Filter Methods）。</p><p>过滤方法是一种特征选择技术，其主要目标是从原始特征集中<strong>选择出</strong>一部分最有用的、与目标变量最相关的<strong>特征子集</strong>。等于说是做了一次数据预处理，跟粗糙集特征选择是一样的。</p><p>与包装方法（Wrapper Methods）和嵌入方法（Embedded Methods）不同，过滤方法在特征选择的过程中<strong>不涉及到机器学习算法的学习过程</strong>。</p><p>其特点和步骤大致如下：</p><h3 id="1-与模型独立"><a href="#1-与模型独立" class="headerlink" title="1. 与模型独立"></a>1. 与模型独立</h3><p>不考虑模型的预测能力，而是依据每个特征与目标变量的相关性来进行选择。</p><p>相关性的衡量方式有很多种。</p><h3 id="2-评分机制"><a href="#2-评分机制" class="headerlink" title="2. 评分机制"></a>2. 评分机制</h3><p>为每个特征赋予一个分数，这个分数反映了该特征与响应变量之间的关系强度或者相关程度。</p><ul><li><strong>相关系数</strong>：衡量特征与目标变量之间的线性关系；</li><li><strong>卡方检验</strong>：用于衡量特征与类别之间的关系；</li><li><strong>互信息</strong>：衡量两个变量之间的依赖程度，可用于类别型和数值型变量；</li></ul><h3 id="3-选择子集"><a href="#3-选择子集" class="headerlink" title="3. 选择子集"></a>3. 选择子集</h3><p>根据每个特征的分数进行排序，并选取分数最高的 k 个特征作为最终的特征子集。</p><h3 id="4-粗糙集数据挖掘"><a href="#4-粗糙集数据挖掘" class="headerlink" title="4. 粗糙集数据挖掘"></a>4. 粗糙集数据挖掘</h3><p>同样有评分机制，但是并不需要指定特征数，选出维持正域不变的最小特征子集即可。</p><h3 id="作用和目的"><a href="#作用和目的" class="headerlink" title="作用和目的"></a>作用和目的</h3><ul><li><strong>降低计算成本</strong>：减少模型训练和预测所需要的计算资源；</li><li><strong>减轻过拟合</strong>：通过消除不相关或弱相关的特征，减少模型的过拟合风险；</li><li><strong>提高模型性能</strong>：在某些情况下，消除噪声特征可能帮助模型提高预测的准确性；</li><li><strong>增强模型的可解释性</strong>：更简洁的模型通常更容易解释和理解。</li></ul><p>过滤方法由于计算效率高、实现简单并且不依赖于特定模型，所以在特征选择的初始阶段经常被用来快速筛选特征。然后，你可能还需要利用其他特征选择方法来进一步优化特征集合。</p><h3 id="wrapper-包装方法"><a href="#wrapper-包装方法" class="headerlink" title="wrapper 包装方法"></a>wrapper 包装方法</h3><p>“Wrapper” 在特征工程中指的是包装方法（Wrapper Methods）。包装方法在特征选择过程中<strong>会考虑到模型的性能</strong>，进而找到一个理想的特征子集来优化模型的表现。</p><h3 id="包装方法的核心思想"><a href="#包装方法的核心思想" class="headerlink" title="包装方法的核心思想"></a>包装方法的核心思想</h3><ol><li><strong>依赖模型</strong>：</li><li>特征选择的过程是在模型训练的基础上完成的，也就是说模型的性能用来评价特征的好坏。</li><li><strong>搜索子集</strong>：</li><li>通过搜索特征的子集空间来找到最优的特征子集，即让模型在此子集上获得最佳的性能表现。</li></ol><h3 id="常见的包装方法包括"><a href="#常见的包装方法包括" class="headerlink" title="常见的包装方法包括"></a>常见的包装方法包括</h3><ol><li><strong>递归特征消除（Recursive Feature Elimination, RFE）</strong>：</li><li>该方法首先在全部特征上训练模型，然后移除最不重要的特征（例如模型权重最小的特征），再用剩下的特征重新训练模型。这个过程递归进行，直至达到预定的特征数量。</li><li><strong>前向选择（Forward Selection）</strong>：</li><li>开始时，模型没有任何特征。然后逐渐加入提升模型性能最大的特征。这一过程不断重复，直到加入新特征不再显著提升模型性能为止。</li><li><strong>后向消除（Backward Elimination）</strong>：</li><li>与前向选择相反，后向消除开始时使用所有特征，然后逐步移除对模型贡献最小的特征，直到移除任何一个特征都会损害模型性能为止。</li></ol><h3 id="包装方法的特点"><a href="#包装方法的特点" class="headerlink" title="包装方法的特点"></a>包装方法的特点</h3><ul><li><strong>优点</strong>：</li><li>考虑了模型性能，通常能找到更符合模型的特征子集。</li><li>在某些情况下，比过滤方法能更准确地找到最优的特征子集。</li><li><strong>缺点</strong>：</li><li>计算成本高。</li><li>过于依赖所选择的模型。如果选择的模型不佳，那么进行特征选择的结果也可能不理想。</li></ul><p>包装方法通常适用于特征数量相对较少的情况，或者当你准备花费更多的时间和计算资源来寻找最优特征子集的时候。</p><h3 id="ebedded-方法"><a href="#ebedded-方法" class="headerlink" title="ebedded 方法"></a>ebedded 方法</h3><p>在特征工程中，”Embedded”（嵌入法）是一种特征选择方法，它试图在模型训练过程中找到最重要的特征。不同于过滤方法（Filter Methods）和包装方法（Wrapper Methods），嵌入法在学习器训练过程中自动进行特征选择。</p><h3 id="嵌入方法（Embedded-Methods）"><a href="#嵌入方法（Embedded-Methods）" class="headerlink" title="嵌入方法（Embedded Methods）"></a>嵌入方法（Embedded Methods）</h3><h3 id="1-特征选择过程"><a href="#1-特征选择过程" class="headerlink" title="1. 特征选择过程"></a>1. 特征选择过程</h3><p>嵌入方法在模型训练的同时进行特征选择。这类方法通常会在模型训练过程中自动选择一个特征子集，通常依赖于模型自身的属性或参数。</p><h3 id="2-实现机制"><a href="#2-实现机制" class="headerlink" title="2. 实现机制"></a>2. 实现机制</h3><ul><li><strong>基于惩罚项</strong>：例如在岭回归（Ridge Regression）和套索回归（Lasso Regression）中，通过引入 L2 或 L1 正则项来缩减不重要特征的系数，进行特征选择。</li><li><strong>基于树模型</strong>：例如决策树和随机森林，它们在构建树的过程中自然地进行了特征选择，将<strong>重要的特征用于树的顶部分裂</strong>，而不重要的特征可能不会用于分裂或者出现在靠近叶子的位置。</li></ul><h3 id="3-优点"><a href="#3-优点" class="headerlink" title="3. 优点"></a>3. 优点</h3><ul><li>考虑到了模型和特征选择的互动，通常能获得比过滤方法更优的特征子集。</li><li>特征选择过程与模型训练过程结合在一起，<strong>计算效率较高</strong>。</li></ul><h3 id="4-缺点"><a href="#4-缺点" class="headerlink" title="4. 缺点"></a>4. 缺点</h3><ul><li>依赖于模型选择的准确性，所选择的特征子集质量高低和所用模型有直接关系。</li><li>可解释性可能较差，特别是在使用一些复杂的非线性模型时。</li></ul><h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h3><p>L1 正则化和 L2 正则化是机器学习和统计学中常用的两种正则化技术。正则化是用来防止过拟合，并提高模型的泛化能力的一种方法。</p><ol><li><strong>定义</strong>:</li><li><strong>L1 正则化</strong>:</li></ol><ul><li>L1 正则化是指在损失函数中添加参数权重的绝对值之和，公式为 $\lambda \sum |w_i| $ ，其中 $\lambda \sum |w_i|$ 是模型参数， $\lambda$ 是正则化系数。</li></ul><ol><li><strong>L2 正则化</strong>:</li></ol><ul><li>L2 正则化是指在损失函数中添加参数权重的平方和，公式为 $ \lambda \sum w_i^2$ ，其中 $\lambda \sum w_i^2$ 是模型参数， $\lambda \sum w_i^2$ 是正则化系数。</li></ul><ol><li><strong>目的</strong>:</li><li><strong>L1 正则化</strong>和<strong>L2 正则化</strong>的主要目的都是通过在损失函数中添加额外的项来控制模型的复杂度，以防止过拟合和提高模型的泛化能力。</li><li><strong>稀疏性</strong>:</li><li><strong>L1 正则化</strong>能够产生稀疏解，即得到的参数向量中会有许多零值，这有助于特征选择。</li><li><strong>L2 正则化</strong>通常不会产生稀疏解，而是倾向于将参数向量中的所有元素都缩小，但不会将它们准确地设为零。</li><li><strong>解的唯一性</strong>:</li><li><strong>L1 正则化</strong>可能得到多个解，因为 L1 正则化的解空间可能在某些方向上是不连续的。</li><li><strong>L2 正则化</strong>总是得到唯一解，因为 L2 正则化的解空间是平滑的和连续的。</li><li><strong>解析解</strong>:</li><li><strong>L1 正则化</strong>通常没有解析解，需要使用迭代方法来求解。</li><li><strong>L2 正则化</strong>在某些情况下可以得到解析解，例如线性回归模型。</li><li><strong>计算复杂度</strong>:</li><li><strong>L1 正则化</strong>的计算可能更为复杂，因为它的解可能需要求解非线性的优化问题。</li><li><strong>L2 正则化</strong>的计算相对简单，因为它的解可以通过求解线性方程组得到。</li><li><strong>鲁棒性</strong>:</li><li><strong>L1 正则化</strong>对于异常值具有更好的鲁棒性，因为它倾向于产生稀疏解，忽略不重要的特征。</li><li><strong>L2 正则化</strong>可能对异常值较为敏感，因为它倾向于使用所有的特征。</li></ol><p>在实际应用中，选择 L1 正则化还是 L2 正则化通常取决于问题的具体需求和数据的特性。例如，如果特征选择是重要的考虑因素，可能会选择 L1 正则化；如果模型的稳定性和解的唯一性更为重要，可能会选择 L2 正则化。</p><h3 id="常用的嵌入方法技术"><a href="#常用的嵌入方法技术" class="headerlink" title="常用的嵌入方法技术"></a>常用的嵌入方法技术</h3><ol><li><strong>Lasso 回归</strong>：L1 正则化可以将不重要的特征系数压缩至零，自然地实现了特征的选择。</li></ol><p>$ J(\theta) &#x3D; \text{MSE} + \alpha \sum_{i&#x3D;1}^{n} |\theta_i| $ </p><ol><li><strong>决策树</strong>：通过信息增益或基尼不纯度等指标，在构建树的过程中进行特征选择。</li><li><strong>正则化网络</strong>：例如 Elastic Net，结合了 L1 和 L2 正则化，同时兼顾特征选择和模型的稳健性。</li><li><strong>支持向量机</strong>：使用线性核的 SVM 并引入 L1 正则化，可以在分类的同时进行特征选择。</li></ol><p>嵌入方法由于直接考虑到了模型的学习过程，通常在保证模型性能的同时能够获得较为精简的特征子集。不过，最终选择哪种特征选择方法还需结合实际问题的需求和特点来决定。</p><h2 id="模型评估"><a href="#模型评估" class="headerlink" title="模型评估"></a>模型评估</h2><h3 id="准确率和召回率"><a href="#准确率和召回率" class="headerlink" title="准确率和召回率"></a>准确率和召回率</h3><p>准确率（Precision）和召回率（Recall）是分类模型性能评估的两个重要指标，它们分别关注了模型预测正类样本的准确性和完整性。这两个指标常常和其他指标一起用来评估模型在正类预测上的表现。</p><h3 id="1-准确率（Precision）"><a href="#1-准确率（Precision）" class="headerlink" title="1. 准确率（Precision）"></a>1. 准确率（Precision）</h3><p>准确率关注的是模型预测为正类的样本中有多少是真正的正类样本。其计算公式为：</p><p>$ \text{Precision} &#x3D; \frac{\text{TP}}{\text{TP} + \text{FP}} $ </p><p>其中，TP（True Positive）是真正类（模型预测为正类，实际也为正类）的样本数量，FP（False Positive）是假正类（模型预测为正类，实际为负类）的样本数量。</p><h3 id="2-召回率（Recall）"><a href="#2-召回率（Recall）" class="headerlink" title="2. 召回率（Recall）"></a>2. 召回率（Recall）</h3><p>召回率关注的是实际所有正类样本中有多少被模型预测出来了。其计算公式为：</p><p>$ \text{Recall} &#x3D; \frac{\text{TP}}{\text{TP} + \text{FN}} $ </p><p>其中，FN（False Negative）是假负类（模型预测为负类，实际为正类）的样本数量。</p><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ul><li><strong>关注点不同</strong>：准确率关注的是预测为正类的样本中实际正类的比例，而召回率关注的是实际正类样本中被正确预测出的比例。</li><li><strong>权衡关系</strong>：在多数情况下，准确率和召回率呈现一种权衡的关系，提高准确率可能会降低召回率，反之亦然。这种权衡关系通常使用 F1 分数（F1 Score）来综合衡量，其计算公式为：</li></ul><p>$ F1 &#x3D; 2 \times \frac{\text{Precision} \times \text{Recall}}{\text{Precision} + \text{Recall}} $ </p><ul><li><strong>应用场景</strong>：在某些场景下，我们可能更关心准确率，比如在垃圾邮件检测中，我们不希望重要邮件被误判为垃圾邮件。在其他场景下，我们可能更关心召回率，例如在疾病检测中，我们不希望漏检任何一个病患。</li></ul><h3 id="P-R-曲线"><a href="#P-R-曲线" class="headerlink" title="P-R 曲线"></a>P-R 曲线</h3><p>P-R 曲线（Precision-Recall Curve）是一种用于评估二元分类模型（Binary Classification）性能的工具。该曲线绘制了在不同决策阈值下，模型的准确率（Precision）和召回率（Recall）之间的关系。在一些实际问题（特别是在正负类样本不平衡的情况下）中，P-R 曲线是一个很有用的工具，因为它关注的重点是正类的预测能力。</p><h3 id="P-R-曲线与-ROC-曲线的区别"><a href="#P-R-曲线与-ROC-曲线的区别" class="headerlink" title="P-R 曲线与 ROC 曲线的区别"></a>P-R 曲线与 ROC 曲线的区别</h3><ul><li>关注点不同：P-R 曲线关注的是正类的预测性能，而 ROC 曲线同时考虑了正类和负类的预测性能。</li><li>Y 轴标度不同：P-R 曲线的 Y 轴是 Precision，而 ROC 曲线的 Y 轴是 True Positive Rate（也叫做 Recall 或敏感性）。</li><li>选择依据：在正负样本<strong>严重不均衡</strong>的情况下，P-R 曲线通常更能反映模型对正类样本预测的真实情况。</li></ul><h3 id="参数调优"><a href="#参数调优" class="headerlink" title="参数调优"></a>参数调优</h3><p>参数调优（Hyperparameter Tuning）是机器学习中一个关键的步骤，它涉及到在给定的搜索空间中寻找模型表现最优的参数配置。对模型的参数进行优化可以显著提高模型的预测能力。下面简单介绍几种常用的参数调优方法：网格搜索、随机搜索以及贝叶斯优化。</p><h3 id="1-网格搜索（Grid-Search）-穷举法"><a href="#1-网格搜索（Grid-Search）-穷举法" class="headerlink" title="1. 网格搜索（Grid Search）(穷举法)"></a>1. 网格搜索（Grid Search）(穷举法)</h3><p>网格搜索是一种穷举搜索方法。它通过预先定义好的参数范围和取值，生成参数组合的“网格”，然后遍历这些组合来寻找最优参数。</p><ul><li><strong>优点</strong>：理论上能找到最优参数组合（至少在你设定的范围和步长内）。</li><li><strong>缺点</strong>：计算量大，尤其是当参数空间较大或模型较复杂时。</li></ul><h3 id="2-随机搜索（Random-Search）-网格中抽样"><a href="#2-随机搜索（Random-Search）-网格中抽样" class="headerlink" title="2. 随机搜索（Random Search）(网格中抽样)"></a>2. 随机搜索（Random Search）(网格中抽样)</h3><p>不同于网格搜索，随机搜索并不尝试所有可能的参数组合，而是在参数空间中随机抽样，根据这些样本来找到最优参数。</p><ul><li><strong>优点</strong>：比网格搜索更高效，尤其是在参数空间较大时；并且在实践中，随机搜索通常能够在相对较少的迭代次数中找到不错的参数组合。</li><li><strong>缺点</strong>：没有网格搜索精确，可能错过某些参数组合。</li></ul><h3 id="3-贝叶斯优化（Bayesian-Optimization）"><a href="#3-贝叶斯优化（Bayesian-Optimization）" class="headerlink" title="3. 贝叶斯优化（Bayesian Optimization）"></a>3. 贝叶斯优化（Bayesian Optimization）</h3><p>贝叶斯优化使用概率模型（通常是高斯过程）来预测在哪里可以找到有效的参数组合，并据此进行下一步的搜索，因此，它在每一步迭代时都会<strong>考虑到之前的搜索结果</strong>。</p><ul><li><strong>优点</strong>：相比于网格搜索和随机搜索，贝叶斯优化通常能更快地找到最优参数组合；并且它可以更有效地利用有限的资源。</li><li><strong>缺点</strong>：建立和调优概率模型可能在某些情况下比直接进行参数搜索更为复杂和计算密集。</li></ul><h3 id="过拟合与欠拟合"><a href="#过拟合与欠拟合" class="headerlink" title="过拟合与欠拟合"></a>过拟合与欠拟合</h3><p>欠拟合和过拟合是机器学习中常见的两种模型表现问题。它们描述了模型与数据之间的关系，以及模型对新数据的泛化能力。</p><h3 id="欠拟合（Underfitting）"><a href="#欠拟合（Underfitting）" class="headerlink" title="欠拟合（Underfitting）"></a>欠拟合（Underfitting）</h3><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>当模型过于简单，无法捕捉到数据中的模式和关系时，我们称之为欠拟合。一个欠拟合的模型在训练数据和测试数据上的表现都会较差。</p><h3 id="如何避免"><a href="#如何避免" class="headerlink" title="如何避免"></a>如何避免</h3><ol><li><strong>使用更复杂的模型</strong>：例如，对于线性回归，可以尝试多项式回归。</li><li><strong>增加特征</strong>：引入更多的特征，或者构建特征的组合。</li><li><strong>减少正则化</strong>：如果使用了正则化技术（如 L1 或 L2 正则化），尝试减小正则化系数。</li></ol><h3 id="过拟合（Overfitting）"><a href="#过拟合（Overfitting）" class="headerlink" title="过拟合（Overfitting）"></a>过拟合（Overfitting）</h3><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>当模型过于复杂，不仅学习了数据中的真实模式，还学习了数据中的噪声，我们称之为过拟合。一个过拟合的模型在训练数据上的表现很好，但在测试数据上的表现较差，因为它对新的、未见过的数据泛化能力较差。</p><h3 id="如何避免-1"><a href="#如何避免-1" class="headerlink" title="如何避免"></a>如何避免</h3><ol><li><strong>获取更多的数据</strong>：更多的数据可以帮助模型泛化得更好。</li><li><strong>使用简化的模型</strong>：例如，从神经网络中减少隐藏层或隐藏单元。</li><li><strong>添加正则化</strong>：如 L1 或 L2 正则化，这可以约束模型的复杂性。</li><li><strong>特征选择</strong>：减少不相关或冗余的特征。</li><li><strong>早停</strong>：对于某些迭代的模型（如神经网络），当验证误差停止减少或开始增加时，停止训练。</li><li><strong>使用集成方法</strong>：如 Bagging 和 Boosting，通过组合多个模型的预测来减少过拟合。</li><li><strong>交叉验证</strong>：使用交叉验证选择模型的超参数，以确保模型在多个子集上的表现都较好。</li><li><strong>剪枝</strong>：对于决策树等模型，减少模型的深度或叶节点数量。</li></ol><h3 id="SVM"><a href="#SVM" class="headerlink" title="SVM"></a>SVM</h3><h3 id="支持向量机-SVM"><a href="#支持向量机-SVM" class="headerlink" title="支持向量机 (SVM)"></a>支持向量机 (SVM)</h3><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>支持向量机（Support Vector Machine，SVM）是一种用于分类和回归的监督学习算法。在分类问题中，SVM 试图找到一个超平面，最大化两个类别之间的边缘（margin），即数据点到超平面的最小距离。</p><h3 id="公式推导"><a href="#公式推导" class="headerlink" title="公式推导"></a>公式推导</h3><p>基本的线性 SVM 分类器求解的问题可以表述为以下优化问题：</p><p>$ \min_{\mathbf{w}, b} \frac{1}{2}|\mathbf{w}|^2\ s.t.\ y_i(\mathbf{w} \cdot \mathbf{x}_i + b) \geq 1, \quad i &#x3D; 1, \ldots, N $ </p><p>这里：</p><ul><li>$\lambda \sum w_i^2$ 是超平面的法向量</li><li>$b$ 是超平面的偏置项</li><li>$ \lambda \sum w_i^2$ 是数据点</li><li>$y_i$ 是数据点对应的类别标签（通常是 +1 或 -1）</li></ul><h3 id="对偶和-KKT-条件"><a href="#对偶和-KKT-条件" class="headerlink" title="对偶和 KKT 条件"></a>对偶和 KKT 条件</h3><p>对偶问题是指从原始优化问题（Primal Problem）出发，通过一些数学变换得到的另一个问题。对于 SVM 来说，我们可以用拉格朗日乘子法把原始问题转化为它的对偶问题，这使得问题的求解更加高效，并允许我们用核技巧（Kernel trick）来处理非线性问题。</p><p>KKT（Karush-Kuhn-Tucker）条件提供了一个检查某个点是否是优化问题解的必要和充分条件。在 SVM 中，KKT 条件允许我们确定一个数据点是否是支持向量。</p><h3 id="优劣势"><a href="#优劣势" class="headerlink" title="优劣势"></a>优劣势</h3><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li><strong>泛化能力强</strong>：在很多实际问题中，SVM 具有较好的泛化性能。</li><li><strong>处理非线性问题</strong>：通过核技巧，SVM 可以处理非线性问题。</li><li><strong>全局最优解</strong>：SVM 的解是全局最优的，而不是局部最优。</li><li><strong>稀疏性</strong>：只有支持向量会参与到最终模型的决策中。</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li><strong>核函数选择</strong>：正确选择或构造核函数可能比较困难。</li><li><strong>大规模数据</strong>：在大规模数据集上，SVM 的计算复杂度较高，训练过程可能比较耗时。</li><li><strong>多分类问题</strong>：标准的 SVM 只适用于二分类问题。虽然可以通过一些策略（例如“一对一”或“一对其余”）来解决多分类问题，但这些策略在某些场景下可能不是很有效。</li></ol><p>注意：以上内容仅为概述性的讨论。具体的公式推导、对偶问题、KKT 条件等涉及较深入的数学理论和技术细节，您可能需要参考相关教材或研究文章以获取更深入的理解和洞察。</p><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h3 id="1-ID3-算法"><a href="#1-ID3-算法" class="headerlink" title="1. ID3 算法"></a>1. ID3 算法</h3><h3 id="最大信息增益公式"><a href="#最大信息增益公式" class="headerlink" title="最大信息增益公式"></a>最大信息增益公式</h3><p>信息增益（Information Gain, IG）表示得知特征 $X$ 的信息而使得类 $Y$ 的信息的不确定性减少的程度。计算公式如下：</p><p>$ IG(Y|X) &#x3D; H(Y) - H(Y|X) $ </p><p>$ 信息增益&#x3D;Y 熵-X 下 Y 条件熵 $ </p><p>其中， $H(Y)$ 是数据集 $D$ 的熵（Entropy）, 计算公式为：</p><p>$ H(Y) &#x3D; -\sum_{i&#x3D;1}^{m} p(y_i) \log_2 p(y_i) $ </p><p>而条件熵 $X$ 表示在已知随机变量 $X$ 的条件下随机变量 $Y$ 的不确定性，计算公式为：</p><p>$ H(Y|X) &#x3D; \sum_{i&#x3D;1}^{n} p(x_i) H(Y|x_i) $ </p><h3 id="2-C4-5-算法"><a href="#2-C4-5-算法" class="headerlink" title="2. C4.5 算法"></a>2. C4.5 算法</h3><h3 id="最大信息增益率公式"><a href="#最大信息增益率公式" class="headerlink" title="最大信息增益率公式"></a>最大信息增益率公式</h3><p>C4.5 算法使用信息增益率（Gain Ratio）来选择分裂特征，计算公式如下：</p><p>$ GR(Y|X) &#x3D; \frac{IG(Y|X)}{IV(X)} $ </p><p>其中，信息增益 $G(X|Y)$ 与 ID3 中的定义相同，而固有值 $IV(X)$ 定义为：</p><p>$ IV(X) &#x3D; -\sum_{i&#x3D;1}^{n} p(x_i) \log_2 p(x_i) $ </p><h3 id="信息增益率更好的原因"><a href="#信息增益率更好的原因" class="headerlink" title="信息增益率更好的原因"></a>信息增益率更好的原因</h3><ol><li><strong>偏向处理</strong>:</li><li><strong>信息增益</strong>倾向于选择具有更多值的属性，因为这样的属性能更好地区分数据，但可能导致过拟合。</li><li><strong>信息增益率</strong>在信息增益的基础上除以一个称为属性固有值（Intrinsic Value）的值，从而减轻了对具有多个值的属性的偏见。</li><li><strong>模型泛化能力</strong>:</li><li>通过减轻对具有更多类别的特征的偏见，<strong>信息增益率</strong>可能会提高模型的泛化能力，使模型在未见过的数据上表现得更好。</li><li><strong>特征选择的准确性</strong>:</li><li><strong>信息增益率</strong>通过<strong>固有值的归一化</strong>来提供更准确的特征选择，从而可能会导致建立一个更简单和更有效的模型。</li><li><strong>处理连续和离散属性</strong>:</li><li>在处理连续属性时，<strong>信息增益率</strong>可能提供更好的特征选择，因为它能减轻信息增益对高度区分的特征的偏好。</li></ol><h3 id="3-CART-算法"><a href="#3-CART-算法" class="headerlink" title="3. CART 算法"></a>3. CART 算法</h3><h3 id="基尼指数公式"><a href="#基尼指数公式" class="headerlink" title="基尼指数公式"></a>基尼指数公式</h3><p>CART 使用基尼指数（Gini Index）来选择分裂点，基尼指数反映了从数据集$D$中随机抽取两个样本，其类标记不一致的概率，计算公式为：</p><p>$ Gini(D) &#x3D; 1 - \sum_{i&#x3D;1}^{m} p^2(y_i) $ </p><p>对于二分类问题，该公式可以简化为：</p><p>$ Gini(D) &#x3D; 2p(1-p) $ </p><p>其中，$p$是正类样本的比例。</p><h3 id="回归树步骤"><a href="#回归树步骤" class="headerlink" title="回归树步骤"></a>回归树步骤</h3><p>对于回归树，CART 会尝试找到使得<strong>划分后的子集内的样本目标值的方差最小的特征</strong>进行分裂。</p><ol><li>遍历所有的特征及其可能的取值，找到最佳的特征及其取值作为分裂依据。</li><li>使用选定的特征和取值进行分裂，生成子节点。</li><li>对子节点递归调用以上步骤，生成决策树。</li></ol><h3 id="三种树的区别"><a href="#三种树的区别" class="headerlink" title="三种树的区别"></a>三种树的区别</h3><ul><li><strong>ID3</strong>：使用信息增益来选择特征，可能倾向于选择取值较多的特征。</li><li><strong>C4.5</strong>：使用信息增益率来选择特征，修正了 ID3 的缺点，计算相对复杂。</li><li><strong>CART</strong>：可以用于分类（使用基尼指数）和回归（使用均方误差）问题，生成的是二叉树。</li></ul><p>现有的算法几乎都使用 C4.5 和 CART。在 sklearn 中，两种算法除了分裂标准不同外，其余都类似，都生成二叉树。</p><h3 id="集成学习"><a href="#集成学习" class="headerlink" title="集成学习"></a>集成学习</h3><h3 id="GBDT-Gradient-Boosting-Decision-Tree"><a href="#GBDT-Gradient-Boosting-Decision-Tree" class="headerlink" title="GBDT (Gradient Boosting Decision Tree)"></a>GBDT (Gradient Boosting Decision Tree)</h3><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><p>GBDT 是一种迭代的决策树算法，它通过拟合<strong>残差</strong>来生成每一棵树，将所有树的结果累加起来作为最终预测输出。</p><h3 id="残差"><a href="#残差" class="headerlink" title="残差"></a>残差</h3><ol><li><strong>残差的定义</strong>:</li><li>数学上，如果用 $y $ 表示实际的观测值，用 $\hat{y}$ 表示当前模型的预测值，那么残差 $r$ 可以定义为 $\hat{y}$ 。代表实际观测值与当前模型的预测值之间的差异。</li><li><strong>残差的计算和利用</strong>:</li><li>在每一轮的迭代中，GBDT 都会计算当前模型对每个训练样本的残差。然后，它会构建一个新的决策树来拟合这些残差，而不是直接拟合实际的观测值。</li><li>通过这种方式，每个新的决策树都试图纠正前一个模型的错误。</li><li><strong>模型的更新</strong>:</li><li>在构建了新的决策树之后，GBDT 会将其加入到当前的模型中，以更新模型的预测，引入了学习率来防止过拟合。</li><li><strong>梯度的角色</strong>:</li><li>实际上，残差是损失函数相对于模型预测的负梯度。在每一轮的迭代中，通过计算和拟合残差，GBDT 实际上是在执行梯度下降算法来最小化损失函数。</li><li><strong>损失函数的选择</strong>:</li><li>GBDT 可以用于回归和分类问题，通过选择不同的损失函数，比如平方损失、对数损失等，可以使 GBDT 适用于不同类型的问题。残差的计算方式会根据所选择的损失函数而有所不同。</li></ol><h3 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h3><ol><li><strong>初始化</strong>：用一个常数值来预测，通常是目标变量的均值。</li><li><strong>迭代</strong>：在每次迭代中：</li><li>计算残差（真实值与当前模型的预测值之差）。</li><li>使用残差作为目标变量 (这里有点难理解，其实是不用原来的决策类了，而是用残差当作的新的决策类来进行训练) 训练一个基学习器（通常是一个决策树）。</li><li>将基学习器的预测结果乘以一个步长（学习率）加到模型中。</li><li><strong>输出</strong>：所有树的预测结果相加，得到最终的预测值。</li></ol><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>适用于回归和分类问题。</li><li>能处理混合类型的特征。</li><li>有较好的解释性。</li></ul><h3 id="XGBoost-Extreme-Gradient-Boosting"><a href="#XGBoost-Extreme-Gradient-Boosting" class="headerlink" title="XGBoost (Extreme Gradient Boosting)"></a>XGBoost (Extreme Gradient Boosting)</h3><h3 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h3><p>XGBoost 也是一种基于树的集成模型，它基于 GBDT，并在速度和性能上做了很多优化和改进。</p><h3 id="优化与改进"><a href="#优化与改进" class="headerlink" title="优化与改进"></a>优化与改进</h3><ol><li><strong>正则化</strong>：在目标函数中加入了正则化项，用来控制模型的复杂度，防止过拟合。</li><li><strong>优化目标函数</strong>：使用了一阶和二阶梯度信息，在寻找最佳分裂点时考虑到了增益的一阶和二阶导数。</li><li><strong>稀疏感知算法</strong>：能自动处理稀疏数据，也能自定义缺失值的处理方式。</li><li><strong>列抽样</strong>：通过列抽样来防止过拟合，增强模型的泛化能力。</li><li><strong>并行化</strong>：在特征划分上进行并行计算，大大提升了速度。</li></ol><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><ul><li>在精度上通常优于其他算法。</li><li>在使用上提供了大量的可调参数。</li><li>具有很强的灵活性，能自定义优化目标和评价准则。</li><li>可以高效地处理大规模数据集。</li></ul><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><h3 id="平方差损失"><a href="#平方差损失" class="headerlink" title="平方差损失"></a>平方差损失</h3><h3 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h3><p>平方差损失（Mean Squared Error, MSE）常用于回归问题，计算模型预测值与真实值之间的平方差的平均值。表达式为：</p><p>$ MSE &#x3D; \frac{1}{n}\sum_{i&#x3D;1}^{n}(y_i - \hat{y}_i)^2 $ </p><p>其中， $y_i$ 是真实值，$\hat{y}$ 是模型的预测值，n 是样本数量。</p><h3 id="梯度下降公式推导"><a href="#梯度下降公式推导" class="headerlink" title="梯度下降公式推导"></a>梯度下降公式推导</h3><p>对于参数 $\theta$ 的梯度，可以通过对 $\theta$ 求导来获得：</p><p>$ \frac{\partial MSE}{\partial \theta} &#x3D; \frac{-2}{n}\sum_{i&#x3D;1}^{n}(y_i - \hat{y}_i)\frac{\partial \hat{y}_i}{\partial \theta} $ </p><p>在具体的模型（如线性回归模型）中，$\hat{y}_i$ 会是 $\theta$ 的具体函数形式，从而可以进一步推导梯度表达式。</p><h3 id="凸函数"><a href="#凸函数" class="headerlink" title="凸函数"></a>凸函数</h3><h3 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h3><p>凸函数是一种在整个定义域内上凸的函数。对于定义在某个凸集 C 上的函数 f，如果对于任意的 $x_1, x_2 \in C$ 和任意的 $ \alpha \in [0,1]$，都有：</p><p>$ f(\alpha x_1 + (1-\alpha)x_2) \leq \alpha f(x_1) + (1-\alpha)f(x_2) $ </p><p>则称函数 $f$ 是凸函数。凸函数的一个重要性质是：局部最小值也是全局最小值。</p><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>梯度下降是一种优化算法，主要用于寻找函数的局部最小值。基本思想是在每一步迭代中，找到函数在当前点的梯度方向，并沿着梯度方向的负方向移动一定的步长，以此来更新参数值：</p><p>$ \theta_{t+1} &#x3D; \theta_{t} - \alpha \nabla f(\theta_t) $ </p><p>其中，$\theta$ 是需要优化的参数，$\alpha$ 是学习率，$\nabla f(\theta_t)$ 是 $f$ 在 $\theta_t$ 处的梯度。</p><h3 id="牛顿法"><a href="#牛顿法" class="headerlink" title="牛顿法"></a>牛顿法</h3><p>牛顿法是一种在实数域和复数域上近似求解方程的迭代方法。在优化问题中，牛顿法主要用于求解无约束优化问题的极值。牛顿法更新参数的公式为：</p><p>$ \theta_{t+1} &#x3D; \theta_{t} - \left[ Hf(\theta_t) \right]^{-1} \nabla f(\theta_t) $ </p><p>其中，$\theta$ 是需要优化的参数，</p><p>$ Hf(\theta_t) $ </p><p>是$f$在 $\theta_t$ 处的海森矩阵（Hessian Matrix，即梯度的导数矩阵）。</p><p>总结来说，平方差损失、凸函数、梯度下降、牛顿法这些概念和方法在机器学习的模型训练过程中经常被用到，分别在损失函数定义、函数性质探讨、参数优化等方面发挥着重要作用。</p><h3 id="正则化和稀疏性-重点内容"><a href="#正则化和稀疏性-重点内容" class="headerlink" title="正则化和稀疏性 (重点内容)"></a>正则化和稀疏性 (重点内容)</h3><h3 id="正则化（Regularization）"><a href="#正则化（Regularization）" class="headerlink" title="正则化（Regularization）"></a>正则化（Regularization）</h3><h3 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h3><p>正则化是机器学习模型为了防止过拟合而在损失函数中添加的一个额外项，通常是模型参数的函数。加入正则化项后，模型在训练过程中不仅要最小化原来的损失函数，还要最小化正则化项，从而防止模型复杂度过高。</p><h3 id="主要形式"><a href="#主要形式" class="headerlink" title="主要形式"></a>主要形式</h3><ul><li><strong>L1 正则化</strong>：模型参数权重绝对值之和，表达式形式： $   L_1 &#x3D; \lambda \sum_{i&#x3D;1}^{n} |\theta_i|   $</li><li><strong>L2 正则化</strong>：模型参数权重平方和的平方根，表达式形式： $   L_2 &#x3D; \lambda \sum_{i&#x3D;1}^{n} \theta_i^2   $</li></ul><p>其中，$\theta$ 是模型参数，$\lambda$ 是正则化强度参数。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li><strong>防止过拟合</strong>：通过约束模型参数的大小，防止模型过于复杂。</li><li><strong>模型选择</strong>：在一定程度上起到了特征选择的作用（特别是 L1 正则化）。</li></ul><h3 id="稀疏性（Sparsity）"><a href="#稀疏性（Sparsity）" class="headerlink" title="稀疏性（Sparsity）"></a>稀疏性（Sparsity）</h3><h3 id="概念-5"><a href="#概念-5" class="headerlink" title="概念"></a>概念</h3><p>稀疏性在机器学习中通常是指模型的一部分参数或者特征为零，即模型或数据中有大量的零元素。</p><h3 id="与正则化的关系"><a href="#与正则化的关系" class="headerlink" title="与正则化的关系"></a>与正则化的关系</h3><ul><li><strong>L1 正则化与稀疏性</strong>：L1 正则化倾向于产生稀疏解，即模型的一部分参数会被压缩为 0，起到了特征选择的效果。</li><li><strong>L2 正则化与稀疏性</strong>：L2 正则化倾向于让模型的参数接近 0 但不为 0，得到的模型一般不是稀疏的。</li></ul><h3 id="稀疏性的好处"><a href="#稀疏性的好处" class="headerlink" title="稀疏性的好处"></a>稀疏性的好处</h3><ol><li><strong>计算效率</strong>：稀疏矩阵的存储和运算通常比密集矩阵更加高效。</li><li><strong>解释性</strong>：稀疏模型通常更容易解释，因为模型只依赖于一部分特征。</li><li><strong>泛化能力</strong>：通过减少模型依赖的特征数量，可能提高模型的泛化能力。</li></ol><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h3><h3 id="CNN（卷积神经网络）"><a href="#CNN（卷积神经网络）" class="headerlink" title="CNN（卷积神经网络）"></a>CNN（卷积神经网络）</h3><h3 id="基本概念-3"><a href="#基本概念-3" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li><strong>卷积层</strong>：通过卷积操作进行特征提取。卷积核（或滤波器）在输入数据上滑动，通过卷积操作提取空间特征。</li><li><strong>激活层</strong>：通常在卷积层之后，使用非线性激活函数，如 ReLU，增强网络的表达能力。</li><li><strong>池化层</strong>：进行下采样，减小数据的空间尺寸，以减少计算量，并增强特征的鲁棒性。</li></ul><p>假设我们有一个 4x4 的特征图如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span> <span class="hljs-number">3</span>  <span class="hljs-number">2</span>  <span class="hljs-number">4</span><br><span class="hljs-symbol">5 </span> <span class="hljs-number">6</span>  <span class="hljs-number">7</span>  <span class="hljs-number">8</span><br><span class="hljs-symbol">9 </span><span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span><br><span class="hljs-symbol">13 </span><span class="hljs-number">14</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span><br></code></pre></td></tr></table></figure><p>我们使用一个 2x2 的池化窗口和步长为 2 的最大池化操作。在这种情况下，我们将 4x4 的特征图分为四个 2x2 的区域，并从每个区域中选取最大值。步长为 2 意味着池化窗口每次移动两个单位。</p><ul><li>第一个 2x2 区域（左上角）的最大值是 6</li><li>第二个 2x2 区域（右上角）的最大值是 8</li><li>第三个 2x2 区域（左下角）的最大值是 14</li><li>第四个 2x2 区域（右下角）的最大值是 16</li></ul><p>因此，经过最大池化操作后，我们得到一个新的 2x2 的特征图：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span> <span class="hljs-number">8</span><br><span class="hljs-symbol">14 </span><span class="hljs-number">16</span><br></code></pre></td></tr></table></figure><p>通过这个操作，我们保留了每个区域的最大值，同时将特征图的尺寸减小了。</p><ul><li><strong>全连接层</strong>：将学到的空间特征用于最终的分类或回归任务。</li></ul><h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><ul><li>适合处理图像数据，能够有效提取图像的局部特征。</li><li>权值共享：减少模型参数，缓解过拟合。</li><li>空间不变性：通过权值共享和池化层，模型能够对输入数据的微小变化保持不变。</li></ul><h3 id="RNN（循环神经网络）"><a href="#RNN（循环神经网络）" class="headerlink" title="RNN（循环神经网络）"></a>RNN（循环神经网络）</h3><h3 id="基本概念-4"><a href="#基本概念-4" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li><strong>循环结构</strong>：RNN 通过循环结构实现序列数据的时间依赖捕捉。</li><li><strong>隐藏状态</strong>：在每个时间步，RNN 通过当前输入和前一时间步的隐藏状态来更新当前的隐藏状态。</li><li><strong>时间展开</strong>：虽然 RNN 的结构是循环的，但在实际计算和分析中，通常将其在时间上展开以方便理解和计算。</li></ul><h3 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h3><ul><li>适合处理序列数据，如文本、时间序列数据等。</li><li>能够理论上捕捉时间序列中的长期依赖关系。</li><li>容易受到梯度消失或梯度爆炸问题的困扰。</li></ul><h3 id="变体"><a href="#变体" class="headerlink" title="变体"></a>变体</h3><ul><li><strong>LSTM（长短时记忆网络）</strong>：通过引入<strong>门机制</strong>和单元状态来缓解梯度消失问题，能够更好地捕捉序列中的长期依赖关系。</li><li><strong>GRU（门控循环单元）</strong>：类似 LSTM 但结构更简单，计算参数更少。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><strong>CNN</strong> 主要用于处理具有空间结构的数据（如图像）。</li><li><strong>RNN</strong> 主要用于处理具有时间依赖关系的序列数据（如文本）。</li></ul><p>这两种网络结构在深度学习领域有着广泛的应用，并且在图像识别、自然语言处理等任务上取得了显著的成功。</p><h3 id="Attention-Mechanism"><a href="#Attention-Mechanism" class="headerlink" title="Attention Mechanism"></a>Attention Mechanism</h3><p><strong>Attention Mechanism</strong> 的核心思想在于赋予模型对输入数据不同部分关注（或称注意）的能力。在自然语言处理中，尤其在序列到序列的模型中，Attention 机制帮助模型在不同阶段关注输入序列的不同部分，从而更好地解码出目标序列。</p><h3 id="Self-Attention"><a href="#Self-Attention" class="headerlink" title="Self-Attention"></a>Self-Attention</h3><p><strong>Self-Attention</strong> 是 Attention 机制的一种变体，它允许模型在同一序列内部的不同位置之间进行关注。不同于传统的 Attention 机制将关注点放在一个不同的序列上（如在翻译任务中，对源序列进行关注），Self-Attention 则是在同一序列的不同位置上计算注意力权重。</p><h3 id="计算步骤"><a href="#计算步骤" class="headerlink" title="计算步骤"></a>计算步骤</h3><ol><li><strong>计算查询（Query）、键（Key）和值（Value）</strong>：对于输入序列中的每个位置，我们都会得到一个 Query、一个 Key 和一个 Value，它们通常是通过不同的参数化可学习的线性变换得到的。</li></ol><p>$ Q &#x3D; XW_Q, K &#x3D; XW_K, V &#x3D; XW_V $ </p><p>其中，$X$ 是输入序列，$W_Q, W_K, W_V$ 是对应的权重矩阵。</p><ol><li><strong>计算注意力权重</strong>：用 Query 和 Key 的点积计算注意力分数，再通过 softmax 函数获取权重。</li></ol><p>$ AttentionScores &#x3D; softmax\left(\frac{QK^T}{\sqrt{d_k}}\right) $ </p><p>这里，$d_k$ 是 Key 的维度，除以 $\sqrt{d_k}$ 是为了缓解梯度消失或爆炸的问题。</p><ol><li><strong>计算加权和</strong>：利用得到的注意力权重和 Value 的线性组合得到输出。</li></ol><p>$ Z &#x3D; AttentionScores \times V $ </p><h3 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h3><ul><li><strong>自适应关注</strong>：Self-Attention 允许模型自适应地关注输入序列中不同位置的信息，有助于捕捉序列内部的依赖关系。</li><li><strong>并行计算</strong>：不同于 RNN 需要顺序计算序列的每一个位置，Self-Attention 可以并行计算序列所有位置的输出，从而在计算上更加高效。</li><li><strong>多头注意力</strong>：在实际应用中，我们通常使用多头注意力（Multi-Head Attention）来捕捉序列中的多种依赖关系。不同的注意力头可以学习到序列中不同层次的信息。</li></ul><h3 id="应用：Transformer-模型"><a href="#应用：Transformer-模型" class="headerlink" title="应用：Transformer 模型"></a>应用：Transformer 模型</h3><p>Self-Attention 机制在 <strong>Transformer</strong> 模型中得到了广泛应用。Transformer 模型基于 Self-Attention 来处理序列数据，摒弃了传统的 RNN 结构，充分利用 Self-Attention 的并行性和强大的表达能力，成为了现代自然语言处理模型（例如 BERT、GPT 等）的核心组成部分。</p><h2 id="简历相关"><a href="#简历相关" class="headerlink" title="简历相关"></a>简历相关</h2><h3 id="论文简介"><a href="#论文简介" class="headerlink" title="论文简介"></a>论文简介</h3><p>论文 1：主要基于课题组内部的相关族算法进行了改进，引入了正域覆盖度的概念，提高算法抗噪声性能，且不牺牲算法效率。</p><p>论文 2：首次提出了专为单调有序数据设计的数据粒化策略，并依此策略设计了高效的单调特征选择和分类算法，相比传统优势粗糙集的特征选择算法提升了数百倍效率。</p><p>论文 3：首次将模糊数学引入单调有序数据中，增强了论文 2 中算法处理连续值属性的能力。还将并行计算和样本抽样引入了算法中，进一步提升计算效率。</p><h3 id="AI-框架简介"><a href="#AI-框架简介" class="headerlink" title="AI 框架简介"></a>AI 框架简介</h3><p>技术手段：nodejs、Juia、HTML、mongodb</p><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><p>主要用于前端脚本的编写，实现页面逻辑。优势在于语法简单，容易实现，可跨平台等。</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>主要用于前端页面的编写，实现界面呈现和用户交互等，配合 nodejs 使用。</p><h3 id="Julia"><a href="#Julia" class="headerlink" title="Julia"></a>Julia</h3><p>出于对高性能计算的考虑，选择 Julia 作为后端框架，使用 HTTP、JSON、MLBase 等库辅助编写。</p><h3 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h3><p>非关系型数据库，在未来有数据存储需求后考虑引入。</p><h3 id="PCA-算法"><a href="#PCA-算法" class="headerlink" title="PCA 算法"></a>PCA 算法</h3><p>主成分分析（Principal Component Analysis, PCA）是一种广泛应用的线性降维技术，旨在从数据中找出最重要的特征并降低数据的维度，以减小计算成本和提高模型性能。以下是 PCA 算法的主要步骤和特点：</p><ol><li><strong>中心化数据</strong>:</li></ol><ul><li>首先，计算每个特征的均值，并将数据中心化，即从每个特征值中减去该特征的均值。</li><li>数据规模 $n\times m$</li></ul><ol><li><strong>计算协方差矩阵</strong>:</li></ol><ul><li>计算数据的协方差矩阵。协方差矩阵能够捕捉数据特征之间的相关性。</li><li>$m\times m$</li></ul><ol><li><strong>求协方差矩阵的特征值和特征向量</strong>:</li></ol><ul><li>计算协方差矩阵的特征值和特征向量。特征向量表示数据的主成分方向，而特征值表示这些方向上的方差大小。</li><li>特征向量 $m\times 1$, 特征值$1$，特征值和特征向量可能有多个，但都一一对应。</li></ul><ol><li><strong>排序和选择主成分</strong>:</li></ol><ul><li>根据特征值的大小对特征值和特征向量进行排序，并选择前$k$个最大的特征值对应的特征向量，其中$k$是你想要降低到的维度。</li><li>每个特征向量 $m\times 1$，原始数据 $n\times m$，因此每个特征向量可以得到一个 $[n\times m] \times [m \times 1]$ 的 $n \times 1$向量。</li></ul><ol><li><strong>投影数据</strong>:</li></ol><ul><li>将原始数据投影到选定的主成分上，得到降维后的数据。</li><li>$k$个特征值得到了$k$个$n\times 1$向量，组合为$n\times k$的矩阵，降维完成。</li></ul><p><strong>特点</strong>:</p><ol><li><strong>无监督</strong>:</li></ol><ul><li>PCA 是一种无监督的降维技术，不需要任何标签信息，只依赖于数据的结构。</li></ul><ol><li><strong>线性降维</strong>:</li></ol><ul><li>PCA 只能捕捉数据的线性结构，如果数据具有非线性结构，PCA 可能不是最好的选择。</li></ul><ol><li><strong>方差最大化</strong>:</li></ol><ul><li>PCA 试图找到能够最大化数据方差的主成分，这意味着它倾向于保留数据中的主要结构和模式。</li></ul><ol><li><strong>降噪</strong>:</li></ol><ul><li>通过保留数据中的主要成分并忽略较小的成分，PCA 也可以用于降噪。</li></ul><ol><li><strong>可视化</strong>:</li></ol><ul><li>PCA 可以用于将高维数据降低到 2 或 3 维，以便于可视化。</li></ul><p><strong>缺点</strong>：</p><p>使得原本可解释的数据失去了可解释性。</p>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022 年，用 Wayland 开启 linux</title>
    <link href="/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/"/>
    <url>/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="2022-年，用-Wayland-开启-linux"><a href="#2022-年，用-Wayland-开启-linux" class="headerlink" title="2022 年，用 Wayland 开启 linux"></a>2022 年，用 Wayland 开启 linux</h1><p>虽然标题被我改成这样，但我仍然不建议主力机使用 linux, 除非你一定不会使用以下功能之一：</p><ul><li>MSOffice</li><li>onedrive</li><li>重度依赖 QQ 和微信</li><li>一些专用工业软件</li><li>公司独有软件</li><li>iTunes</li><li>visual studio 等</li><li>钉钉（视频分享模糊，其他功能正常）</li></ul><p>以下用户请慎重使用 wayland，说不定会让你直接放弃 linux</p><ul><li>使用 nvidia 单显卡</li></ul><p>我的主力机体验了一下就回 win11 了，现在配的垃圾台式（e3 1230 + rx580）还坚持着 arch，用着还挺爽。</p><hr><p><strong>2022 年 10 月 23 日更新一波</strong>，之前因为一些软件用不了，我又回到了 win11，还小小的升级了一波配置（从 i7+3050 成为了 i7 加 3060）但是有些操作在 win 下面还是不太方便，于是我又把 linux 装上了，这次为了省事装的 manjaro，然后把源换成了 arch 的，但是，问题太多（我太天真了），最后还是换回了 arch</p><p><img src="/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/(20221025">022_年用 Wayland 开启 linux_EberyThingSay&#x2F;v2-fc265bbfea913a5ef41f421b1b9a6af6_b.jpg)  </p><p>我的配置（开了独显直连)</p><p>经过几个月的发展，wayland 又取得了一些进步，我觉得离取代 xorg 只剩最后一步了（<strong>Electron 输入法问题</strong>）。</p><h2 id="nvidia-显卡的配置（intel-和-AMD-显卡无需配置）"><a href="#nvidia-显卡的配置（intel-和-AMD-显卡无需配置）" class="headerlink" title="nvidia 显卡的配置（intel 和 AMD 显卡无需配置）"></a>nvidia 显卡的配置（intel 和 AMD 显卡无需配置）</h2><p>5.18 及之后的内核需要在内核启动参数中添加 ibt&#x3D;off，才可以启动成功</p><h3 id="nvidia-单显卡（包括开启独显直连的情况）"><a href="#nvidia-单显卡（包括开启独显直连的情况）" class="headerlink" title="nvidia 单显卡（包括开启独显直连的情况）"></a>nvidia 单显卡（包括开启独显直连的情况）</h3><p>如果不开独显直连，那安装很简单，开了的话会复杂一点，类似于 nvidia 主机装 wayland.</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GBM_BACKEND</span>=nvidia-drm<br><span class="hljs-attr">__GLX_VENDOR_LIBRARY_NAME</span>=nvidia<br></code></pre></td></tr></table></figure><p>需要把这两行添加到&#x2F;etc&#x2F;profile 中，然后修改内核 &#x2F;etc&#x2F;defualt&#x2F;grub</p><p>也就是在这一行后面添加 nvidia-drm.modeset&#x3D;1，也可以启动的时候添加，但每次都需要操作，麻烦，改完之后如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="hljs-string">&quot;quiet udev.log_priority=3 nvidia-drm.modeset=1&quot;</span><br></code></pre></td></tr></table></figure><p>然后使用 update-grub（没有的话 AUR 安装）命令更新 grub，重启就可以使用 wayland-session 了，如果没有这个命令，或者直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><h2 id="也可以直接修改-boot-grub-grub-cfg-文件，不过不太安全，慎用。"><a href="#也可以直接修改-boot-grub-grub-cfg-文件，不过不太安全，慎用。" class="headerlink" title="也可以直接修改 &#x2F;boot&#x2F;grub&#x2F;grub.cfg 文件，不过不太安全，慎用。"></a>也可以直接修改 &#x2F;boot&#x2F;grub&#x2F;grub.cfg 文件，不过不太安全，慎用。</h2><h3 id="I-N-双显卡（笔记本推荐方案）"><a href="#I-N-双显卡（笔记本推荐方案）" class="headerlink" title="I+N 双显卡（笔记本推荐方案）"></a>I+N 双显卡（笔记本推荐方案）</h3><p>在不做专门配置的情况下，默认使用了 intel 核显，在有需要的时候通过 prime-run 调用独显，因此不用过多的配置。但在 5.18 之后的内核仍然需要禁用 ibt。</p><p>笔记本推荐使用双显卡，主要是因为 nvidia 对 wayland 支持实在太差，当然，如果你使用 x11，那么开独显直连也不错。</p><h2 id="缩放功能的改进"><a href="#缩放功能的改进" class="headerlink" title="缩放功能的改进"></a>缩放功能的改进</h2><p>这个改进是 KDE 做的，因此只适用于 KDE，并且版本必须高于 5.26.</p><p>之前有说到，xwayland 应用在 wayland 缩放下面会很糊，这是由于 xwayland 的缩放策略是直接按比例放大所导致的，而我之前给出的解决方案是<strong>不缩放 wayland，而是使用大字体曲线救国</strong>，xwayland 应用在内部单独缩放。这样做能解决一些问题，但也带来了一些问题，例如不美观等。而 KDE5.26 提供了<strong>x 应用单独缩放</strong>的功能，</p><p><img src="/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/(20221025">022_年用 Wayland 开启 linux_EberyThingSay&#x2F;v2-f01949a210120b8b1587f7ec1d491df2_b.jpg)<br>可以看到 x11 应用可以单独走自身的缩放，经过测试，这个功能非常好。electron 应用对 wayland 支持较差，主要表现在中文输入法无法使用（目前无解），也就是说，在以前，你必须二选一：不缩放，使用 xwayland，拥有输入法功能；缩放，使用 wayland 后端，但输入法无了，只能用剪切板。而现在，你可以使用 xwayland 二者得兼。</p><p>经过测试，<strong>edge、vscode、vscode-insider 完全正常</strong>，无模糊现象。</p><p>而其他平台对 wayland 支持越来越好，奇怪的问题或许会少很多。</p><h3 id="一个小小的猜想"><a href="#一个小小的猜想" class="headerlink" title="一个小小的猜想"></a>一个小小的猜想</h3><p>之前有提到，我在双显卡模式下，无法外接显示器，这是因为 HDMI 和 TypeC 接口都是连接在 nvidia 显卡上导致的，因此，无法独显直连的笔记本修改了 nvidia 后端和 grub 之后，或许可以使用外接屏（纯猜想，我就不折腾了）</p><hr><p>现在的 linux 发行版对于 wayland 的支持都做得还算不错了，但是有些问题还是需要自己解决，所以很想写一篇体验文 + 排坑文。</p><p>我所使用的桌面环境为 plasma 5.25 版本，从 X11 切换到 wayland 十分方便</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">pacman</span> -S plasma-wayland-session plasma-wayland-protocols qt5-wayland qt6-wayland xorg-xwayland<br></code></pre></td></tr></table></figure><p>装上这些个玩意之后，就可以在 sddm 中看见 plasma(wayland) 选项，选择之后就可以进入 wayland 的 kde.</p><p>从 设置 - 关于本系统 中可以看到图形平台为 <strong>wayland</strong>.</p><h2 id="wayland-的优点"><a href="#wayland-的优点" class="headerlink" title="wayland 的优点"></a>wayland 的优点</h2><p>整体动画和特效很惊艳，没有了 X11 那种山寨的感觉，纯 wayland 环境下完全没有屏幕撕裂，实时帧率远高于 X11 环境（gnome 尤其明显，kde 不仔细感受倒是看不出来）。</p><h2 id="wayland-的缺点"><a href="#wayland-的缺点" class="headerlink" title="wayland 的缺点"></a>wayland 的缺点</h2><ul><li>软件兼容性一般，许多应用还没有做适配，实际是跑在 xwayland 上面的。</li><li>wine 兼容性不太好，wine-qq 容易出现拖影和花屏的情况（无解）。</li><li>报废了绝大多数录屏和截图软件，必须寻找<strong>适配 wayland</strong>的（建议 spectacle 和 obs-studio）。</li><li>不能全局缩放，会导致字体模糊发虚，没找到解决方法，但是在一些应用中，可以手动指定启动参数，使应用单独缩放，并且字体不会发虚（KDE5.26 已经解决）。</li><li>不再是 Client-Server 模式，天生远程功能差（可以用 wayvnc）。</li></ul><p>整体来看，kde 在 wayland 下表现非常好，用作日常使用完全没有问题，但是最好在一开始，就先解决一些问题。</p><h2 id="界面字体太小（以解决，安装-KDE5-26-即可）"><a href="#界面字体太小（以解决，安装-KDE5-26-即可）" class="headerlink" title="界面字体太小（以解决，安装 KDE5.26 即可）"></a>界面字体太小（以解决，安装 KDE5.26 即可）</h2><p>X11 下往往通过全局缩放来解决，但 wayland 下我们只能退而求其次，通过修改字体大小来解决。</p><p>根据我测试，字体修改之后，UI 也被跟着一起修改了，不会出现奇怪的视觉效果，体验还不错（比起发虚）。</p><p>设置 - 外观 - 字体</p><p>将字号调大为之前的 n 倍即可</p><p>然后在 edge、chrome、vscode 等 electron 软件中单独设置界面缩放。</p><h2 id="Alacritty-无法显示输入法"><a href="#Alacritty-无法显示输入法" class="headerlink" title="Alacritty 无法显示输入法"></a>Alacritty 无法显示输入法</h2><p>我使用 Alacritty 终端，在 wayland 下只能输入英文，所以我们用 X 启动它，在 &#x2F;usr&#x2F;share&#x2F;applications&#x2F;Alacritty.desktop 中修改带 Exec 的行为</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span>TryExec=env WINIT_UNIX_BACKEND=x11 alacritty<br><span class="hljs-symbol">4 </span>Exec=env WINIT_UNIX_BACKEND=x11 alacritty<br></code></pre></td></tr></table></figure><p>即可解决输入问题，其他终端类似。</p><p>也可以更换支持 xwayland 和 wayland 的终端，例如 electerm 和 konsole，但这个软件性能太差，不推荐使用。</p><p>7 月 22 日：我用回了 kde 自带的 konsole，慢点就慢点吧，还算好用。。。。</p><h2 id="wechat-uos-字体太小"><a href="#wechat-uos-字体太小" class="headerlink" title="wechat-uos 字体太小"></a>wechat-uos 字体太小</h2><p>electron 应用大多数默认跑在 xwayland，<strong>无法通过全局缩放方式解决（除非你能忍受字体发虚）在 KDE 中，已经不存在这个问题，x 应用能够单独设置缩放，绝对是个划时代功能。</strong></p><p>修改 &#x2F;usr&#x2F;share&#x2F;applications&#x2F;wechat-uos.desktop 中的 Exec 行</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span>Exec=wechat-uos --force-device-scale-factor=<span class="hljs-number">1.5</span> %U<br></code></pre></td></tr></table></figure><p>可以缩放为之前的 1.5 倍</p><p>部分软件可以实现缩放（<strong>迅雷</strong>也可以），部分不行（例如 steam），感觉基于 electron 开发的大多数都可行。</p><p>我们也可以指定参数跑在 wayland 上（后文）</p><hr><p>6 月 20 日更新</p><h2 id="steam-游戏问题"><a href="#steam-游戏问题" class="headerlink" title="steam 游戏问题"></a>steam 游戏问题</h2><p>steam 上的一些游戏是支持 wayland 的，但也有个别不支持，比如 dota2</p><p>steam 允许为每个游戏单独指定运行环境</p><p>右键 dota2-属性 - 启动选项</p><p>填入</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">SDL_VIDEODRIVER</span>=x11 prime-<span class="hljs-built_in">run</span> %COMMAND% -perfectworld<br></code></pre></td></tr></table></figure><p>SDL_VIDEODRIVER&#x3D;x11：以 x11 运行游戏</p><p>prime-run：使用独显运行（仅限 nvidia 双显卡，<strong>独显直连无需操作</strong>）</p><p>%COMMAND% （启动命令）</p><p>-perfectworld（进入国服）</p><p>进入游戏之后没有自动全屏，需要根据你的快捷键设置（我是 F11）手动全屏</p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>steam 本身也是不支持 wayland 的，他本身就跑在 xwayland 上</p><p>启动 steam 后输入命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">xlsclients -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p>可以看到输出有：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;user&gt;</span>  <span class="hljs-attribute">electron</span><br><span class="hljs-section">&lt;user&gt;</span>  <span class="hljs-attribute">microsoft</span>-edge<br><span class="hljs-section">&lt;user&gt;</span>  <span class="hljs-attribute">steam</span><br></code></pre></td></tr></table></figure><p>steam、edge 和 icalingua++（就是那个 electron）都是跑在 xwayland 上的，wechat-uos 也是跑在 xwayland 上。</p><h3 id="steam-的缩放功能"><a href="#steam-的缩放功能" class="headerlink" title="steam 的缩放功能"></a>steam 的缩放功能</h3><p>steam 无法使用系统的缩放比例，但它本身是可以缩放的，在 steam.desktop 文件的 Exec 行添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GDK_SCALE</span>=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>就可以进行 2 倍缩放，目前只支持两倍，所以 1080p 的用户就忍忍吧，2k 可以 2 倍没有问题</p><h2 id="将-electron-应用跑在-wayland-上"><a href="#将-electron-应用跑在-wayland-上" class="headerlink" title="将 electron 应用跑在 wayland 上"></a>将 electron 应用跑在 wayland 上</h2><p>很简单，加参数就行，仍然以 wechat-uos 为例</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo vim <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/applications/</span>wechat-uos.desktop<br></code></pre></td></tr></table></figure><h3 id="启动选项修改为"><a href="#启动选项修改为" class="headerlink" title="启动选项修改为"></a>启动选项修改为</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">Exec</span>=wechat-uos <span class="hljs-attribute">--enable-features</span>=UseOzonePlatform  <span class="hljs-attribute">--ozone-platform</span>=wayland %U<br></code></pre></td></tr></table></figure><p><strong>注意，wayland 参数与前文缩放参数只能选一个，否则无法启动！！</strong></p><p><strong>electron12 及以后的程序几乎都可以这么设置</strong></p><p><strong>发现一件有趣的事：wechat-uos 可以通过 ctrl+”+”进行放大，不必指定参数，直接冲 wayland 吧。</strong></p><p><strong>又发现一件可悲的事，wayland 下的 electron 输入法直接无了，只能依靠剪切板，如何抉择，见仁见智了。</strong></p><p>听说等 wayland 支持 gtk4 之后，输入法问题将会解决。</p><hr><p>7 月 23 日 更新一波</p><h2 id="多屏显示问题（已解决）"><a href="#多屏显示问题（已解决）" class="headerlink" title="多屏显示问题（已解决）"></a>多屏显示问题（已解决）</h2><p>在我的设备上 wayland-session 无法检测到第二块屏幕，无论是 kde 还是 gnome。<strong>切换到 x11 后均正常</strong>，但是我查了很多资料，都没能解决这个问题。。。所以欢迎已经解决这个问题的朋友教教我（求）。</p><p><strong>2022.10 月更新</strong></p><p>这是由于笔记本 HDMI 接口和 T-c 接口直连了 nvidia 显卡导致的解决方案在最上面已经给出，但目前只是猜想（不想拿主力机做实验了）</p><h2 id="腾讯会议问题"><a href="#腾讯会议问题" class="headerlink" title="腾讯会议问题"></a>腾讯会议问题</h2><p>众所周知，腾讯会议不支持 wayland，可以用，但不能使用屏幕分享，解决方案：使用 obs 的虚拟摄像头连接屏幕，然后腾讯会议连摄像头即可</p><h3 id="安装-obs-studio"><a href="#安装-obs-studio" class="headerlink" title="安装 obs-studio"></a>安装 obs-studio</h3><p>据说在 gnome 上有一个专门的录屏软件，叫做 <strong>kooha，</strong>不过我用的是 kde，这款软件在 kde 上是无法使用的，所以我们最好通过 OBS Studio 进行录屏。</p><p>但是要确保你安装使用了 pipewire.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S obs-studio</span><br></code></pre></td></tr></table></figure><p>除此之外，还需要安装两个软件包</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">pacman -S xdg-desktop-<span class="hljs-built_in">portal</span>-wlr libpipewire02<br></code></pre></td></tr></table></figure><p>如果不安装这两个软件包，在 obs 中是不会显示 <strong>屏幕采集 (pipewire) 选项的。</strong></p><p>安装好之后打开 obs </p><p><img src="/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/(20221025">022_年用 Wayland 开启 linux_EberyThingSay&#x2F;v2-e32ea9af148b5d86a93ea0081d691ef2_b.jpg)<br>然后就可以进行 屏幕录制，视频播放器我选择了 mpv，非常好用。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S mpv</span><br></code></pre></td></tr></table></figure><h3 id="安装-v4l2loopback-虚拟摄像机功能"><a href="#安装-v4l2loopback-虚拟摄像机功能" class="headerlink" title="安装 v4l2loopback 虚拟摄像机功能"></a>安装 v4l2loopback 虚拟摄像机功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S v4l2loopback<br></code></pre></td></tr></table></figure><p>新版 obs 已经原生支持虚拟摄像机，所以无需过多配置</p><p>重点是下面两个命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo modprobe --<span class="hljs-built_in">remove</span> v4l2loopback<br>sudo modprobe v4l2loopback <span class="hljs-attribute">devices</span>=2<br></code></pre></td></tr></table></figure><p>第一行是移除虚拟相机</p><p>第二行是添加虚拟相机</p><p>可以 alias 一下</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vhdl"><span class="hljs-keyword">alias</span> vcam=<span class="hljs-symbol">&#x27;sudo</span> modprobe <span class="hljs-comment">--remove v4l2loopback &amp;&amp; sudo modprobe v4l2loopback devices=2&#x27;</span><br></code></pre></td></tr></table></figure><p>这样每次 vcam 一下就可以开启虚拟摄像机功能了</p><p><img src="/2022/10/25/2022_%E5%B9%B4%E7%94%A8Wayland%E5%BC%80%E5%90%AFlinux_EberyThingSay/v2-6205a336f5e9cce5d11afe9d9fb8f5b9_b.jpg"><br>如果点了虚拟摄像机没反应，vcam 一下就行了，这个摄像机将会出现在腾讯会议中，实现屏幕共享。</p><p><strong>其他直播软件，包括钉钉在内，只要可以连接摄像头，理论上都是可行的</strong></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>同元 syslab 2022b 版本体验</title>
    <link href="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/"/>
    <url>/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="同元-syslab-2022b-版本体验"><a href="#同元-syslab-2022b-版本体验" class="headerlink" title="同元 syslab 2022b 版本体验"></a>同元 syslab 2022b 版本体验</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>2 个月前初次体验了 syslab，感觉很多地方不完善，于是向官方提了一些建议，大概是如下内容</p><ul><li>没有 linux 版本</li><li>数据文件强制要求装在 D 盘，实际上蛮多人已经不分区了，不太友好</li><li>开箱即用体验不咋地</li></ul><p>这次更新幅度挺大，所以又有了体验一下的兴趣。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-c9f40cdb33a7ec8fac7130d9a553c0eb_b.jpg"><br>经过测试，安装的时候已经不需要存在 D 盘，而是直接装在了 C 盘（笑哭），单分区党可以使用了。Linux 版根据官方说法是需要向客服咨询，我认为可能是功能不完善或者出于商业的考虑，暂时不体验 Linux 版。我的系统上已经有了一套 julia 环境，为了防止冲突，我使用 win10 虚拟机进行体验。</p><h2 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h2><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-b072ad1a03e114150f6d974b0b0a8152_b.jpg"><br>启动界面如图所示，跟之前没有什么区别，但是加载速度比之前版本快了很多倍，之前版本我在实机都需要 10 分钟初始化，新版 2 分钟不到就完成了，第二次启动只需要不到 1 分钟就可以加载好所有的库和 LSP。由于基于 vscode 修改，可以安装 vscode 插件，所以上面的主题也可以自行搜刮，先搞个 one dark pro。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-70cc15e8301beaa4fb1908ce3dcf568e_b.jpg">  </p><p>自带的一些主题</p><p>自带了一些主题，也可以自行下载别的主题</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-738cfb77578719f72c16e0167faf5d3a_b.jpg">  </p><p>one dark pro</p><p>前版本的预加载需要手动修改 perloaded.jl 文件，现在直接勾选即可，点击高级配置也可以跳转到 perloaded.jl 修改界面。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-0c4653f8ffe5a5d50bff1ad2c9494a26_b.jpg"><br>可以切换镜像站和配置启动参数，再也不需要 julia -t 5 XXX.jl 了。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-b4a270743d71f54b384c836159c3fd72_b.jpg"><br>自动补全功能正常，无需任何配置，开箱即用，但我感觉有点延迟，没有我用 vscode ssh 到 arch 虚拟机流畅，可能是虚拟机或者 windows 的原因。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-e20c05863de247057b0dd90e4c63b2c6_b.jpg"><br>julia 版本为 1.7.3，比最新的落后一个版本，不知道能不能升级。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-25085023629be561fbd199b859bc9c8f_b.jpg"><br>先整个 hello 看看，没有问题。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-e28a9ca624c98c48e0d71449352b0552_b.jpg"><br><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-0ff2b93becc87f8abed944b56cb214ae_b.jpg">  </p><p>3D 图也不在话下</p><p>绘图功能还挺方便的，还可以对图进行各种操作，有点 matlab 那味了。用原生 julia 的话需要添加 Plots 库才有这些功能，并且可视化功能较差。</p><p>julia 的调试功能我一直不太会用，这里就不说明了。下面是一些其他功能的展示</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-f1ff87d83e136e5776e9c8534e328de4_b.jpg">  </p><p>electron 都有的开发者工具</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-253e2f715bf50bbeb9dc97d75d09eb0c_b.jpg">  </p><p>设置界面</p><p>设置界面，你会用 vscode 就会用这个，上手门槛 0</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-3ba4fd08717415feb28341f3dee50cfe_b.jpg">  </p><p>不换源升级包</p><p>升级包，卡了有一阵子，原因是无法联网，需要在设置里面换源，换源之后一切正常，不过我发现原本有的同元自己的库没有了，只剩了中科大源，清华源等。我觉得这样挺好，能够更好的接轨 julia 自身的生态。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-3ef6659dfccbb82153f4c75fef708e72_b.jpg"><br>可以看到自带的软件包比较丰富，并行计算，绘图，python 调用都已经支持，无需额外做过多配置，这一点挺好的，但是，有几个包编译失败了，也许，不升级才是更好的选择。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-78d7c749595f0b4e00ff388f186407e2_b.jpg">  </p><p>包括 CUDA 在内的都编译失败</p><p>emmm，升级之后好像出现了一些问题，建议开箱即用不要升级。</p><p>下面来跑一个 CART 试试，先添加 DecisionTree、DataFrames 库，还有 MLBase 库等。</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-492eff84d0bbd100575093545ee4a457_b.jpg"><br>然后使用编写好的 CART 代码进行测试，一顿操作猛如虎，终于跑起来了</p><p><img src="/2022/09/21/%E5%90%8C%E5%85%83_syslab_2022b_%E7%89%88%E6%9C%AC%E4%BD%93%E9%AA%8C_EberyThingSay/v2-a1477ceeaf7856afd55b166f21336627_b.jpg"><br>可以看到混淆矩阵和分类精度等信息。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>相比之前的版本进步很大（只针对 syslab），可以算是市面上最好的 Julia IDE 了，弥补了这方面的空缺。我尝试过多种 Julia 编辑方式，其中体验好的只有 vscode 和 neovim，编写非常舒适。但是他们的配置都挺复杂的，而且，vscode 具有通用性，插件装多了还挺慢的，neovim 对于图形的显示不太友好，必须用文件浏览器查看，所以，在此之前我都选择用 vscode remote 我的虚拟机使用，体验尚可（linux 编译速度比 windows 快很多）。而 syslab 我认为完全可以当做一款 IDE 使用了，无需配置开箱即用，希望能促进新人入坑。</li><li>相比 matlab，功能方面还有很大的欠缺（toolbox 等），加载速度不及 matlab，但颜值和编辑器完爆 matlab。vscode 的主题可以提供多样的 UI 样式，vim 插件等可以提供多样的输入方式，matlab 则较为固定，只提供了一套 emacs 的快捷键。（但是，我觉得 syslab 右边的工作区真挺丑的，希望改改。。。）</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>加载速度真的慢，不过这有 julia 语言本身的原因，估计是没办法了。</li><li>较为重量级，安装的时候就把所有模块都安装了，但实际上很多是挺冗余的，如果能像 matlab 那样选模块装就好了。考虑到还要和其他产品联动，估计也有点困难（安装配置好后 6.5G，暂时也不需要考虑这个问题）。</li><li>没有提供 julia 版本升级的方式，估计他的本意是安装即用，并不考虑升级包什么的。</li></ol><p>体验得比较草率。。。总之，对于懒人而言，我觉得 syslab 是目前最好的 IDE，直接上手就行，对于爱折腾的或者硬盘空间吃紧的，这个软件并不是一个好的选择。目前这款软件替代 matlab 的希望为 0，但是单纯的把它看成一个 julia 的 IDE 的话，是非常优秀的，你值得拥有。</p>]]></content>
    
    
    <categories>
      
      <category>应用程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KDE+i3 配置全功能平铺式桌面（Arch）</title>
    <link href="/2022/06/19/KDEi3_%E9%85%8D%E7%BD%AE%E5%85%A8%E5%8A%9F%E8%83%BD%E5%B9%B3%E9%93%BA%E5%BC%8F%E6%A1%8C%E9%9D%A2Arch_EberyThingSay/"/>
    <url>/2022/06/19/KDEi3_%E9%85%8D%E7%BD%AE%E5%85%A8%E5%8A%9F%E8%83%BD%E5%B9%B3%E9%93%BA%E5%BC%8F%E6%A1%8C%E9%9D%A2Arch_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="KDE-i3-配置全功能平铺式桌面（Arch）"><a href="#KDE-i3-配置全功能平铺式桌面（Arch）" class="headerlink" title="KDE+i3 配置全功能平铺式桌面（Arch）"></a>KDE+i3 配置全功能平铺式桌面（Arch）</h1><p><strong>此方法仅适用于 plasma 5.24 及之前的版本，今天是 2022 年 6 月 17 日，最新的 Plasma 5.25.0 已经无法使用这个方法，请不要再继续！！如何查看 plasma 版本：</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S neofetch</span><br><span class="hljs-attribute">neofetch</span><br></code></pre></td></tr></table></figure><p><strong>输出内容中即可看见 plasma 版本</strong></p><p>5.18 内核滚挂之后，我的 i3wm 也跟着挂了，不过所幸我在 gitee 上有配置备份。但之后的一段时间用了 KDE+KWin 的平铺脚本，最开始的体验还不错，但随着时间的推移，一些 bug 开始暴露出来，不禁让我怀念起 i3wm，但是 i3 也有一些显示上的 bug……没办法，我觉得在 KDE 上使用 i3 也许是个不错的选择。</p><h2 id="判断你是否需要-KDE-i3"><a href="#判断你是否需要-KDE-i3" class="headerlink" title="判断你是否需要 KDE+i3"></a>判断你是否需要 KDE+i3</h2><h3 id="适合-i3-的人"><a href="#适合-i3-的人" class="headerlink" title="适合 i3 的人"></a>适合 i3 的人</h3><ol><li>喜欢平铺式窗口管理器</li><li>喜欢极简桌面</li><li>对效率要求大于美化</li><li>不追求边边角角的功能配置</li><li>年轻，有精力折腾</li></ol><h3 id="适合-KDE-的人"><a href="#适合-KDE-的人" class="headerlink" title="适合 KDE 的人"></a>适合 KDE 的人</h3><ol><li>不爱折腾</li><li>不喜欢写配置文件</li><li>偶尔用用，保留了 win 的使用习惯</li><li>不爱用命令行</li></ol><p>以上均为我个人瞎 bb，请勿以此人身攻击</p><h3 id="KDE-i3-你将获得"><a href="#KDE-i3-你将获得" class="headerlink" title="KDE+i3 你将获得"></a>KDE+i3 你将获得</h3><ol><li>KDE 的全功能（KWin 除外：废话）</li><li>完善的平铺式窗口管理器</li><li>一些 bug（难免的）</li><li>比纯 i3 大得多的内存占用</li></ol><p>如果你觉得可以接受，就可以进行下一步了。这里需要说明一下，今天时间为 2022 年 6 月 7 日，高考的第一天，plasma 版本为 5.24.5，如果看到这里你不知道以下名词的概念和区别，请不要再继续</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">plasma</span> kde WM DE 滚挂 平铺 konsole vim<br></code></pre></td></tr></table></figure><h2 id="安装-i3-所需的软件"><a href="#安装-i3-所需的软件" class="headerlink" title="安装 i3 所需的软件"></a>安装 i3 所需的软件</h2><p>KDE 已经自带了不少的系统软件，但是 KDE 的特效合成器与壁纸管理与 i3 是独立的，所以我们需要针对 i3 进行单独配置。主要为以下三个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S i3 picom feh alacritty<br></code></pre></td></tr></table></figure><p>其中 picom 为特效管理器，管理 i3 的窗口动画，透明等等，feh 则负责管理 i3 的壁纸</p><p>其他的软件，例如 wifi 管理，蓝牙，剪切板，应用启动器都在 KDE 中带有了，无需额外配置。还有一个重要的东西是终端，我不喜欢 KDE 的终端 konsole，所以以 alacritty 为例.（konsole 在 i3 中不一定能用，推荐更换 i3 常用的终端，例如 alacritty、kitty、st 等）</p><p>还有，选 i3 仓库的时候选 i3-wm , 别选 i3-gaps 否则屏幕周边会有大边框很难看。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">:: 在组 <span class="hljs-type">i3</span> 中有 <span class="hljs-number">5</span> 成员：<br>:: 软件仓库 community<br>   <span class="hljs-number">1</span>) <span class="hljs-type">i3</span>-gaps  <span class="hljs-number">2</span>) <span class="hljs-type">i3</span>-wm  <span class="hljs-number">3</span>) i<span class="hljs-number">3</span>blocks  <span class="hljs-number">4</span>) i<span class="hljs-number">3</span>lock  <span class="hljs-number">5</span>) i<span class="hljs-number">3</span>status<br><br>输入某个选择 ( 默认<span class="hljs-operator">=</span>全部选定 ):<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="将-KDE-的-WM-从-KWin-更换为-i3"><a href="#将-KDE-的-WM-从-KWin-更换为-i3" class="headerlink" title="将 KDE 的 WM 从 KWin 更换为 i3"></a>将 KDE 的 WM 从 KWin 更换为 i3</h2><h3 id="添加自启动脚本（适用某个用户）"><a href="#添加自启动脚本（适用某个用户）" class="headerlink" title="添加自启动脚本（适用某个用户）"></a>添加自启动脚本（适用某个用户）</h3><p>在某个位置创建一个 sh 脚本（以&#x2F;usr&#x2F;local&#x2F;）为例</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">vim /usr/<span class="hljs-keyword">local</span>/kde-i3.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>加入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh </span><br><span class="hljs-built_in">export</span> KDEWM=/usr/bin/i3<br></code></pre></td></tr></table></figure><p>添加执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> +x /usr/local/kde-i3.sh<br></code></pre></td></tr></table></figure><p>意为将 KDEWM 这个变量设为 &#x2F;usr&#x2F;bin&#x2F;i3</p><p>然后将这个脚本添加到 KDE 的开机启动中：</p><p>设置—开机与关机—自动启动</p><p>然后添加一个软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/.config/plasma-workspace/env<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> -s /usr/local/kde-i3.sh ./<br></code></pre></td></tr></table></figure><p>当然也可以一步到位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> -s /usr/local/kde-i3.sh <span class="hljs-variable">$HOME</span>/.config/plasma-workspace/env/<br></code></pre></td></tr></table></figure><p>根据官方的说法，这个软链接是为了让这个脚本在会话启动之前执行，但设置里面不提供这个选项了，所以只能通过软链接的方式进行。</p><h3 id="添加-XSession-会话（用于所有用户）"><a href="#添加-XSession-会话（用于所有用户）" class="headerlink" title="添加 XSession 会话（用于所有用户）"></a>添加 XSession 会话（用于所有用户）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/share/xsessions<br></code></pre></td></tr></table></figure><p>在不同的发行版中，XSession 文件位置有所不同，需要根据实际情况确定，Arch 下面是这个路径。复制一份 plasma.desktop 文件为 plasma-i3.desktop</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-keyword">cp</span> plasma.desktop plasma-i3.desktop<br></code></pre></td></tr></table></figure><p>打开 plasma-i3.desktop</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">vim plasma-<span class="hljs-type">i3</span>.desktop<br></code></pre></td></tr></table></figure><p>最顶上有如下内容</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"> 1 [Desktop Entry]<br> 2 <span class="hljs-attribute">Type</span>=XSession<br> 3 <span class="hljs-attribute">Exec</span>=/usr/bin/startplasma-x11<br> 4 <span class="hljs-attribute">TryExec</span>=/usr/bin/startplasma-x11<br> 5 <span class="hljs-attribute">DesktopNames</span>=KDE<br> 6 <span class="hljs-attribute">Name</span>=Plasma (X11)<br> 7 Name[ar]=ﺏﻻﺰﻣﺍ (ﺎﻜﺳ  )<br> 8 Name[ast]=Plasma (X11)<br> 9 Name[az]=Plasma (X11)<br>10 Name[ca]=Plasma (X11)<br></code></pre></td></tr></table></figure><p>需要注意的是 Exec 和 TryExec 所在的两行，将它们修改为</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span>Exec=/<span class="hljs-keyword">usr</span>/share/xsessions/start.sh<br><span class="hljs-symbol">4 </span>TryExec=/<span class="hljs-keyword">usr</span>/share/xsessions/start.sh<br></code></pre></td></tr></table></figure><p>然后编辑 start.sh，加入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">export</span> KDEWM=/usr/bin/i3<br>/usr/bin/startplasma-x11<br></code></pre></td></tr></table></figure><p>添加执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> +x start.sh<br></code></pre></td></tr></table></figure><h2 id="配置-i3"><a href="#配置-i3" class="headerlink" title="配置 i3"></a>配置 i3</h2><p>这一步比较复杂，我很想把我的配置贴出来，但是……</p><p>gitee 审核不通过！！！（因为我壁纸也放在配置文件夹，全是二次元美少女）</p><p>所以这里的话我手动贴一些配置……</p><p>i3 的配置文件位于 ~&#x2F;.config&#x2F;i3&#x2F;config</p><h3 id="配置-config"><a href="#配置-config" class="headerlink" title="配置 config"></a>配置 config</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs clean"># i3 配置文件(sukipai)<br><br>####################<br>#   i3wm  基础设置<br>####################<br><br># 基础按键设置<br>set $mod Mod4<br>set $left j<br>set $right l<br>set $up i<br>set $down k<br><br># 标题字体<br>font pango: Source Code Pro <span class="hljs-number">12</span><br><br># Title format<br>title_align center<br><br># Hide borders<br>hide_edge_borders none<br>default_border none<br>default_floating_border none<br><br># default windows layout<br>workspace_layout tabbed<br><br># i3 gaps<br># gaps inner i3<br><br># reload the configuration file<br>bindsym $mod+Shift+c reload<br><br># restart i3 inplace (can be used to upgrade i3)<br>bindsym $mod+Shift+r restart<br><br># exit i3 (logs you out <span class="hljs-keyword">of</span> your X session)<br># bindsym Mod4+Shift+e exec <span class="hljs-string">&quot;i3-nagbar -t warning -f &#x27;pango: Microsoft YaHei 12&#x27; -m &#x27;Do you really want to exit i3?&#x27; -b &#x27;Yes, exit i3&#x27; &#x27;i3-msg exit&#x27;&quot;</span><br><br># Theme colors<br># gruvbox theme<br># <span class="hljs-keyword">class</span>                   border  backgr. text    indicator<br>client.focused          #<span class="hljs-number">3</span>c3836 #<span class="hljs-number">32302</span>f #fabd2f #fabd2f<br>client.focused_inactive #<span class="hljs-number">3</span>c3836 #<span class="hljs-number">504945</span> #d5c4a1 #<span class="hljs-number">504945</span><br>client.unfocused        #<span class="hljs-number">3</span>c3836 #<span class="hljs-number">504945</span> #d5c4a1 #<span class="hljs-number">504945</span><br>client.urgent           #<span class="hljs-number">7</span>c6f64 #fabd2f #<span class="hljs-number">3</span>c3836 #fabd2f<br></code></pre></td></tr></table></figure><p>这一部分主要为外观，说几点：</p><ol><li>Mod4 指 win 键</li><li>exit i3 的配置建议注释掉，有 kde 在，我们不需要这个功能，反而给自己找麻烦。</li></ol><h3 id="配置按键"><a href="#配置按键" class="headerlink" title="配置按键"></a>配置按键</h3><p>仍然是在 config</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#############</span><br><span class="hljs-comment">#   快捷键</span><br><span class="hljs-comment">#############</span><br><br><span class="hljs-comment">## application binding</span><br><span class="hljs-comment"># start a terminal</span><br>bindsym <span class="hljs-variable">$mod</span>+Return exec --no-startup-id alacritty<br><br><span class="hljs-comment">## i3wm binding</span><br><span class="hljs-comment"># Use Mouse+$mod to drag floating windows</span><br>floating_modifier <span class="hljs-variable">$mod</span><br><br><span class="hljs-comment"># kill focused window</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+q kill<br><br><span class="hljs-comment"># change focus</span><br>bindsym <span class="hljs-variable">$mod</span>+<span class="hljs-variable">$left</span> focus left<br>bindsym <span class="hljs-variable">$mod</span>+<span class="hljs-variable">$down</span> focus down<br>bindsym <span class="hljs-variable">$mod</span>+<span class="hljs-variable">$up</span> focus up<br>bindsym <span class="hljs-variable">$mod</span>+<span class="hljs-variable">$right</span> focus right<br><br><span class="hljs-comment"># alternatively, you can use the cursor keys:</span><br>bindsym <span class="hljs-variable">$mod</span>+Left focus left<br>bindsym <span class="hljs-variable">$mod</span>+Down focus down<br>bindsym <span class="hljs-variable">$mod</span>+Up focus up<br>bindsym <span class="hljs-variable">$mod</span>+Right focus right<br><br><span class="hljs-comment"># move focused window</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+<span class="hljs-variable">$left</span> move left<br>bindsym <span class="hljs-variable">$mod</span>+Shift+<span class="hljs-variable">$dowm</span> move down<br>bindsym <span class="hljs-variable">$mod</span>+Shift+<span class="hljs-variable">$up</span> move up<br>bindsym <span class="hljs-variable">$mod</span>+Shift+<span class="hljs-variable">$right</span> move right<br><br><span class="hljs-comment"># alternatively, you can use the cursor keys: bindsym $mod+Shift+Left move left</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+Down move down<br>bindsym <span class="hljs-variable">$mod</span>+Shift+Up move up<br>bindsym <span class="hljs-variable">$mod</span>+Shift+Right move right<br><br><span class="hljs-comment"># split in horizontal orientation</span><br>bindsym <span class="hljs-variable">$mod</span>+h split h<br><br><span class="hljs-comment"># split in vertical orientation</span><br>bindsym <span class="hljs-variable">$mod</span>+v split v<br><br><span class="hljs-comment"># enter fullscreen mode for the focused container</span><br>bindsym <span class="hljs-variable">$mod</span>+f fullscreen toggle<br><br><span class="hljs-comment"># change container layout (stacked, tabbed, toggle split)</span><br>bindsym <span class="hljs-variable">$mod</span>+s layout stacking<br>bindsym <span class="hljs-variable">$mod</span>+w layout tabbed<br>bindsym <span class="hljs-variable">$mod</span>+e layout toggle split<br><br><span class="hljs-comment"># toggle tiling / floating</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+space floating toggle<br><br><span class="hljs-comment"># change focus between tiling / floating windows</span><br>bindsym <span class="hljs-variable">$mod</span>+space focus mode_toggle<br><br><span class="hljs-comment"># focus the parent container</span><br>bindsym <span class="hljs-variable">$mod</span>+a focus parent<br><br><span class="hljs-comment">####################</span><br><span class="hljs-comment"># Workspace behavier</span><br><span class="hljs-comment">####################</span><br><br><span class="hljs-comment"># set workspace</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws1</span> <span class="hljs-string">&quot;1&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws2</span> <span class="hljs-string">&quot;2&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws3</span> <span class="hljs-string">&quot;3&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws4</span> <span class="hljs-string">&quot;4&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws5</span> <span class="hljs-string">&quot;5&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws6</span> <span class="hljs-string">&quot;6&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws7</span> <span class="hljs-string">&quot;7&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws8</span> <span class="hljs-string">&quot;8&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws9</span> <span class="hljs-string">&quot;9&quot;</span><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$ws10</span> <span class="hljs-string">&quot;10&quot;</span><br><br><span class="hljs-comment"># switch to workspace</span><br>bindsym <span class="hljs-variable">$mod</span>+1 workspace number <span class="hljs-variable">$ws1</span><br>bindsym <span class="hljs-variable">$mod</span>+2 workspace number <span class="hljs-variable">$ws2</span><br>bindsym <span class="hljs-variable">$mod</span>+3 workspace number <span class="hljs-variable">$ws3</span><br>bindsym <span class="hljs-variable">$mod</span>+4 workspace number <span class="hljs-variable">$ws4</span><br>bindsym <span class="hljs-variable">$mod</span>+5 workspace number <span class="hljs-variable">$ws5</span><br>bindsym <span class="hljs-variable">$mod</span>+6 workspace number <span class="hljs-variable">$ws6</span><br>bindsym <span class="hljs-variable">$mod</span>+7 workspace number <span class="hljs-variable">$ws7</span><br>bindsym <span class="hljs-variable">$mod</span>+8 workspace number <span class="hljs-variable">$ws8</span><br>bindsym <span class="hljs-variable">$mod</span>+9 workspace number <span class="hljs-variable">$ws9</span><br>bindsym <span class="hljs-variable">$mod</span>+0 workspace number <span class="hljs-variable">$ws10</span><br><br><span class="hljs-comment"># move focused container to workspace</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+1 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws1</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+2 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws2</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+3 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws3</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+4 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws4</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+5 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws5</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+6 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws6</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+7 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws7</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+8 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws8</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+9 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws9</span><br>bindsym <span class="hljs-variable">$mod</span>+Shift+0 move container <span class="hljs-keyword">to</span> workspace number <span class="hljs-variable">$ws10</span><br></code></pre></td></tr></table></figure><p>这一部分就不多说了，基本都是这样配置的。</p><h3 id="配置-picom-和-feh"><a href="#配置-picom-和-feh" class="headerlink" title="配置 picom 和 feh"></a>配置 picom 和 feh</h3><h3 id="picom"><a href="#picom" class="headerlink" title="picom"></a>picom</h3><p>还是 config……</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">exec <span class="hljs-attr">--no-startup-id</span> picom <span class="hljs-attr">--config</span> ~/.config/i3/picom/picom<span class="hljs-selector-class">.conf</span> -<span class="hljs-selector-tag">b</span> <span class="hljs-attr">--experimental-backends</span><br></code></pre></td></tr></table></figure><p>意思是自启动 picom 并读取位于 ~&#x2F;.config&#x2F;i3&#x2F;picom&#x2F;picom.conf 的配置文件。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># Backend</span><br><span class="hljs-meta"># glx mode have more performance, prevent tearing</span><br>backend = <span class="hljs-string">&quot;glx&quot;</span><span class="hljs-comment">;</span><br><br><span class="hljs-meta"># GLX backend</span><br>glx-no-stencil = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>glx-copy-from-front = <span class="hljs-literal">false</span><span class="hljs-comment">;</span><br>glx-no-rebind-pixmap = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>glx-swap-method = <span class="hljs-number">-1</span><span class="hljs-comment">;</span><br><span class="hljs-meta"># prevent flickering after wake up</span><br>glx-use-copysubbuffer-mesa = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br><br><span class="hljs-meta"># Shadows</span><br>shadow = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>shadow-radius = <span class="hljs-number">50</span><span class="hljs-comment">;</span><br>shadow-offset-x = <span class="hljs-number">-40</span><span class="hljs-comment">;</span><br>shadow-offset-y = <span class="hljs-number">-40</span><span class="hljs-comment">;</span><br>shadow-opacity = <span class="hljs-number">0.8</span><span class="hljs-comment">;</span><br><br>shadow-exclude = [<br>    <span class="hljs-string">&quot;class_g = &#x27;Dunst&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;class_g ?= &#x27;polybar&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;class_g ?= &#x27;fcitx&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;class_g ?= &#x27;fcitx5&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;class_g ?= &#x27;rofi&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;class_g = &#x27;i3-frame&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;window_type = &#x27;dnd&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;window_type = &#x27;tooltip&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;_GTK_FRAME_EXTENTS@:c&quot;</span>,<br>    <span class="hljs-string">&quot;_NET_WM_STATE@:32a *= &#x27;_NET_WM_STATE_HIDDEN&#x27;&quot;</span>,<br>]<span class="hljs-comment">;</span><br><br>shadow-ignore-shaped = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br><br><span class="hljs-meta"># Opacity</span><br>active-opacity = <span class="hljs-number">0.93</span><span class="hljs-comment">;</span><br>inactive-opacity = <span class="hljs-number">0.85</span><span class="hljs-comment">;</span><br>frame-opacity = <span class="hljs-number">1</span><span class="hljs-comment">;</span><br>inactive-opacity-override = <span class="hljs-literal">false</span><span class="hljs-comment">;</span><br><br><span class="hljs-meta"># to show inactive windows</span><br>inactive-<span class="hljs-keyword">dim</span> = <span class="hljs-number">0.2</span><span class="hljs-comment">;</span><br><br>opacity-rule = [<br>    <span class="hljs-string">&quot;75:class_g = &#x27;Dunst&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;75:class_g = &#x27;i3-frame&#x27;&quot;</span>, <span class="hljs-meta"># fix: i3 titlebar</span><br>    <span class="hljs-string">&quot;99:class_g = &#x27;Vmware&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;99:class_g = &#x27;Shotwell&#x27;&quot;</span>,<br>    <span class="hljs-string">&quot;99:class_g = &#x27;Google-chrome&#x27;&quot;</span>,<br>]<span class="hljs-comment">;</span><br><br><span class="hljs-meta"># Fading</span><br>fading = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>fade-delta = <span class="hljs-number">10</span><span class="hljs-comment">;</span><br><br>fade-<span class="hljs-keyword">in</span>-<span class="hljs-keyword">step</span> = <span class="hljs-number">0.09</span><span class="hljs-comment">;</span><br>fade-out-<span class="hljs-keyword">step</span> = <span class="hljs-number">0.09</span><span class="hljs-comment">;</span><br><br>fade-exclude = [<br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g = &#x27;Dunst&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;Vlc&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;Fcitx&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;fcitx&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;Fcitx5&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;fcitx5&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;class_g ?= &#x27;pycharm&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;window_type = &#x27;dnd&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;window_type = &#x27;tooltip&#x27;&quot;</span>,</span><br><span class="hljs-meta">#     <span class="hljs-string">&quot;_GTK_FRAME_EXTENTS@:c&quot;</span>,</span><br>]<span class="hljs-comment">;</span><br><br><br><span class="hljs-meta"># Other</span><br>mark-wmwin-focused = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>mark-ovredir-focused = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>use-ewmh-active-win = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br><br>detect-rounded-corners = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>detect-client-opacity = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br><br>vsync = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>dbe = <span class="hljs-literal">false</span><span class="hljs-comment">;</span><br><br>unredir-<span class="hljs-keyword">if</span>-possible = <span class="hljs-literal">false</span><span class="hljs-comment">;</span><br><br>focus-exclude = [ ]<span class="hljs-comment">;</span><br><br>detect-transient = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br>detect-client-leader = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br><br><span class="hljs-meta"># Window type settings</span><br>wintypes:<br>&#123;<br>  <span class="hljs-built_in">tooltip</span> = &#123; fade = <span class="hljs-literal">true</span><span class="hljs-comment">; shadow = true; opacity = 0.9; focus = true;&#125;;</span><br>  dock = &#123; shadow = <span class="hljs-literal">false</span><span class="hljs-comment">; &#125;</span><br>  dnd = &#123; shadow = <span class="hljs-literal">false</span><span class="hljs-comment">; &#125;</span><br>  popup_menu = &#123; opacity = <span class="hljs-number">0.9</span><span class="hljs-comment">; &#125;</span><br>  dropdown_menu = &#123; opacity = <span class="hljs-number">0.9</span><span class="hljs-comment">; &#125;</span><br>&#125;<span class="hljs-comment">;</span><br><br><span class="hljs-meta"># XSync</span><br>xrender-sync-fence = <span class="hljs-literal">true</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>复制粘贴就行，你也可以自行更改，这个配置还算易读。</p><h3 id="feh"><a href="#feh" class="headerlink" title="feh"></a>feh</h3><p>feh 一次只能设置一张图片，还是 config</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">feh <span class="hljs-attr">--bg-fill</span> <span class="hljs-attr">--no-fehbg</span> <span class="hljs-attr">--randomize</span> ~/<span class="hljs-selector-class">.config</span>/i3/wallpapers/<span class="hljs-attribute">src</span>/<span class="hljs-number">1</span><span class="hljs-selector-class">.png</span><br></code></pre></td></tr></table></figure><p>~&#x2F;.config&#x2F;i3&#x2F;wallpapers&#x2F;src&#x2F;1.png 为你的壁纸路径</p><p>但我显然不满足于一张图片，我想要切换，所以可以写个脚本，这里我选择 lua 实现，你也可以选择写 bash 脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim ~<span class="hljs-regexp">/.config/i</span>3<span class="hljs-regexp">/wallpapers/</span>autochange.lua<br></code></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sleep</span><span class="hljs-params">(n)</span></span><br>   <span class="hljs-built_in">os</span>.<span class="hljs-built_in">execute</span>(<span class="hljs-string">&quot;sleep &quot;</span> .. n)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>)<br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">os</span>.<span class="hljs-built_in">execute</span>(<span class="hljs-string">&quot;feh --bg-fill --no-fehbg --randomize ~/.config/i3/wallpapers/src/*&quot;</span>)<br>  sleep(<span class="hljs-number">900</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>前提是你得装了 lua </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S lua</span><br></code></pre></td></tr></table></figure><p>然后每过 15 分钟就会在 ~&#x2F;.config&#x2F;i3&#x2F;wallpapers&#x2F;src&#x2F;* 下随机选取一张壁纸。</p><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><p>恭喜你，不出意外的话，已经可以使用了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重新打包 docker 镜像，减少镜像体积</title>
    <link href="/2022/06/04/%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85docker%E9%95%9C%E5%83%8F%E5%87%8F%E5%B0%91%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF_EberyThingSay/"/>
    <url>/2022/06/04/%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85docker%E9%95%9C%E5%83%8F%E5%87%8F%E5%B0%91%E9%95%9C%E5%83%8F%E4%BD%93%E7%A7%AF_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="重新打包-docker-镜像，减少镜像体积"><a href="#重新打包-docker-镜像，减少镜像体积" class="headerlink" title="重新打包 docker 镜像，减少镜像体积"></a>重新打包 docker 镜像，减少镜像体积</h1><p>docker 最常用的打包命令是 commit，但是这样的打包方式是增量式的（类似 git），也就是说，这个镜像只会越来越大，不会减小，打包次数多了之后，镜像会变得非常大，所以我们可以采用 tar 命令打包基础镜像的方式进行解决。</p><p>这样打包后的镜像会将文字编码更改为 POSIX，导致中文无法显示，因此需要将编码更改为 en_US.utf8，因此需要在容器中提前进行如下两步（archlinux 为例）。</p><ol><li>在&#x2F;etc&#x2F;profile 中加入以下语句</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">LANG</span>=en_US.utf8<br></code></pre></td></tr></table></figure><ol><li>在 ~&#x2F;.zshrc 中加入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>就可以永久解决该问题</p><ol><li>进行清理（根据实际情况）</li></ol><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">clean</span><br></code></pre></td></tr></table></figure><ol><li>进入根目录（”cd &#x2F;“）打包</li></ol><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">tar --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/proc --exclude=./</span>sys --<span class="hljs-keyword">exclude</span>=.<span class="hljs-regexp">/home/</span>jupyter-<span class="hljs-keyword">file</span> -cvf <span class="hljs-regexp">/home/</span>jupyter-<span class="hljs-keyword">file</span>/base_img.tar .<br></code></pre></td></tr></table></figure><p>–exclude 为排除某个目录</p><p>意思是将除了&#x2F;proc &#x2F;sys &#x2F;home 之外的目录打包为 base_img.tar，放置在某个目录下 5. 导入包</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">cat</span> base_img.tar | docker <span class="hljs-keyword">import</span> - imagename:latest<br></code></pre></td></tr></table></figure><p>tar 的大小就是镜像的大小，注意里面的排除目录和镜像存放目录的合理选择。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022.5 archlinux 详细安装过程</title>
    <link href="/2022/05/13/archlinux%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B_EberyThingSay/"/>
    <url>/2022/05/13/archlinux%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="2022-5-archlinux-详细安装过程"><a href="#2022-5-archlinux-详细安装过程" class="headerlink" title="2022.5 archlinux 详细安装过程"></a>2022.5 archlinux 详细安装过程</h1><p>2022 年 12 月 8 日小更新一波</p><ul><li>增加了 i3 的一些配置说明</li></ul><hr><p>2022 年 11 月 17 日小更新一波</p><ul><li>增加了一些双系统相关说明</li><li>增加了终端字体推荐</li><li>修改了一些错误内容</li></ul><hr><p>其实 arch 的安装不是一件很难的事情，但是随着时间的推移会出现一些坑，所以我记录一下安装过程。</p><p>参考文章：</p><p><a href="https://zhuanlan.zhihu.com/p/478075538">https://zhuanlan.zhihu.com/p/478075538</a>本文分为三个部分进行讲解，第一部分是安装整个系统（不带图形界面），第二部分是安装桌面或者窗口管理器，第三部分是进行一些简单配置，第四部分是一些简单总结。</p><p>本文讲解虽然较为详细，但是不建议纯小白尝试（跟着来也没啥问题。。。）建议你能够做对下列名词解释再继续：</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos">vim neovim nvim NVME SATA BIOS UEFI kernel Nvidia console bash :<span class="hljs-keyword">q</span> <span class="hljs-symbol">^X</span> <span class="hljs-symbol">^C</span><br></code></pre></td></tr></table></figure><p>如果上述单词中 80% 以上不知道什么意思，建议左转 ubuntu 或者 deepin，对 linux 稍作了解之后再尝试 Arch。</p><h2 id="1-系统安装"><a href="#1-系统安装" class="headerlink" title="1. 系统安装"></a>1. 系统安装</h2><h3 id="1-1-进入-live-系统"><a href="#1-1-进入-live-系统" class="headerlink" title="1.1 进入 live 系统"></a>1.1 进入 live 系统</h3><p>其实这个 live 系统和 ubuntu 或者 manjaro 的 live 系统是完全一致的，只是有没有图形界面，以及系统安装程序的区别，在 arch 的 live 系统中，需要我们手动输入命令进行操作。</p><ol><li>制作启动盘的过程就不详细说了，建议使用 ventoy 进行制作（我们以 ventoy 为例），避免重复格式化 U 盘的问题，当然，使用 rufus 也是可以的，<strong>不推荐</strong>使用<strong>UltraISO，容易出问题。</strong></li><li>确认系统的引导方式是 UEFI,，如果不是，请进入 BIOS 开启。</li><li>插入 U 盘，重启电脑，根据电脑型号按相应的键盘按键进入启动引导选择，选择刚刚 USB 启动器。进入 ventoy 界面，选取你下载的 ArchLinux 安装镜像（*.iso），进入 Arch 安装界面。</li><li>选择画面中的第一项（Arch Linuxinstallmedium(x86_64,UEFI)），按回车键，待加载完成后，进入 ArchLinux 的 Live 环境。如果出现“root@archiso~#”，说明启动成功，已经进入终端。</li><li>验证是否为 UEFI 启动（如果你确定已经是 UEFI 的话可以略过）<br>输入“ls &#x2F;sys&#x2F;firmware&#x2F;efi&#x2F;efivars”<br>输入这一行代码后，如果反馈目录不存在，则说明电脑没有以 UEFI 启动，需要重新执行步骤 3，不要继续，因为没有 UEFI 启动在后面写入引导的时候几乎绝对报错。如果有输出，说明电脑是以 UEFI 启动的。</li></ol><h3 id="1-2-联网"><a href="#1-2-联网" class="headerlink" title="1.2 联网"></a>1.2 联网</h3><h3 id="arch-的系统镜像只有-800m，并没有包含所有的系统文件，所以网络是必要的。"><a href="#arch-的系统镜像只有-800m，并没有包含所有的系统文件，所以网络是必要的。" class="headerlink" title="arch 的系统镜像只有 800m，并没有包含所有的系统文件，所以网络是必要的。"></a>arch 的系统镜像只有 800m，并没有包含所有的系统文件，所以网络是必要的。</h3><h3 id="1-2-1-电脑有-wifi-的情况，跟参考文章中操作一致"><a href="#1-2-1-电脑有-wifi-的情况，跟参考文章中操作一致" class="headerlink" title="1.2.1 电脑有 wifi 的情况，跟参考文章中操作一致"></a>1.2.1 电脑有 wifi 的情况，跟参考文章中操作一致</h3><ol><li><ol><li>输入“iwctl”进入 iwd 模式，也就是终端最前方有“[iwd]#”字样。</li></ol></li><li>在 iwd 模式下输入“device list”，按回车（按回车是基本操作，所以下文省略），查询电脑的网卡。记住你的网卡号，一般是 wlan0 或者 wlan1（本文以多数情况 wlan0 为例）</li><li>在 iwd 模式下输入“station wlan0 scan”，然后再输入“station wlan0 get-networks”，显示周围的 wifi 的 ssid 扫描结果。（如果你知道自己要连接的 wifi 名称，可以跳过这一步）</li><li>在 iwd 模式下输入“station wlan0 connect <ssid>”，如果是加密的 wifi，系统会提示输入 wifi 密码，如无意外，就连上网了。</ssid></li><li>验证联网。按 ctrl+c 退出 iwd 模式，回到[root@archiso~]模式，输入“ping baidu.com”，如果有返回数据，说明已经连上网了。</li></ol><h3 id="1-2-2-电脑没有-wifi-的情况"><a href="#1-2-2-电脑没有-wifi-的情况" class="headerlink" title="1.2.2 电脑没有 wifi 的情况"></a>1.2.2 电脑没有 wifi 的情况</h3><h3 id="这种情况下，usb-无线网卡一般是用不了的，因为-arch-的-iso-中不带有驱动，而网店里的免驱网卡驱动需要在-AUR-里才能找到，因此，只能考虑-USB-共享手机网络，或者连接网线（这个就不多说了）。"><a href="#这种情况下，usb-无线网卡一般是用不了的，因为-arch-的-iso-中不带有驱动，而网店里的免驱网卡驱动需要在-AUR-里才能找到，因此，只能考虑-USB-共享手机网络，或者连接网线（这个就不多说了）。" class="headerlink" title="这种情况下，usb 无线网卡一般是用不了的，因为 arch 的 iso 中不带有驱动，而网店里的免驱网卡驱动需要在 AUR 里才能找到，因此，只能考虑 USB 共享手机网络，或者连接网线（这个就不多说了）。"></a>这种情况下，usb 无线网卡一般是用不了的，因为 arch 的 iso 中不带有驱动，而网店里的免驱网卡驱动需要在 AUR 里才能找到，因此，只能考虑 USB 共享手机网络，或者连接网线（这个就不多说了）。</h3><ol><li>（以 iphone 为例）选一根质量好的线，连上电脑的 usb 口即可。</li><li>此时手机上会让你信任该设备，信任即可。</li><li>打开热点，输入“ping baidu.com”，如果有返回数据，说明已经连上网了。</li></ol><p>iphone 设备，以及 usb 接口的驱动在 live 系统中是存在的，所以非常简单，安卓设备也应该是类似的方法。但是有一点大坑需要注意，<strong>usb 接口驱动需要在后续所安装的系统中单独安装，否则，重启之后是连不上手机的。</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S usbmuxd</span><br></code></pre></td></tr></table></figure><h3 id="1-2-3-更新时间"><a href="#1-2-3-更新时间" class="headerlink" title="1.2.3 更新时间"></a>1.2.3 更新时间</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-ntp</span> <span class="hljs-string">true</span><br></code></pre></td></tr></table></figure><h3 id="1-3-磁盘分区"><a href="#1-3-磁盘分区" class="headerlink" title="1.3 磁盘分区"></a>1.3 磁盘分区</h3><p>以前的 arch 需要使用 fdisk 命令进行分区，劝退了不少人，现在提供了更人性化的 cfdisk 工具进行分区，操作简单很多了，操作过程与参考文章类似。</p><ol><li>输入“fdisk -l”，查看硬盘列表，SATA 硬盘或者机械硬盘是&#x2F;dev&#x2F;sdX，nvme 固态硬盘则显示&#x2F;dev&#x2F;nvme0nX。</li><li>认准你想作为系统盘的硬盘（sda 的例子参考文章已经给出，所以我以&#x2F;dev&#x2F;nvme0n1 为例），输入“cfdisk &#x2F;dev&#x2F;nvme0n1”进入伪图形界面进行分区。</li><li>参考划分大小如下</li></ol><table><thead><tr><th>分区</th><th>挂载点</th><th>我划分的大小，仅供参考</th></tr></thead><tbody><tr><td>&#x2F;dev&#x2F;nvme0n1p1</td><td>&#x2F;</td><td>100g（软件包都会装在根目录，建议大一点）</td></tr><tr><td>&#x2F;dev&#x2F;nvme0n1p2</td><td>&#x2F;boot&#x2F;efi</td><td>500m（不要低于 500m）</td></tr><tr><td>&#x2F;dev&#x2F;nvme0n1p3</td><td>&#x2F;home</td><td>60g（看个人情况，我的文件多为代码，占用空间较小）</td></tr><tr><td>&#x2F;dev&#x2F;nvme0n1p4</td><td>swap</td><td>24g（交换空间，即虚拟内存）</td></tr></tbody></table><p><strong>注意：</strong></p><ol><li><strong>boot 分区一定是挂载到&#x2F;boot&#x2F;efi，后续挂载的时候会再提到。</strong></li><li><strong>home 分区在重装系统的时候是可以复用的，建议单独分区以避免丢失文件。</strong></li><li><strong>swap 视自己内存情况而定，一般 &lt;&#x3D; 电脑内存（我内存 16g，分了 24g swap 好像也没啥）</strong></li></ol><h3 id="1-4-分区格式化"><a href="#1-4-分区格式化" class="headerlink" title="1.4 分区格式化"></a>1.4 分区格式化</h3><p>依次输入下面的命令：（需要确认时输入“y”）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs.fat -F32 /dev/nvme0n1p2    (boot分区必须使用fat32格式)<br>mkfs.ext4 /dev/nvme0n1p1    (/ 和 /home 一般使用ext4分区格式)<br>mkswap /dev/nvme0n1p4    (swap分区使用swap格式)<br>swapon /dev/nvme0n1p4    (激活swap分区，不激活不会使用这部分空间)<br>mkfs.ext4 /dev/nvme0n1p3    (/home分区)<br></code></pre></td></tr></table></figure><p>格式化结束之后，使用 lsblk 命令查看分区是否划分以及格式化正确</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>     <span class="hljs-number">259</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span> <span class="hljs-number">476.9</span>G  <span class="hljs-number">0</span> disk<br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">1</span> <span class="hljs-number">259</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>  <span class="hljs-number">59.3</span>G  <span class="hljs-number">0</span> part <br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">2</span> <span class="hljs-number">259</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>    <span class="hljs-number">24</span>G  <span class="hljs-number">0</span> part <br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">3</span> <span class="hljs-number">259</span>:<span class="hljs-number">3</span>    <span class="hljs-number">0</span> <span class="hljs-number">117.9</span>G  <span class="hljs-number">0</span> part <br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">4</span> <span class="hljs-number">259</span>:<span class="hljs-number">4</span>    <span class="hljs-number">0</span>   <span class="hljs-number">477</span>M  <span class="hljs-number">0</span> part <br></code></pre></td></tr></table></figure><p>我这里跟例子分区顺序不太一样，请根据自己实际情况确定。</p><h3 id="1-5-分区挂载"><a href="#1-5-分区挂载" class="headerlink" title="1.5 分区挂载"></a>1.5 分区挂载</h3><p>基本和参考文章中一样，但是他犯了一个严重错误，<strong>boot 分区一定是挂载到&#x2F;boot&#x2F;efi，，而不是&#x2F;efi</strong></p><p>依次输入下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/nvme0n1p1 /mnt    (将 / 分区挂载到 live系统中的 /mnt 目录，此时 /mnt 目录就是我们所安装系统的 / 目录)<br><span class="hljs-built_in">mkdir</span> -p /mnt/boot/efi    (在新系统的 / 目录中新建 efi 文件夹，-p 参数表示递归创建)<br>mount /dev/nvme0n1p2 /mnt/boot/efi    (将 boot 分区挂载到efi文件夹)<br><span class="hljs-built_in">mkdir</span> /mnt/home    (同理，创建home目录)<br>mount /dev/nvme0n1p3 /mnt/home    (将home分区挂载到home目录)<br></code></pre></td></tr></table></figure><p>挂载完成之后会变成这样（根据你的实际分区情况显示）</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>     <span class="hljs-number">259</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span> <span class="hljs-number">476.9</span>G  <span class="hljs-number">0</span> disk<br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">1</span> <span class="hljs-number">259</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>  <span class="hljs-number">59.3</span>G  <span class="hljs-number">0</span> part /home<br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">2</span> <span class="hljs-number">259</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>    <span class="hljs-number">24</span>G  <span class="hljs-number">0</span> part [SWAP]<br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">3</span> <span class="hljs-number">259</span>:<span class="hljs-number">3</span>    <span class="hljs-number">0</span> <span class="hljs-number">117.9</span>G  <span class="hljs-number">0</span> part /<br>├─<span class="hljs-symbol">nvme0</span><span class="hljs-symbol">n1</span>p<span class="hljs-number">4</span> <span class="hljs-number">259</span>:<span class="hljs-number">4</span>    <span class="hljs-number">0</span>   <span class="hljs-number">477</span>M  <span class="hljs-number">0</span> part /boot/efi<br></code></pre></td></tr></table></figure><h3 id="1-6-安装必要的包，并在系统中写入分区表"><a href="#1-6-安装必要的包，并在系统中写入分区表" class="headerlink" title="1.6 安装必要的包，并在系统中写入分区表"></a>1.6 安装必要的包，并在系统中写入分区表</h3><p>跟参考文章类似，但是，如果你使用 usb 分享网络，要多加一个 usbmuxd 包。</p><p>换源：很重要，不然等到天荒地老。方法很多，可以直接修改&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist 文件，也可以直接</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">reflector <span class="hljs-params">--country</span> China <span class="hljs-params">--age</span> 72 <span class="hljs-params">--sort</span> rate <span class="hljs-params">--protocol</span> https <span class="hljs-params">--save</span> <span class="hljs-string">/etc/pacman.d/mirrorlist</span><br></code></pre></td></tr></table></figure><p>解决问题，我一般还是手动换，即替换&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist 中内容为（任选其一，建议第一个）：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">Server = https:<span class="hljs-regexp">//mi</span>rrors.bfsu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.cqu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.dgut.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.neusoft.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.nju.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rror.redrock.team<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.sjtug.sjtu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br>Server = https:<span class="hljs-regexp">//mi</span>rrors.xjtu.edu.cn<span class="hljs-regexp">/archlinux/</span><span class="hljs-variable">$repo</span><span class="hljs-regexp">/os/</span><span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>安装基本系统（包括 linux 内核以及基础软件包），这里相比参考文章多给了几个软件包，因为这些对用户来说还是比较重要的，有几种内核可以安装：</p><ul><li>普通内核 (linux linux-headers)</li><li>lts 稳定版内核 (linux-lts linux-lts-headers)</li><li>zen 内核 (linux-zen,linux-zen-headers)（高性能）</li></ul><p>按自己的需求安装就可以</p><p><strong>这里需要提前说一下，linux-zen 内核不支持 nvidia 显卡，有这个需求的就别装了，如果是原版 linux 内核的话，就要做好随时滚挂的准备，最近的 5.18 内核更新就会导致 nvidia-5.15 版本驱动失效无法开机（需要在启动选项中添加 ibt&#x3D;off），如果你希望稳定使用，就选择 linux-lts 内核和 linux-lts-headers，并安装相应的 nvidia-lts 驱动（后面会有详细说明），不过不用太担心，即便是系统安装完成，你也可以随时切换自己想要的内核版本。</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp">pacstrap /mnt <span class="hljs-keyword">base</span> linux linux-headers linux-firmware <span class="hljs-keyword">base</span>-devel （usbmuxd）<br>或者<br>pacstrap /mnt <span class="hljs-keyword">base</span> linux-lts linux-lts-headers linux-firmware <span class="hljs-keyword">base</span>-devel （usbmuxd）<br></code></pre></td></tr></table></figure><p>写入分区表：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">genfstab -U <span class="hljs-regexp">/mnt &gt;&gt; /m</span>nt<span class="hljs-regexp">/etc/</span>fstab<br></code></pre></td></tr></table></figure><p>开机的时候，系统按照 fstab 文件的分区信息进行挂载，你也可以修改 fstab 以达到自动挂载某个磁盘的功能，例如</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">UUID</span>=<span class="hljs-number">86</span>ABB6FEAA91229C   /home/XXX/Documents                 ntfs-<span class="hljs-number">3</span>g         defaults        <span class="hljs-number">0</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>就可以把 UUID 为 86ABB6FEAA91229C 的 ntfs 分区挂载到 &#x2F;home&#x2F;XXX&#x2F;Documents 下面（PS：双系统用这个方式挂载 win 盘很爽</p><p>然后使用如下命令进入新系统，进入后会显示[root@archiso &#x2F;]# 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arch-chroot /mnt<br></code></pre></td></tr></table></figure><h3 id="1-7-新系统的配置"><a href="#1-7-新系统的配置" class="headerlink" title="1.7 新系统的配置"></a>1.7 新系统的配置</h3><h3 id="1-7-1-安装必要软件包"><a href="#1-7-1-安装必要软件包" class="headerlink" title="1.7.1 安装必要软件包"></a>1.7.1 安装必要软件包</h3><p>参考文章给出的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S vim iwd networkmanager ttf-dejavu <span class="hljs-built_in">sudo</span> bluez<br></code></pre></td></tr></table></figure><p>我解释一下这都是干嘛的。</p><ol><li>vim：文本编辑器，可替代有 neovim，nano，其中 nano 对新手比较友好，推荐经验较少或者刚入坑的同志使用。</li><li>iwd,networkmanager：用 iwd 作为 nm 的 backend 进行使用。（但是我这样使用在 i3 下会出现不少问题，比如网络经常自动断，且短时间无法重连等 (KDE 也会出现，但感觉没有 i3 频繁，我觉得可能是命令行的原因，<strong>安装完成之后卸载</strong>掉 networkmanager 问题解决。另外，如果需要使用网线和 usb 网络共享，networkmanager 必须安装，最好加装一个 dhcpcd）</li><li>ttf-dejavu：开源字体</li><li>sudo：用于非 root 用户暂时获取 root 权限</li><li>bluez：蓝牙模块</li><li>usbmuxd：参考文章没给这个。现在系统中使用的网络来自于 live 系统，不装这个的话，重启是无法通过 usb 连接手机共享网络的，根据个人情况选择，建议安装。</li><li>wqy-zenhei：中文字体，避免进入系统后无法显示中</li><li>dhcpcd：连网线用</li><li>ntfs-3g：挂载 ntfs 磁盘需要</li></ol><p>我最后选择这样安装，所以后续以 vim 为例。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pacman</span> -S neovim iwd ttf-dejavu sudo bluez usbmuxd networkmanager dhcpcd wqy-zenhei ntfs-<span class="hljs-number">3</span>g<br></code></pre></td></tr></table></figure><p>neovim 和 vim 的启动命令是不一样的，neovim 为“nvim”，vim 是“vim”我一般会通过软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /bin/nvim /bin/vim<br><span class="hljs-built_in">ln</span> -s /bin/nvim /bin/vi<br></code></pre></td></tr></table></figure><p>将他们软链接起来看，这样的话，通过“vim”“vi”命令也可以启动 neovim 了。</p><p>nano 的启动命令是“nano”</p><h3 id="1-7-2-一通设置"><a href="#1-7-2-一通设置" class="headerlink" title="1.7.2 一通设置"></a>1.7.2 一通设置</h3><p>这一部分都是差不多的，也没啥坑。</p><ol><li>设置时区和时间</li></ol><p>依次输入下面的命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -sf <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zoneinfo/</span>Asia<span class="hljs-regexp">/Shanghai /</span>etc/localtime    (设置时区为上海)<br>hwclock --systohc<br></code></pre></td></tr></table></figure><ol start="2"><li>设置语言</li></ol><p>输入“vim &#x2F;etc&#x2F;locale.gen”，删除【en_US.UTF-8】和【zh_CN.UTF-8】两项前面的“#”，保存。（如果有其他语言需求也可以自行取消注释，比如台湾地区和港澳地区）</p><p>（vim 的光标移动、删除和保存退出等命令请另行百度），当然，也可以用 nano</p><p>输入“locale-gen”，再输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> LANG=en_US.UTF-8 &gt;&gt; /etc/locale.conf<br></code></pre></td></tr></table></figure><p>，意思是将 “en_US.UTF-8” 追加到 &#x2F;etc&#x2F;locale.conf 文件里面，这里不建议使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> LANG=zh_CN.UTF-8 &gt;&gt; /etc/locale.conf<br></code></pre></td></tr></table></figure><p>这样会使系统语言成为中文，从而导致 tty 显示中文，但是 tty 本身是不支持中文的，所以会乱码。而中文的问题，一般会通过修改 ~&#x2F;.xprofile（DE）或者 ~&#x2F;.xinitrc（WM）进行解决</p><ol start="3"><li>设置 root 用户的密码</li></ol><p>输入“passwd”，再输入密码，密码不会有任何显示，但是是输进去了的。</p><ol start="4"><li>设置主机名（系统名）</li></ol><p>输入“echo {你要设置的主机名，随便一个，不要大括号，不要中文名} &gt;&gt; &#x2F;etc&#x2F;hostname”，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> sukipai &gt;&gt; /etc/hostname<br></code></pre></td></tr></table></figure><p>主机名会显示在 bash 中，例如</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[sukipai@sukipai ~]</span>$<br></code></pre></td></tr></table></figure><p>意为我用 sukipai(前) 用户登陆了名为 sukipai(后) 的主机。</p><ol start="5"><li>设置网络</li></ol><p>输入“vim &#x2F;etc&#x2F;hosts”，把下面的文字打进去，保存（以sukipai为例）。（vim的光标移动、删除和保存退出等命令请另行百度。）</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span> localhost<br>::<span class="hljs-number">1</span> localhost<br><span class="hljs-number">127.0.1.1</span> sukipai.localdomain sukipai<br></code></pre></td></tr></table></figure><h3 id="1-7-3-安装引导并重启系统"><a href="#1-7-3-安装引导并重启系统" class="headerlink" title="1.7.3 安装引导并重启系统"></a>1.7.3 安装引导并重启系统</h3><p>与参考文章中安装引导有一些差异，输入下面的命令：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lisp">pacman -S grub efibootmgr   (安装grub)<br>grub-install /dev/nvme0n1    (超级大坑，注意选择的是整个硬盘，而不是boot分区)<br></code></pre></td></tr></table></figure><p>一定要注意这个地方，是安装在整个磁盘，而不是 boot 分区。</p><p>创建 grub 配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">grub-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub/grub.cfg<br></code></pre></td></tr></table></figure><p>重启系统（请再次确认你是否需要，且已经安装 usbmuxd）：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span>    (退出新系统，回到live系统)<br>umount -R <span class="hljs-regexp">/mnt    (递归卸载 /m</span>nt 中的磁盘)<br>reboot    (重启)<br></code></pre></td></tr></table></figure><p>重启之后登录到 root 账户，密码就是你之前设置的。</p><h3 id="1-8-打开联网服务和蓝牙"><a href="#1-8-打开联网服务和蓝牙" class="headerlink" title="1.8 打开联网服务和蓝牙"></a>1.8 打开联网服务和蓝牙</h3><ol><li>首先激活服务</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl start iwd.service<br>systemctl <span class="hljs-built_in">enable</span> iwd.service<br>systemctl start systemd-resolved.service<br>systemctl <span class="hljs-built_in">enable</span> systemd-resolved.service<br>systemctl <span class="hljs-built_in">enable</span> bluetooth.service<br>systemctl <span class="hljs-built_in">enable</span> NetworkManager<br>systemctl <span class="hljs-built_in">enable</span> dhcpcd<br></code></pre></td></tr></table></figure><ol start="2"><li>配置网络连接和 DNS</li></ol><p>输入“vim &#x2F;etc&#x2F;iwd&#x2F;main.conf”，把下面的文字打进去，保存。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[General]</span><br><span class="hljs-attr">EnableNetworkConfiguration</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">NameResolvingService</span>=systemd<br></code></pre></td></tr></table></figure><ol start="3"><li>安装了 netwokmanager 的配置</li></ol><p>如果安装了 networkmanager，则需要将 backend 服务修改为 iwd，总体上 iwd 比 wpa 好用很多。</p><p>输入“vim &#x2F;etc&#x2F;NetworkManager&#x2F;NetworkManager.conf”，把下面的文字打进去，保存。（vim的光标移动、删除和保存退出等命令请另行百度。）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[device]</span><br><span class="hljs-attr">wifi.backend</span>=iwd<br></code></pre></td></tr></table></figure><p>如果只安装 networkmanager 而不安装 iwd 的话，是不需要这一步的，nm 会使用默认的 wpa。（猜测）</p><p>然后重启，并安装先前的联网方法进行联网，并**更换 mirrorlist 中的软件源 (如果前面更换过了，这里就不用更换了)**，这里不再赘述。</p><h3 id="1-9-安装一些硬件设备"><a href="#1-9-安装一些硬件设备" class="headerlink" title="1.9 安装一些硬件设备"></a>1.9 安装一些硬件设备</h3><ol><li>CPU 编码</li></ol><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">pacman -S <span class="hljs-built_in">int</span>el-ucode    (<span class="hljs-built_in">int</span>el的cpu装这个)<br>pacman -S amd-ucode    (amd的cpu装这个)<br></code></pre></td></tr></table></figure><p>注意是 <strong>CPU</strong> 编码，不是显卡</p><ol start="2"><li>显卡驱动</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">pacman -S xf86-<span class="hljs-selector-tag">video</span>-intel（Intel核心显卡驱动，用Intel核显就装，否则不用装）<br>pacman -S mesa <span class="hljs-built_in">nvidia</span>(-lts) nvidia-settings nvidia-dkms nvidia-utils nvidia-prime（nvidia显卡驱动，用nvidia显卡就装，否则不用装）<br>pacman -S xf86-<span class="hljs-selector-tag">video</span>-amdgpu (AMD显卡驱动，用amd显卡的就装)<br></code></pre></td></tr></table></figure><p>这里举两个例子，我的笔记本，i7-11 代，搭配 intel 核显以及 3050 显卡，所以安装前两个。我的台式机，e3-1230 垃圾 CPU，搭配 HD6950 显卡，所以装第三个。nvidia-dkms 与 nvidia-lts 不兼容，如果装 lts 驱动的话无需安装 dkms。</p><p><strong>注意：nvidia 驱动的安装与前面选择的内核有关，如果你安装的是 linux-lts 内核，那么需要将 nvidia 更换为 nvidia-lts，linux-zen 不支持 nvidia 显卡（务必对号入座），如果你选择安装新内核，则需要修改一下 ibt&#x3D;off，否则无法进入系统</strong></p><ol start="3"><li>声卡驱动</li></ol><p>在我的设备上，只需这样安装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">pacman -S <span class="hljs-title function_">pipewire</span> <span class="hljs-params">(alsa-utils)</span> pipewire-pulse pipewire-jack pipewire-alsa<br></code></pre></td></tr></table></figure><p>就可以了，使用参考文章中的 pulseaudio 也是可以的。alsa-utils 用于终端下的音量调节，如果你使用 KDE，Gnome 等桌面环境，可以不装这个。</p><p>使用 pulseaudio 的话，需要进行一下配置（我没试过），pipewire 则不用：</p><p>输入“vim &#x2F;etc&#x2F;modprobe.d&#x2F;disable_dmic.conf”，把下面的文字打进去，保存。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">options</span> snd_hda_intel dmic_detect=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="1-10-创建一个用户"><a href="#1-10-创建一个用户" class="headerlink" title="1.10 创建一个用户"></a>1.10 创建一个用户</h3><p>仍然以 sukipai 为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">useradd -m -G wheel -s /bin/bash <span class="hljs-title function_">sukipai</span>    <span class="hljs-params">(添加一个名为sukipai的用户进入wheel用户组，并将bash作为启动命令)</span><br>passwd <span class="hljs-title function_">sukipai</span>    <span class="hljs-params">(设置密码，和设置root是类似的)</span><br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">visudo</span><br></code></pre></td></tr></table></figure><p>如果报错的话 (应该不会)，就改为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>sudoers<br></code></pre></td></tr></table></figure><p>找到如下内容，取消掉“# %wheel ALL&#x3D;(ALL:ALL) ALL”前面的“# ”</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">## <span class="hljs-keyword">User</span> privilege specification<br>##<br>root <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>:<span class="hljs-keyword">ALL</span>) <span class="hljs-keyword">ALL</span><br><br>## Uncomment <span class="hljs-keyword">to</span> allow members <span class="hljs-keyword">of</span> <span class="hljs-keyword">group</span> wheel <span class="hljs-keyword">to</span> <span class="hljs-keyword">execute</span> <span class="hljs-keyword">any</span> command<br># %wheel <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>:<span class="hljs-keyword">ALL</span>) <span class="hljs-keyword">ALL</span><br><br>## Same thing <span class="hljs-keyword">without</span> a <span class="hljs-keyword">password</span><br># %wheel <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>:<span class="hljs-keyword">ALL</span>) NOPASSWD: <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure><p>这里说一下，取消“# %wheel ALL&#x3D;(ALL:ALL) NOPASSWD: ALL”前的“# ”也是可以的，区别就在于，取消这一行后，wheel 组的用户使用 sudo 就不用输密码了，<strong>如果你是新手，不建议这么做</strong>，如果你是老鸟，可以考虑取消 NOPASSWD 所在的这一行。（我取消的是 NOPASWD 这行，图方便）</p><p>下面还有个 sudo 组的选项，但是我没有试过加入 sudo 组是什么效果，这里就不多说了。</p><h3 id="1-11-重启系统"><a href="#1-11-重启系统" class="headerlink" title="1.11 重启系统"></a>1.11 重启系统</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><p>此时的系统已经基本可以使用了，但是还没有配置图形界面，如果你不需要图形界面，就只需登陆 sukipai 用户就可以使用了。</p><h2 id="2-图形界面安装"><a href="#2-图形界面安装" class="headerlink" title="2. 图形界面安装"></a>2. 图形界面安装</h2><p><strong>！！！注意：从这里开始，如果登陆的是普通用户，则所有的 pacman 和 systemctl 都需要 sudo，如果嫌麻烦，可以先在 ~&#x2F;.bashrc 中添加“alias pacman&#x3D;’sudo pacman’和 alias systemctl&#x3D;’sudo systemctl’”，我这里就不多写 sudo 了。如果提示需要权限，同样加 sudo 即可。所以这部分安装建议登陆 root 用户。</strong></p><h3 id="首先需要选择-X11-或者是-Wayland，现在来看-Wayland-是比较先进的，但为了方便和兼容性还是用-X11-吧。"><a href="#首先需要选择-X11-或者是-Wayland，现在来看-Wayland-是比较先进的，但为了方便和兼容性还是用-X11-吧。" class="headerlink" title="首先需要选择 X11 或者是 Wayland，现在来看 Wayland 是比较先进的，但为了方便和兼容性还是用 X11 吧。"></a>首先需要选择 X11 或者是 Wayland，现在来看 Wayland 是比较先进的，但为了方便和兼容性还是用 X11 吧。</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S xorg</span><br></code></pre></td></tr></table></figure><p>这个是必须安装的，后面的 DE 和 WM 都是基于 x 服务。</p><h3 id="2-1-KDE"><a href="#2-1-KDE" class="headerlink" title="2.1 KDE"></a>2.1 KDE</h3><p>特点：美观，比较稳定，自定义功能强大，配置方便（最推荐）（括号中为推荐的可替代品）</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S plasma sddm konsole dolphin kate ark okular spectacle yay</span><br></code></pre></td></tr></table></figure><p>plasma：桌面环境</p><p>sddm：登录管理器，KDE 配套的</p><p>konsole：kde 下的终端，功能多但是比较慢，也可以使用其他终端</p><p>（alacritty,kitty）</p><p>kate：文本编辑器，很强大，但是资料比较少，需要自己配置。我感觉比 vscode 好用很多，但是没火起来，很可惜。</p><p>（vim,neovim,gvim,nano,gedit,sublime,vscode,atom）（sublime,vscode 需要在 AUR 源或者 Clansty 源中安装）</p><p>ark：解压与压缩</p><p>okular：PDF 查看器</p><p>（wps,edge,chrome,zotero……）</p><p>spectacle：截图工具，这三件套配合 KDE 很方便</p><p>安装完成之后，需要启用 sddm</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> sddm<br></code></pre></td></tr></table></figure><p>重启即可</p><h3 id="2-2-Gnome"><a href="#2-2-Gnome" class="headerlink" title="2.2 Gnome"></a>2.2 Gnome</h3><p>特点：自定义功能丰富（但是被阻隔了），</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">pacman -S gnome<br>systemctl <span class="hljs-built_in">enable</span> gdm<br></code></pre></td></tr></table></figure><p>重启即可，部分软件仍然可以用上述软件替代</p><h3 id="2-3-i3"><a href="#2-3-i3" class="headerlink" title="2.3 i3"></a>2.3 i3</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm">pacman -S xorg-xinit xorg-server    （窗口管理器一般不会使用登陆管理器(dm)，所以xorg-xinit是必要的）<br>pacman -S <span class="hljs-type">i3</span>    (安装<span class="hljs-type">i3</span>，或者<span class="hljs-type">i3</span>-gaps)<br></code></pre></td></tr></table></figure><p>由于窗口管理器配置比较复杂，所以这里只讲最基本的安装。</p><p><strong>在此之前，先补充一下用户登陆的时候发生了什么事。</strong></p><ol><li>用户输入账户 sukipai 以及密码，正确。</li><li>tty 会解释执行用户目录下的 .bashrc 文件（如果你用的 zsh，则读取.zshrc，以此类推），相当于手动执行 source <del>&#x2F;.bashrc，（</del> 表示用户目录，我这里为&#x2F;home&#x2F;sukipai&#x2F;）</li><li>此时登陆到了 tty1</li><li>你想要进入 i3，则需要执行 startx 命令</li><li>startx 会执行 ~&#x2F;.xinitrc 中的内容</li></ol><p>所以我们的逻辑就很清楚了，如果你想要自动登陆 i3，就需要修改.bashrc 中的逻辑，而 startx 时要做的事情，就需要写在 ~&#x2F;.xinitrc 文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> LANG=zh_CN.UTF-8  <span class="hljs-comment"># 将语言环境设置为中文</span><br>xrdb -merge ~/.Xresources  <span class="hljs-comment"># 读取~/.Xresources 文件中的信息，我用来修改dpi</span><br><span class="hljs-built_in">exec</span> i3  <span class="hljs-comment"># 进入i3wm</span><br></code></pre></td></tr></table></figure><p>为什么要把“export LANG&#x3D;zh_CN.UTF-8”写在 ~&#x2F;.xinitrc 里面，是因为，如果你不想进入图形界面，那么你就会停留在 tty，而 tty 本身是不支持中文的。此时，LANG 的值仍然是之前所设置的“en_US.UTF-8”就不会出现乱码的问题，如果把这句话写在 ~&#x2F;.bashrc 中，那么每次一登陆就会将语言修改为中文，导致 tty 永远处在乱码状态。</p><p>说明一下.Xresources 文件，这个文件可以用来调节 dpi（默认 96），适合高分辨率屏幕，加入以下内容即可</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Xft</span>.dpi: <span class="hljs-number">192</span><br></code></pre></td></tr></table></figure><p>里面的数字填 ( 放大倍数 ) * 96 就可以了，比如 192 就是放到 200%，给个简单参考</p><ul><li>15.5 寸笔记本，1920x1080，填 144</li><li>15.5 寸笔记本，2560x1440，填 192</li><li>如果觉得太大了，可以调小，建议为 25% 的倍数</li></ul><p>那么如何设置自动进入 i3 桌面呢？很简单，将一下代码贴在 ~&#x2F;.bashrc 中即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;DISPLAY&#125;</span>&quot;</span> ] &amp;&amp; [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;XDG_VTNR&#125;</span>&quot;</span> -eq 1 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">exec</span> startx<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>这样我们就拥有了一个 i3wm 了。</p><h2 id="3-后续的配置"><a href="#3-后续的配置" class="headerlink" title="3. 后续的配置"></a>3. 后续的配置</h2><p>KDE,gnome,i3 等桌面环境的配置，就不在这里赘述了，每个人的需求不一样。</p><h3 id="3-1-中文输入法"><a href="#3-1-中文输入法" class="headerlink" title="3.1 中文输入法"></a>3.1 中文输入法</h3><p>推荐使用 fcitx5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S fcitx5 fcitx5-chinese-addons fcitx5-gtk fcitx5-qt fcitx5-configtool<br></code></pre></td></tr></table></figure><p>然后添加环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo vim /etc/environment<br><br><span class="hljs-attribute">GTK_IM_MODULE</span>=fcitx<br><span class="hljs-attribute">QT_IM_MODULE</span>=fcitx<br><span class="hljs-attribute">XMODIFIERS</span>=@im=fcitx<br><span class="hljs-attribute">INPUT_METHOD</span>=fcitx<br><span class="hljs-attribute">SDL_IM_MODULE</span>=fcitx<br><span class="hljs-attribute">GLFW_IM_MODULE</span>=ibus<br></code></pre></td></tr></table></figure><p>然后设置开机启动即可（桌面环境不同，方法也不同），这里提供一个简单的思路。</p><p>tty 下面是不需要中文输入法的（也用不了），所以修改 ~&#x2F;.xinitrc，添加代码</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">fcitx5 <span class="hljs-punctuation">-</span>d <span class="hljs-meta">&amp;    (后台运行fcitx5，且开机自启)</span><br></code></pre></td></tr></table></figure><p>wiki 上的描述</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs perl">注意：<br>如果您使用的桌面环境是兼容 XDG 的（例如 KDE、GNOME、Xfce、LXDE等），则 无需 此步骤（添加自启）。<br>如果使用i3、awesome等窗口管理器，需要在其脚本中添加 Fcitx5 以实现自启动。例如，如果您使用 i3 或 sway ,可以在配置文件中添加<span class="hljs-keyword">exec</span> --<span class="hljs-keyword">no</span>-startup-id fcitx5 -d<br>如果使用dwm，则需要添加 autostart 补丁。在 ~<span class="hljs-regexp">/.dwm/au</span>tostart.sh 中添加fcitx5 -d<br></code></pre></td></tr></table></figure><p>根据需求自取即可。</p><h3 id="3-2-添加-archlinuxcn-源，并配置-yay"><a href="#3-2-添加-archlinuxcn-源，并配置-yay" class="headerlink" title="3.2 添加 archlinuxcn 源，并配置 yay"></a>3.2 添加 archlinuxcn 源，并配置 yay</h3><p>在装系统时我们已经将 &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist 换为了国内源（有时候会玄学变回国外源，需要自己查看一下），所以只需要添加 archlinuxcn 即可。</p><p>使用方法：在 &#x2F;etc&#x2F;pacman.conf 文件末尾添加以下两行：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[archlinuxcn]</span><br><span class="hljs-attr">SigLevel</span> = Optional TrustAll<br><span class="hljs-attr">Server</span> = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>如果 SigLevel 那一行不加，后面安装 archlinuxcn-keyring 时不会报错的话，可以不加，但是我报错了所以加上了。</p><p>这里有一个坑，要取消这两行前面的注释，不然有一部分 32 位包无法安装。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">84 </span># [muiltilib]<br><span class="hljs-symbol">85 </span># Include = /etc/pacman.d/mirrorlist<br></code></pre></td></tr></table></figure><p>之后安装 archlinuxcn-keyring 包导入 GPG key。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Syyu<br><span class="hljs-built_in">sudo</span> pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S yay<br></code></pre></td></tr></table></figure><p>安装 yay 即可，现在 yay 不能换国内源了，所以无需多余配置。电信网使用 yay 容易连不上，建议使用联通。</p><p>安装终端字体，推荐 nerd-fonts-hack 需要 anchlinuxcn</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">pacman -S nerd-fonts-hack</span><br></code></pre></td></tr></table></figure><h3 id="3-3-配置-zsh（可选）"><a href="#3-3-配置-zsh（可选）" class="headerlink" title="3.3 配置 zsh（可选）"></a>3.3 配置 zsh（可选）</h3><p>zsh 是一个非常好用的解释器，配置也不复杂。</p><p><a href="https://zhuanlan.zhihu.com/p/345559097">Linux 中国：配置一个简洁高效的 Zsh | Linux 中国</a>这里就不多赘述，直接开搞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy zsh zsh-autosuggestions zsh-syntax-highlighting zsh-theme-powerlevel10k zsh-completions<br>（安装zsh以及相应组件）<br>chsh -s /usr/bin/zsh    （修改为默认解释器）<br></code></pre></td></tr></table></figure><p>然后<strong>把 ~&#x2F;.bashrc 中的所有内容迁移到 ~&#x2F;.zshrc</strong> ，没有就自己创建，并加入</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zsh/</span>plugins<span class="hljs-regexp">/zsh-syntax-highlighting/</span>zsh-syntax-highlighting.zsh<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zsh/</span>plugins<span class="hljs-regexp">/zsh-autosuggestions/</span>zsh-autosuggestions.zsh<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/zsh-theme-powerlevel10k/</span>powerlevel10k.zsh-theme<br></code></pre></td></tr></table></figure><p>然后重启就可以使用了，可以删除掉 ~&#x2F;.bashrc 和 ~&#x2F;.bash_history 中的内容，因为已经不用了。</p><p>再贴一份好用的配置文件，直接复制所有内容到 ~&#x2F;.zshrc 最后就行了，然后按需修改，主要修改 alias 部分，以及删去 ibus 输入法相关配置。</p><p><a href="https://blog.csdn.net/u013566722/article/details/51231818">zsh 配置文件_kuikuitage 的博客-CSDN 博客</a>链接里面的内容不太好复制，我这里直接贴上来吧 (一般来说，alias 和 function 用的比较多，其他内容不改就行)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh<br><span class="hljs-built_in">source</span> /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh<br><span class="hljs-built_in">source</span> /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme<br><br><span class="hljs-comment">#color&#123;&#123;&#123;</span><br><span class="hljs-built_in">autoload</span> colors &amp;&amp; colors<br><br><span class="hljs-comment">#命令别名 &#123;&#123;&#123;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cp</span>=<span class="hljs-string">&#x27;cp -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">mv</span>=<span class="hljs-string">&#x27;mv -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">rm</span>=<span class="hljs-string">&#x27;rm -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">ls</span>=<span class="hljs-string">&#x27;ls -a --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> grep=<span class="hljs-string">&#x27;grep --color=auto&#x27;</span><br><br><span class="hljs-comment">#终端代理</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">proxy_on</span></span>() &#123;<br>    <span class="hljs-built_in">export</span> http_proxy=http://127.0.0.1:7890<br>    <span class="hljs-built_in">export</span> https_proxy=<span class="hljs-variable">$http_proxy</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;终端代理已开启。&quot;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">proxy_off</span></span>()&#123;<br>    <span class="hljs-built_in">unset</span> http_proxy https_proxy<br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;终端代理已关闭。&quot;</span><br>&#125;<br><br><span class="hljs-keyword">for</span> color <span class="hljs-keyword">in</span> RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; <span class="hljs-keyword">do</span><br><span class="hljs-built_in">eval</span> _<span class="hljs-variable">$color</span>=<span class="hljs-string">&#x27;%&#123;$terminfo[bold]$fg[$&#123;(L)color&#125;]%&#125;&#x27;</span><br><span class="hljs-built_in">eval</span> <span class="hljs-variable">$color</span>=<span class="hljs-string">&#x27;%&#123;$fg[$&#123;(L)color&#125;]%&#125;&#x27;</span><br>(( count = <span class="hljs-variable">$count</span> + <span class="hljs-number">1</span> ))<br><span class="hljs-keyword">done</span><br>FINISH=<span class="hljs-string">&quot;%&#123;<span class="hljs-variable">$terminfo</span>[sgr0]%&#125;&quot;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#命令提示符</span><br>RPROMPT=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$RED</span>%D %T<span class="hljs-variable">$FINISH</span>&quot;</span>)<br>PROMPT=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$CYAN</span>%n@<span class="hljs-variable">$YELLOW</span>%M:<span class="hljs-variable">$GREEN</span>%/<span class="hljs-variable">$_YELLOW</span>&gt;<span class="hljs-variable">$FINISH</span> &quot;</span>)<br><br><span class="hljs-comment">#PROMPT=$(echo &quot;$BLUE%M$GREEN%/</span><br><span class="hljs-comment">#$CYAN%n@$BLUE%M:$GREEN%/$_YELLOW&gt;&gt;&gt;$FINISH &quot;)</span><br><span class="hljs-comment">#标题栏、任务栏样式&#123;&#123;&#123;</span><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$TERM</span> <span class="hljs-keyword">in</span> (*xterm*|*rxvt*|(dt|k|E)term)<br><span class="hljs-function"><span class="hljs-title">precmd</span></span> () &#123; <span class="hljs-built_in">print</span> -Pn <span class="hljs-string">&quot;\e]0;%n@%M//%/\a&quot;</span> &#125;<br><span class="hljs-function"><span class="hljs-title">preexec</span></span> () &#123; <span class="hljs-built_in">print</span> -Pn <span class="hljs-string">&quot;\e]0;%n@%M//%/\ <span class="hljs-variable">$1</span>\a&quot;</span> &#125;<br>;;<br><span class="hljs-keyword">esac</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#编辑器</span><br><span class="hljs-built_in">export</span> EDITOR=vim<br><span class="hljs-comment">#关于历史纪录的配置 &#123;&#123;&#123;</span><br><span class="hljs-comment">#历史纪录条目数量</span><br><span class="hljs-built_in">export</span> HISTSIZE=10000<br><span class="hljs-comment">#注销后保存的历史纪录条目数量</span><br><span class="hljs-built_in">export</span> SAVEHIST=10000<br><span class="hljs-comment">#历史纪录文件</span><br><span class="hljs-built_in">export</span> HISTFILE=~/.zhistory<br><span class="hljs-comment">#以附加的方式写入历史纪录</span><br><span class="hljs-built_in">setopt</span> INC_APPEND_HISTORY<br><span class="hljs-comment">#如果连续输入的命令相同，历史纪录中只保留一个</span><br><span class="hljs-built_in">setopt</span> HIST_IGNORE_DUPS<br><span class="hljs-comment">#为历史纪录中的命令添加时间戳</span><br><span class="hljs-built_in">setopt</span> EXTENDED_HISTORY      <br><br><span class="hljs-comment">#启用 cd 命令的历史纪录，cd -[TAB]进入历史路径</span><br><span class="hljs-built_in">setopt</span> AUTO_PUSHD<br><span class="hljs-comment">#相同的历史路径只保留一个</span><br><span class="hljs-built_in">setopt</span> PUSHD_IGNORE_DUPS<br><br><span class="hljs-comment">#在命令前添加空格，不将此命令添加到纪录文件中</span><br><span class="hljs-comment">#setopt HIST_IGNORE_SPACE</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#每个目录使用独立的历史纪录&#123;&#123;&#123;</span><br><span class="hljs-function"><span class="hljs-title">cd</span></span>() &#123;<br><span class="hljs-built_in">builtin</span> <span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>                             <span class="hljs-comment"># do actual cd</span><br><span class="hljs-built_in">fc</span> -W                                       <span class="hljs-comment"># write current history  file</span><br><span class="hljs-built_in">local</span> HISTDIR=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span>&quot;</span>      <span class="hljs-comment"># use nested folders for history</span><br><span class="hljs-keyword">if</span>  [ ! -d <span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>&quot;</span> ] ; <span class="hljs-keyword">then</span>          <span class="hljs-comment"># create folder if needed</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">export</span> HISTFILE=<span class="hljs-string">&quot;<span class="hljs-variable">$HISTDIR</span>/zhistory&quot;</span>     <span class="hljs-comment"># set new history file</span><br><span class="hljs-built_in">touch</span> <span class="hljs-variable">$HISTFILE</span><br><span class="hljs-built_in">local</span> ohistsize=<span class="hljs-variable">$HISTSIZE</span><br>HISTSIZE=0                              <span class="hljs-comment"># Discard previous dir&#x27;s history</span><br>HISTSIZE=<span class="hljs-variable">$ohistsize</span>                     <span class="hljs-comment"># Prepare for new dir&#x27;s history</span><br><span class="hljs-built_in">fc</span> -R                                       <span class="hljs-comment">#read from current histfile</span><br>&#125;<br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span><br><span class="hljs-built_in">export</span> HISTFILE=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/.zsh_history<span class="hljs-variable">$PWD</span>/zhistory&quot;</span><br><br><span class="hljs-keyword">function</span> allhistory &#123; <span class="hljs-built_in">cat</span> $(find <span class="hljs-variable">$HOME</span>/.zsh_history -name zhistory) &#125;<br><span class="hljs-keyword">function</span> convhistory &#123;<br><span class="hljs-built_in">sort</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">uniq</span> |<br>sed <span class="hljs-string">&#x27;s/^:[0−9]∗:[0-9]*;.∗/\1::::::\2/&#x27;</span> |<br>awk -F<span class="hljs-string">&quot;::::::&quot;</span> <span class="hljs-string">&#x27;&#123; $1=strftime(&quot;%Y-%m-%d %T&quot;,$1) &quot;|&quot;; print &#125;&#x27;</span><br>&#125;<br><span class="hljs-comment">#使用 histall 命令查看全部历史纪录</span><br><span class="hljs-keyword">function</span> histall &#123; convhistory =(allhistory) |<br>sed <span class="hljs-string">&#x27;/^.\&#123;20\&#125; *cd/i\\&#x27;</span> &#125;<br><span class="hljs-comment">#使用 hist 查看当前目录历史纪录</span><br><span class="hljs-keyword">function</span> hist &#123; convhistory <span class="hljs-variable">$HISTFILE</span> &#125;<br><br><span class="hljs-comment">#全部历史纪录 top50</span><br><span class="hljs-keyword">function</span> top50 &#123; allhistory | awk -F<span class="hljs-string">&#x27;:[ 0-9]*:[0-9]*;&#x27;</span> <span class="hljs-string">&#x27;&#123; $1=&quot;&quot; ; print &#125;&#x27;</span> | sed <span class="hljs-string">&#x27;s/ /\n/g&#x27;</span> | sed <span class="hljs-string">&#x27;/^$/d&#x27;</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -nr | <span class="hljs-built_in">head</span> -n 50 &#125;<br><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#杂项 &#123;&#123;&#123;</span><br><span class="hljs-comment">#允许在交互模式中使用注释  例如：</span><br><span class="hljs-comment">#cmd #这是注释</span><br><span class="hljs-built_in">setopt</span> INTERACTIVE_COMMENTS      <br><br><span class="hljs-comment">#启用自动 cd，输入目录名回车进入目录</span><br><span class="hljs-comment">#稍微有点混乱，不如 cd 补全实用</span><br><span class="hljs-built_in">setopt</span> AUTO_CD<br><br><span class="hljs-comment">#扩展路径</span><br><span class="hljs-comment">#/v/c/p/p =&gt; /var/cache/pacman/pkg</span><br><span class="hljs-built_in">setopt</span> complete_in_word<br><br><span class="hljs-comment">#禁用 core dumps</span><br><span class="hljs-built_in">limit</span> coredumpsize 0<br><br><span class="hljs-comment">#Emacs风格 键绑定</span><br><span class="hljs-built_in">bindkey</span> -e<br><span class="hljs-comment">#bindkey -v</span><br><span class="hljs-comment">#设置 [DEL]键 为向后删除</span><br><span class="hljs-comment">#bindkey &quot;\e[3~&quot; delete-char</span><br><br><span class="hljs-comment">#以下字符视为单词的一部分</span><br>WORDCHARS=<span class="hljs-string">&#x27;*?_-[]~=&amp;;!#$%^()&#123;&#125;&lt;&gt;&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#自动补全功能 &#123;&#123;&#123;</span><br><span class="hljs-built_in">setopt</span> AUTO_LIST<br><span class="hljs-built_in">setopt</span> AUTO_MENU<br><span class="hljs-comment">#开启此选项，补全时会直接选中菜单项</span><br><span class="hljs-comment">#setopt MENU_COMPLETE</span><br><br><span class="hljs-built_in">autoload</span> -U compinit<br>compinit<br><br><span class="hljs-comment">#自动补全缓存</span><br><span class="hljs-comment">#zstyle &#x27;:completion::complete:*&#x27; use-cache on</span><br><span class="hljs-comment">#zstyle &#x27;:completion::complete:*&#x27; cache-path .zcache</span><br><span class="hljs-comment">#zstyle &#x27;:completion:*:cd:*&#x27; ignore-parents parent pwd</span><br><br><span class="hljs-comment">#自动补全选项</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> verbose <span class="hljs-built_in">yes</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> menu <span class="hljs-keyword">select</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:default&#x27;</span> force-list always<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> select-prompt <span class="hljs-string">&#x27;%SSelect:  lines: %L  matches: %M  [%p]&#x27;</span><br><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:match:*&#x27;</span> original only<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::prefix-1:*&#x27;</span> completer _complete<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:predict:*&#x27;</span> completer _complete<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:incremental:*&#x27;</span> completer _complete _correct<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> completer _complete _prefix _correct _prefix _match _approximate<br><br><span class="hljs-comment">#路径补全</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> <span class="hljs-built_in">expand</span> <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> squeeze-shlashes <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion::complete:*&#x27;</span> <span class="hljs-string">&#x27;\\&#x27;</span><br><br><span class="hljs-comment">#彩色补全菜单</span><br><span class="hljs-built_in">eval</span> $(<span class="hljs-built_in">dircolors</span> -b)<br><span class="hljs-built_in">export</span> ZLSCOLORS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LS_COLORS&#125;</span>&quot;</span><br><span class="hljs-built_in">zmodload</span> zsh/complist<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> list-colors <span class="hljs-variable">$&#123;(s.:.)LS_COLORS&#125;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:kill:*:processes&#x27;</span> list-colors <span class="hljs-string">&#x27;=(#b) #([0-9]#)*=0=01;31&#x27;</span><br><br><span class="hljs-comment">#修正大小写</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> matcher-list <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;m:&#123;a-zA-Z&#125;=&#123;A-Za-z&#125;&#x27;</span><br><span class="hljs-comment">#错误校正</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> completer _complete _match _approximate<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:match:*&#x27;</span> original only<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:approximate:*&#x27;</span> max-errors 1 numeric<br><br><span class="hljs-comment">#kill 命令补全</span><br>compdef pkill=<span class="hljs-built_in">kill</span><br>compdef pkill=killall<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:kill:*&#x27;</span> menu <span class="hljs-built_in">yes</span> <span class="hljs-keyword">select</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:*:*:*:processes&#x27;</span> force-list always<br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:processes&#x27;</span> <span class="hljs-built_in">command</span> <span class="hljs-string">&#x27;ps -au$USER&#x27;</span><br><br><span class="hljs-comment">#补全类型提示分组</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:matches&#x27;</span> group <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*&#x27;</span> group-name <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:options&#x27;</span> description <span class="hljs-string">&#x27;yes&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:options&#x27;</span> auto-description <span class="hljs-string">&#x27;%d&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:descriptions&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;33m -- %d --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:messages&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;35m -- %d --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:warnings&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;31m -- No Matches Found --\e[0m&#x27;</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:corrections&#x27;</span> format $<span class="hljs-string">&#x27;\e[01;32m -- %d (errors: %e) --\e[0m&#x27;</span><br><br><span class="hljs-comment"># cd ~ 补全顺序</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:-tilde-:*&#x27;</span> group-order <span class="hljs-string">&#x27;named-directories&#x27;</span> <span class="hljs-string">&#x27;path-directories&#x27;</span> <span class="hljs-string">&#x27;users&#x27;</span> <span class="hljs-string">&#x27;expand&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##行编辑高亮模式 &#123;&#123;&#123;</span><br><span class="hljs-comment"># Ctrl+@ 设置标记，标记和光标点之间为 region</span><br>zle_highlight=(region:<span class="hljs-built_in">bg</span>=magenta <span class="hljs-comment">#选中区域</span><br>special:bold      <span class="hljs-comment">#特殊字符</span><br>isearch:underline)#搜索时使用的关键字<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##空行(光标在行首)补全 &quot;cd &quot; &#123;&#123;&#123;</span><br>user-<span class="hljs-function"><span class="hljs-title">complete</span></span>()&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-variable">$BUFFER</span> <span class="hljs-keyword">in</span><br><span class="hljs-string">&quot;&quot;</span> )                       <span class="hljs-comment"># 空行填入 &quot;cd &quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd &quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-string">&quot;cd --&quot;</span> )                  <span class="hljs-comment"># &quot;cd --&quot; 替换为 &quot;cd +&quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd +&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-string">&quot;cd +-&quot;</span> )                  <span class="hljs-comment"># &quot;cd +-&quot; 替换为 &quot;cd -&quot;</span><br>BUFFER=<span class="hljs-string">&quot;cd -&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br>* )<br><span class="hljs-built_in">zle</span> expand-or-complete<br>;;<br><span class="hljs-keyword">esac</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N user-complete<br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;\t&quot;</span> user-complete<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##在命令前插入 sudo &#123;&#123;&#123;</span><br><span class="hljs-comment">#定义功能</span><br>sudo-command-<span class="hljs-function"><span class="hljs-title">line</span></span>() &#123;<br>[[ -z <span class="hljs-variable">$BUFFER</span> ]] &amp;&amp; <span class="hljs-built_in">zle</span> up-history<br>[[ <span class="hljs-variable">$BUFFER</span> != <span class="hljs-built_in">sudo</span>\ * ]] &amp;&amp; BUFFER=<span class="hljs-string">&quot;sudo <span class="hljs-variable">$BUFFER</span>&quot;</span><br><span class="hljs-built_in">zle</span> end-of-line                 <span class="hljs-comment">#光标移动到行末</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N sudo-command-line<br><span class="hljs-comment">#定义快捷键为： [Esc] [Esc]</span><br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;\e\e&quot;</span> sudo-command-line<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><span class="hljs-comment">#[Esc][h] man 当前命令时，显示简短说明</span><br><span class="hljs-built_in">alias</span> run-help &gt;&amp;/dev/null &amp;&amp; <span class="hljs-built_in">unalias</span> run-help<br><span class="hljs-built_in">autoload</span> run-help<br><br><span class="hljs-comment">#历史命令 top10</span><br><span class="hljs-built_in">alias</span> top10=<span class="hljs-string">&#x27;print -l  $&#123;(o)history%% *&#125; | uniq -c | sort -nr | head -n 10&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#路径别名 &#123;&#123;&#123;</span><br><span class="hljs-comment">#进入相应的路径时只要 cd ~xxx</span><br><span class="hljs-built_in">hash</span> -d A=<span class="hljs-string">&quot;/media/ayu/dearest&quot;</span><br><span class="hljs-built_in">hash</span> -d H=<span class="hljs-string">&quot;/media/data/backup/ayu&quot;</span><br><span class="hljs-built_in">hash</span> -d E=<span class="hljs-string">&quot;/etc/&quot;</span><br><span class="hljs-built_in">hash</span> -d D=<span class="hljs-string">&quot;/home/ayumi/Documents&quot;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">##for Emacs &#123;&#123;&#123;</span><br><span class="hljs-comment">#在 Emacs终端 中使用 Zsh 的一些设置 不推荐在 Emacs 中使用它</span><br><span class="hljs-comment">#if [[ &quot;$TERM&quot; == &quot;dumb&quot; ]]; then</span><br><span class="hljs-comment">#setopt No_zle</span><br><span class="hljs-comment">#PROMPT=&#x27;%n@%M %/</span><br><span class="hljs-comment">#&gt;&gt;&#x27;</span><br><span class="hljs-comment">#alias ls=&#x27;ls -F&#x27;</span><br><span class="hljs-comment">#fi</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#&#123;&#123;&#123;自定义补全</span><br><span class="hljs-comment">#补全 ping</span><br><span class="hljs-built_in">zstyle</span> <span class="hljs-string">&#x27;:completion:*:ping:*&#x27;</span> hosts 192.168.1.&#123;1,50,51,100,101&#125; www.google.com<br><br><span class="hljs-comment">#补全 ssh scp sftp 等</span><br><span class="hljs-comment">#zstyle -e &#x27;:completion::*:*:*:hosts&#x27; hosts &#x27;reply=($&#123;=$&#123;$&#123;(f)&quot;$(cat &#123;/etc/ssh_,~/.ssh/known_&#125;hosts(|2)(N) /dev/null)&quot;&#125;%%[# ]*&#125;//,/ &#125;)&#x27;</span><br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">#&#123;&#123;&#123; F1 计算器</span><br>arith-eval-<span class="hljs-function"><span class="hljs-title">echo</span></span>() &#123;<br>LBUFFER=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LBUFFER&#125;</span>echo \$(( &quot;</span><br>RBUFFER=<span class="hljs-string">&quot; ))<span class="hljs-variable">$RBUFFER</span>&quot;</span><br>&#125;<br><span class="hljs-built_in">zle</span> -N arith-eval-echo<br><span class="hljs-built_in">bindkey</span> <span class="hljs-string">&quot;^[[11~&quot;</span> arith-eval-echo<br><span class="hljs-comment">#&#125;&#125;&#125;</span><br><br><span class="hljs-comment">####&#123;&#123;&#123;</span><br><span class="hljs-keyword">function</span> timeconv &#123; <span class="hljs-built_in">date</span> -d @<span class="hljs-variable">$1</span> +<span class="hljs-string">&quot;%Y-%m-%d %T&quot;</span> &#125;<br><br><span class="hljs-comment"># &#125;&#125;&#125;</span><br><br><span class="hljs-built_in">zmodload</span> zsh/mathfunc<br><span class="hljs-built_in">autoload</span> -U zsh-mime-setup<br>zsh-mime-setup<br><span class="hljs-built_in">setopt</span> EXTENDED_GLOB<br><span class="hljs-comment">#autoload -U promptinit</span><br><span class="hljs-comment">#promptinit</span><br><span class="hljs-comment">#prompt redhat</span><br><br><span class="hljs-built_in">setopt</span> correctall<br><span class="hljs-built_in">autoload</span> compinstall<br><br><span class="hljs-comment">#漂亮又实用的命令高亮界面</span><br><span class="hljs-built_in">setopt</span> extended_glob<br>TOKENS_FOLLOWED_BY_COMMANDS=(<span class="hljs-string">&#x27;|&#x27;</span> <span class="hljs-string">&#x27;||&#x27;</span> <span class="hljs-string">&#x27;;&#x27;</span> <span class="hljs-string">&#x27;&amp;&#x27;</span> <span class="hljs-string">&#x27;&amp;&amp;&#x27;</span> <span class="hljs-string">&#x27;sudo&#x27;</span> <span class="hljs-string">&#x27;do&#x27;</span> <span class="hljs-string">&#x27;time&#x27;</span> <span class="hljs-string">&#x27;strace&#x27;</span>)<br><br>recolor-<span class="hljs-function"><span class="hljs-title">cmd</span></span>() &#123;<br>region_highlight=()<br>colorize=<span class="hljs-literal">true</span><br>start_pos=0<br><span class="hljs-keyword">for</span> arg <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;(z)BUFFER&#125;</span>; <span class="hljs-keyword">do</span><br>((start_pos+=<span class="hljs-variable">$&#123;#BUFFER[$start_pos+1,-1]&#125;</span>-<span class="hljs-variable">$&#123;#<span class="hljs-variable">$&#123;BUFFER[$start_pos+1,-1]## #&#125;</span>&#125;</span>))<br>((end_pos=<span class="hljs-variable">$start_pos</span>+<span class="hljs-variable">$&#123;#arg&#125;</span>))<br><span class="hljs-keyword">if</span> <span class="hljs-variable">$colorize</span>; <span class="hljs-keyword">then</span><br>colorize=<span class="hljs-literal">false</span><br>res=$(LC_ALL=C <span class="hljs-built_in">builtin</span> <span class="hljs-built_in">type</span> <span class="hljs-variable">$arg</span> 2&gt;/dev/null)<br><span class="hljs-keyword">case</span> <span class="hljs-variable">$res</span> <span class="hljs-keyword">in</span><br>*<span class="hljs-string">&#x27;reserved word&#x27;</span>*)   style=<span class="hljs-string">&quot;fg=magenta,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;alias for&#x27;</span>*)       style=<span class="hljs-string">&quot;fg=cyan,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;shell builtin&#x27;</span>*)   style=<span class="hljs-string">&quot;fg=yellow,bold&quot;</span>;;<br>*<span class="hljs-string">&#x27;shell function&#x27;</span>*)  style=<span class="hljs-string">&#x27;fg=green,bold&#x27;</span>;;<br>*<span class="hljs-string">&quot;<span class="hljs-variable">$arg</span> is&quot;</span>*)<br>[[ <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;sudo&#x27;</span> ]] &amp;&amp; style=<span class="hljs-string">&quot;fg=red,bold&quot;</span> || style=<span class="hljs-string">&quot;fg=blue,bold&quot;</span>;;<br>*)                   style=<span class="hljs-string">&#x27;none,bold&#x27;</span>;;<br><span class="hljs-keyword">esac</span><br>region_highlight+=(<span class="hljs-string">&quot;<span class="hljs-variable">$start_pos</span> <span class="hljs-variable">$end_pos</span> <span class="hljs-variable">$style</span>&quot;</span>)<br><span class="hljs-keyword">fi</span><br>[[ <span class="hljs-variable">$&#123;<span class="hljs-variable">$&#123;TOKENS_FOLLOWED_BY_COMMANDS[(r)<span class="hljs-variable">$&#123;arg//|/\|&#125;</span>]&#125;</span>:+yes&#125;</span> = <span class="hljs-string">&#x27;yes&#x27;</span> ]] &amp;&amp; colorize=<span class="hljs-literal">true</span><br>start_pos=<span class="hljs-variable">$end_pos</span><br><span class="hljs-keyword">done</span><br>&#125;<br>check-cmd-self-<span class="hljs-function"><span class="hljs-title">insert</span></span>() &#123; <span class="hljs-built_in">zle</span> .self-insert &amp;&amp; recolor-cmd &#125;<br>check-cmd-backward-delete-<span class="hljs-function"><span class="hljs-title">char</span></span>() &#123; <span class="hljs-built_in">zle</span> .backward-delete-char &amp;&amp; recolor-cmd &#125;<br><br><span class="hljs-built_in">zle</span> -N self-insert check-cmd-self-insert<br><span class="hljs-built_in">zle</span> -N backward-delete-char check-cmd-backward-delete-char<br></code></pre></td></tr></table></figure><h3 id="3-4-安装必要软件"><a href="#3-4-安装必要软件" class="headerlink" title="3.4 安装必要软件"></a>3.4 安装必要软件</h3><p>这个就自己按需安装了，根据评论区建议，可以添加一个 pacman.ltd 源，里面有很多常用的软件，matlab 和 mathmatica 都有，直接 “vim &#x2F;etc&#x2F;pacman.conf”，在后面添加：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Clansty]</span><br><span class="hljs-attr">SigLevel</span> = Never<br><span class="hljs-attr">Server</span> = https://repo.lwqwq.com/archlinux/<span class="hljs-variable">$arch</span><br><span class="hljs-attr">Server</span> = https://pacman.ltd/archlinux/<span class="hljs-variable">$arch</span><br><span class="hljs-attr">Server</span> = https://repo.clansty.com/archlinux/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>vscode、matlab、texlive-full 之类的东西都可以直接 pacman 安装了。</p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4 总结"></a>4 总结</h2><p>本来没想要写这么多的，但是写了就。。。。。应该还算比较详细了，罗列了很多教程里面的坑，资料来源几乎都是 wiki，流程主要参考开头的文章，希望可以帮助到大家。我很喜欢 archlinux，能高兴能出一份力。</p><p>然后总结一下需要注意的坑点</p><ul><li>pacman 务必先换源</li><li>如果需要有线网和 usb 共享的话，iwd 和 networkmanager 必须安装，且在第一次重启之前装好。如果只需要无线网，可以卸载 networkmanager，只使用 iwd</li><li>grub-install 是对整个硬盘，不是 boot 分区</li><li>KDE 有些组件比较臃肿，是可以替换的。</li><li>输入法不要再用旧版的 fcitx4</li><li>boot 分区挂载到 &#x2F;boot&#x2F;efi 而不是 &#x2F;efi</li><li>usb 共享网络安装时，提前安装好 usbmuxd，networkmanager</li><li>如果需要开启 sshd 服务，请使用 sudo systemctl enble sshd，否则别人连不上你电脑</li><li>dhcpcd 是网线用户需要安装的必备组件</li><li>不取消注释 &#x2F;etc&#x2F;pacman.conf 中的 [multilib] 行，virtualbox 装不上。</li></ul>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网穿透是什么，有哪些工具可以做到？</title>
    <link href="/2022/05/11/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%98%AF%E4%BB%80%E4%B9%88%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0_EberyThingSay/"/>
    <url>/2022/05/11/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%98%AF%E4%BB%80%E4%B9%88%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="内网穿透是什么，有哪些工具可以做到？"><a href="#内网穿透是什么，有哪些工具可以做到？" class="headerlink" title="内网穿透是什么，有哪些工具可以做到？"></a>内网穿透是什么，有哪些工具可以做到？</h1><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>DNS: 223.5.5.5，需要联网</p><h2 id="换源（转载自-Tismagic：PVE8-1-下软件源更新与其它配置）"><a href="#换源（转载自-Tismagic：PVE8-1-下软件源更新与其它配置）" class="headerlink" title="换源（转载自 Tismagic：PVE8.1 下软件源更新与其它配置）"></a>换源（转载自 Tismagic：PVE8.1 下软件源更新与其它配置）</h2><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs leaf"><span class="hljs-punctuation">#</span> 1. 更新debian 软件源<br><span class="hljs-punctuation">#</span><span class="hljs-params">(任选一个源)</span><br><span class="hljs-punctuation">#</span>1.1.1 清华源<br><span class="hljs-punctuation">#</span> 参考: https://mirrors.tuna.tsinghua.edu.cn/help/debian/<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.tuna.tsinghua.edu.cn/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list  <br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.tuna.tsinghua.edu.cn/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.2 中科大源<br><span class="hljs-punctuation">#</span> 参考: https://mirrors.ustc.edu.cn/help/proxmox.html<br>sed -i.bak &#x27;s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g&#x27; /etc/apt/sources.list<br>sed -i &#x27;s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g&#x27; /etc/apt/sources.list<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.3 aliyun源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.aliyun.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>修改文件的同时, 会创建一个.bak后缀的备份文件<br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.aliyun.com/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list  <span class="hljs-punctuation">#</span>阿里Debian源<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span>1.1.4 163源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">ftp</span>.debian.org/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.163.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>163Debian源<br>sed -i &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">security</span>.debian.org<span class="hljs-punctuation">#</span><span class="hljs-keyword">mirrors</span>.163.com/debian-security<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /etc/apt/sources.list     <span class="hljs-punctuation">#</span>163Debian源<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">apt</span> update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br><br><span class="hljs-punctuation">#</span> 2. PVE 软件源<br><span class="hljs-punctuation">#</span> 删除默认企业源<br>rm -rf /etc/apt/sources.list.d/pve-enterprise.list<br><br><span class="hljs-punctuation">#</span><span class="hljs-params">(任选一个源)</span><br><span class="hljs-punctuation">#</span> 2.1.1 清华源<br>echo &quot;deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bookworm pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list<br><br><span class="hljs-punctuation">#</span> 2.1.2 中科大源<br>echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bookworm pve-no-subscription&quot; &gt; /etc/apt/sources.list.d/pve-no-subscription.list<br><br><span class="hljs-punctuation">#</span>3 CEPH分布式源<br><span class="hljs-punctuation">#</span>3.1.1 中科大源<br>echo &quot;deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription&quot; &gt; /etc/apt/sources.list.d/ceph.list     <span class="hljs-punctuation">#</span>中科大源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">http</span><span class="hljs-punctuation">:</span>//download.proxmox.com/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">https</span><span class="hljs-punctuation">:</span>//mirrors.ustc.edu.cn/proxmox/debian<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /usr/share/perl5/PVE/CLI/pveceph.pm     <span class="hljs-punctuation">#</span>中科大源<br><br><span class="hljs-punctuation">#</span> --------------------------------------------------------<br><span class="hljs-punctuation">#</span> 更新索引, 升级安装软件包, 重启系统<br><span class="hljs-punctuation">#</span> --------------------------------------------------------<br><span class="hljs-punctuation">#</span> 如果无法拉取https软件源时安装<br>apt update &amp;&amp; apt-get install -y apt-transport-https ca-certificates  --fix-missing<br>apt update &amp;&amp; apt dist-upgrade<br><br><span class="hljs-punctuation">#</span>4.LXC容器仓库源(CT)<br><span class="hljs-punctuation">#</span> 4.1.1 中科大源<br>sed -i.bak &quot;s<span class="hljs-punctuation">#</span><span class="hljs-keyword">http</span><span class="hljs-punctuation">:</span>//download.proxmox.com/images<span class="hljs-punctuation">#</span><span class="hljs-keyword">https</span><span class="hljs-punctuation">:</span>//mirrors.ustc.edu.cn/proxmox/images<span class="hljs-punctuation">#</span><span class="hljs-keyword">g</span>&quot; /usr/share/perl5/PVE/APLInfo.pm  <br>systemctl restart pvedaemon  <span class="hljs-punctuation">#</span> 稍等下手动刷新webui 页面<br><br><span class="hljs-punctuation">#</span> 删除订阅弹窗<br>sed -Ezi.bak &quot;s/(Ext.Msg.show\(\&#123;\s+title: gettext\(&#x27;No valid sub)/void\(\&#123; \/\/\1/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js &amp;&amp; systemctl restart pveproxy.service<br><span class="hljs-punctuation">#</span> 执行完成后，需注销PVE登录后, 重新启动浏览器<br></code></pre></td></tr></table></figure><h2 id="启用内网穿透"><a href="#启用内网穿透" class="headerlink" title="启用内网穿透"></a>启用内网穿透</h2><p><a href="https://www.natfrp.com/tunnel/">https://www.natfrp.com/tunnel/</a> 申请一个免费节点（本地端口为 8006）</p><p><img src="/2022/05/11/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%98%AF%E4%BB%80%E4%B9%88%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0_EberyThingSay/v2-c76d91e2501b825cda133f7685a647bc_720w.jpg"><br> 下载 sakura 的 Frpc 文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://nya.globalslb.net/natfrp/client/launcher-unix/<span class="hljs-number">3</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>/natfrp-service_linux_amd64.tar.zst<br></code></pre></td></tr></table></figure><p>假设保存在 &#x2F;root&#x2F;Documents&#x2F; 下面，cd 到该目录，解压缩，给权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root/Documents<br>tar -I zstd xvf natfrp-service_linux_amd64.tar.zst<br><span class="hljs-built_in">chmod</span> +x ./*<br></code></pre></td></tr></table></figure><p>先运行一次 .&#x2F;frpc 生成配置文件，配件文件保存在 .&#x2F;frpc.ini 中</p><h3 id="PVE-系统添加-frpc-自启动"><a href="#PVE-系统添加-frpc-自启动" class="headerlink" title="PVE 系统添加 frpc 自启动"></a>PVE 系统添加 frpc 自启动</h3><p>vim &#x2F;etc&#x2F;init.d&#x2F;sakuraFprc</p><p>然后编写一个启动脚本，如果你的文件目录跟我放的一样，可以复制粘贴</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-comment">### BEGIN INIT INFO</span><br><span class="hljs-comment"># Provides: sakuraFrpc</span><br><span class="hljs-comment"># Required-Start: $network $remote_fs $local_fs</span><br><span class="hljs-comment"># Required-Stop: $network $remote_fs $local_fs</span><br><span class="hljs-comment"># Default-Start: 2 3 4 5</span><br><span class="hljs-comment"># Default-Stop: 0 1 6</span><br><span class="hljs-comment"># Short-Description: A frpc clients</span><br><span class="hljs-comment"># Description: A frpc clients</span><br><span class="hljs-comment">### END INIT INFO</span><br><br><span class="hljs-built_in">nohup</span> /root/Documents/frpc -c /root/Documents/frpc.ini &gt;/dev/null 2&gt;&amp;1 &amp;<br><br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure><p>让 frpc 在系统启动时保持运行</p><p>重启，登陆 root, 查看进程是否存在</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef | <span class="hljs-keyword">grep</span> frpc<br></code></pre></td></tr></table></figure><p>如果有类似</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/root/Documents/frpc -c /root/Documents/frpc.ini<br></code></pre></td></tr></table></figure><p>这样的输出就可以了，直接通过 sakura 的 [IP]:[Port] 访问即可</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java 工程师面试过程中，比较经典的面试题有哪些？</title>
    <link href="/2022/02/13/java_%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E8%BF%87%E7%A8%8B%E4%B8%AD%E6%AF%94%E8%BE%83%E7%BB%8F%E5%85%B8%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98%E6%9C%89%E5%93%AA%E4%BA%9B_EberyThingSay/"/>
    <url>/2022/02/13/java_%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E8%BF%87%E7%A8%8B%E4%B8%AD%E6%AF%94%E8%BE%83%E7%BB%8F%E5%85%B8%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98%E6%9C%89%E5%93%AA%E4%BA%9B_EberyThingSay/</url>
    
    <content type="html"><![CDATA[<h1 id="java-工程师面试过程中，比较经典的面试题有哪些？"><a href="#java-工程师面试过程中，比较经典的面试题有哪些？" class="headerlink" title="java 工程师面试过程中，比较经典的面试题有哪些？"></a>java 工程师面试过程中，比较经典的面试题有哪些？</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本文的所有的 Springboot、SQL 资料均来源于网络以及 ChatGPT，本人只进行了些许整理。最初是为自己面试准备的，面试结束了分享给大家。如果您觉得没有帮助，请划走，如果您觉得有所帮助，可以帮忙点个关注，谢谢。</p><h3 id="Java-面向对象的三个特征"><a href="#Java-面向对象的三个特征" class="headerlink" title="Java 面向对象的三个特征"></a>Java 面向对象的三个特征</h3><p>封装：对象只需要选择性的对外公开一些属性和行为。继承：子对象可以继承父对象的属性和行为，并且可以在其之上进行修改以适合更特殊的场景需求。多态：允许不同类的对象对同一消息做出响应。</p><h3 id="Java-中基本的数据类型有哪些-以及他们的占用字节"><a href="#Java-中基本的数据类型有哪些-以及他们的占用字节" class="headerlink" title="Java 中基本的数据类型有哪些 以及他们的占用字节"></a>Java 中基本的数据类型有哪些 以及他们的占用字节</h3><p>数据类型占用字节</p><table><thead><tr><th>数据类型</th><th>占用字节数</th></tr></thead><tbody><tr><td>byte</td><td>1</td></tr><tr><td>short</td><td>2</td></tr><tr><td>int</td><td>4</td></tr><tr><td>long</td><td>8</td></tr><tr><td>float</td><td>4</td></tr><tr><td>double</td><td>8</td></tr><tr><td>char</td><td>2</td></tr><tr><td>boolean</td><td>4</td></tr></tbody></table><h3 id="int-和-Integer-的区别"><a href="#int-和-Integer-的区别" class="headerlink" title="int 和 Integer 的区别"></a>int 和 Integer 的区别</h3><p>int 是 Java 中的原始类型，Integer 是 Java 为 int 提供的封装类，他们有不同的特征和用法，包括大小、速度、默认值。</p><h3 id="String、StringBuilder、StringBuffer-的区别及使用场景"><a href="#String、StringBuilder、StringBuffer-的区别及使用场景" class="headerlink" title="String、StringBuilder、StringBuffer 的区别及使用场景"></a>String、StringBuilder、StringBuffer 的区别及使用场景</h3><p>String 一旦定义就不可改变，可空赋值。操作少量数据时使用。StringBuilder 可改变，线程不安全。操作单线程大量数据时使用。StringBuffer 可改变，线程安全。操作多线程大量数据时使用。</p><h3 id="ArrayList、Vector-和-LinkedList-的区别及使用场景"><a href="#ArrayList、Vector-和-LinkedList-的区别及使用场景" class="headerlink" title="ArrayList、Vector 和 LinkedList 的区别及使用场景"></a>ArrayList、Vector 和 LinkedList 的区别及使用场景</h3><p>ArrayList 和 Vector 都是使用数组方式存储数据，允许按序号索引元素，但是插入数据会涉及到元素移动等内存操作，所以索引快插入慢。</p><p>ArrayList 懒加载 默认大小### 每次扩容 1.5 倍 线程不安全 性能较高 Vector 实例化时初始化 默认大小### 每次扩容 2 倍 线程安全 性能较低 已弃用</p><p>额外回答加分项：多读少写建议使用 CopyOnWriteArrayList CopyOnWriteArrayList 原理是发生修改的时候复制一份 多写少读或读写比较均匀建议使用 Connections.synchronizedList</p><p>LinkedList 使用双向链表方式存储数据，插入只需要记录本项的前后项，索引需要向前或向后进行遍历，所以插入速度较快，线程不安全，频繁在任意位置插入和删除的情况可以使用，如果需要多线程访问，可以使用 Connections.synchronizedList() 或 ConcurrentLinkedQueue</p><h3 id="Collection-和-Collections-的区别"><a href="#Collection-和-Collections-的区别" class="headerlink" title="Collection 和 Collections 的区别"></a>Collection 和 Collections 的区别</h3><p>Collection 是集合类上级接口，继承他的主要有 List 和 Set Collections 是集合类的帮助类，提供了对集合的搜索、排序、线程安全化等操作。</p><h3 id="List-和-Map-的区别"><a href="#List-和-Map-的区别" class="headerlink" title="List 和 Map 的区别"></a>List 和 Map 的区别</h3><p>List 是存储单列数据的集合，Map 是存储键值对双列数据的集合。List 存储的数据是有顺序且可重复的，Map 存储的数据是无顺序，键不可重复，值可重复的。</p><h3 id="HashMap-和-HashTable-的区别"><a href="#HashMap-和-HashTable-的区别" class="headerlink" title="HashMap 和 HashTable 的区别"></a>HashMap 和 HashTable 的区别</h3><p>HashMap 是 Map 接口的实现，非线程安全，允许空键值。HashTable 是 Dictionary 的子类，线程安全，不允许空键值。几乎被淘汰，建议使用 ConcurrentHashMap 来替代它。HashMap 使用的是快速失败迭代器，在迭代器创建后，除非通过迭代器自身的 remove 或者 add 方法，其他任何方式的修改都会抛出异常。</p><h3 id="HashMap-底层实现原理和扩容机制"><a href="#HashMap-底层实现原理和扩容机制" class="headerlink" title="HashMap 底层实现原理和扩容机制"></a>HashMap 底层实现原理和扩容机制</h3><p>JDK1.8 以前：数组 + 单链表的组合，以键值对的方式存储元素。JDK1.8 及以后：引入红黑树结构，添加元素时，若链表个数大于 8，链表会转换为红黑树，反之小于 6 时会修剪或还原成链表结构。选择 6 和 8 可以有效防止频繁的链表和红黑树转换。扩容条件：</p><p>存放新值的时候当前已有元素个数大于阈值。存放新值的时候当前存放数据发生 hash 碰撞（当前 key 计算的 hash 值换算出来的数组下标位置已经存在值）默认容量是 16，负载因子 0.75，所以扩容阈值是 12。每次扩容的容量是原有的 2 倍。</p><h3 id="HashMap-什么样的类适合作为键"><a href="#HashMap-什么样的类适合作为键" class="headerlink" title="HashMap 什么样的类适合作为键"></a>HashMap 什么样的类适合作为键</h3><p>String 最为常见，因为 String 对象不可变，且重写了 equals 和 hashcode 方法。不可变性是必要的，如果 key 的 hashcode 存入和获取是不一致，就无法找到。获取对象时需要用到 equals 和 hashCode 方法，正确的重写这两个方法是非常重要的，因为两个不相等的对象返回不同的 hashCode 的话，碰撞的几率就会小些，就可以提高 HashMap 的性能。</p><h3 id="final、finally、finalize-的区别"><a href="#final、finally、finalize-的区别" class="headerlink" title="final、finally、finalize 的区别"></a>final、finally、finalize 的区别</h3><p>final 用于修饰属性、方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。finally 是异常处理语句结构的一部分，表示总是执行。finalize 是 Object 类的一个方法，在 GC 执行时会调用被回收对象的此方法。</p><h3 id="sleep-和-wait-的区别"><a href="#sleep-和-wait-的区别" class="headerlink" title="sleep() 和 wait() 的区别"></a>sleep() 和 wait() 的区别</h3><p>sleep() 是 Thread 类的，wait() 是 Object 类的方法 sleep 不会释放锁，wait 会释放锁。sleep 可在任意地方使用，wait notify notifyAll 只能在 synchronized 块。sleep 必须捕获异常，而 wait 不需要。</p><h3 id="抽象类和接口的区别、以及使用场景"><a href="#抽象类和接口的区别、以及使用场景" class="headerlink" title="抽象类和接口的区别、以及使用场景"></a>抽象类和接口的区别、以及使用场景</h3><p>抽象类中可以有构造方法、静态方法、普通方法、普通成员变量。接口中不能有。抽象类中的抽象方法访问类型可以是 public、protected 和默认类型，接口中只能是 public。抽象类中的静态成员变量访问类型可以任意，接口中只能是 public 的。一个类只能继承一个类，但是可以实现多个接口。抽象类和子类为“是不是”的关系。主要用于为一些类提供公共实现代码。接口和实现为“有没有”的关系。主要用于代码的扩展性和可维护性。</p><h3 id="Overload（重载）和-Override（重写）的区别"><a href="#Overload（重载）和-Override（重写）的区别" class="headerlink" title="Overload（重载）和 Override（重写）的区别"></a>Overload（重载）和 Override（重写）的区别</h3><p>重载是一个类中多态性的一种表现，在一个类中定义了多个同名的方法，他们有不同的参数列表。重写是父类与子类之间多态的一种表现，子类中定义了与父类有相同名称和参数的方法时，子类对象使用该方法会调用子类中的定义。</p><h3 id="forward（转发）和-redirect（重定向）的区别"><a href="#forward（转发）和-redirect（重定向）的区别" class="headerlink" title="forward（转发）和 redirect（重定向）的区别"></a>forward（转发）和 redirect（重定向）的区别</h3><p>forward 是服务器请求资源，服务器访问目标 URL，把响应内容发给用户，用户不知道数据是从哪来的。redirect 是服务器向客户端发送一个状态码，告知重新请求该 URL。</p><h3 id="连接池的工作机制"><a href="#连接池的工作机制" class="headerlink" title="连接池的工作机制"></a>连接池的工作机制</h3><p>服务器启动时会建立一定数量的池连接，客户端需要连接时，池会返回一个未使用的连接并将其标记为忙，如果没有空闲连接，池会新建一定数量的连接，当连接使用完毕后，池会将其标记为空闲。</p><h3 id="什么是序列化"><a href="#什么是序列化" class="headerlink" title="什么是序列化"></a>什么是序列化</h3><p>序列化就是一种用来处理对象流的机制，就是将对象的内容进行流化，可以对流化后的对象进行读写操作，也可以将流化后的对象传输于网络之间。可通过实现 java.io.Serializable 接口来实现序列化。</p><h3 id="第三方框架部分"><a href="#第三方框架部分" class="headerlink" title="第三方框架部分"></a>第三方框架部分</h3><h3 id="什么是-AOP、Spring-AOP-的底层原理是什么"><a href="#什么是-AOP、Spring-AOP-的底层原理是什么" class="headerlink" title="什么是 AOP、Spring AOP 的底层原理是什么"></a>什么是 AOP、Spring AOP 的底层原理是什么</h3><p>AOP 是面向切面编程，用于在不改变原有逻辑的基础上增加一些额外的功能，如事务管理、日志、缓存、权限控制等。Spring AOP 是基于代理的。如果目标对象实现了接口，则默认采用 JDK 动态代理。如果目标对象没有实现接口，则采用 CgLib 进行动态代理。如果目标对象实现了接口，且强制 CgLib 代理，则采用 CgLib 动态代理。</p><h3 id="什么是-IOC、IOC-注入方式有哪些"><a href="#什么是-IOC、IOC-注入方式有哪些" class="headerlink" title="什么是 IOC、IOC 注入方式有哪些"></a>什么是 IOC、IOC 注入方式有哪些</h3><p>IOC 翻译为控制反转，他还有个别名为 DI（依赖注入）。IOC 就是由 IOC 容器来负责对象的生命周期和对象之间的关系。控制反转就是本来应该你做的事情，让系统去做，比如通常获取一个对象需要通过 new，而使用 IOC 则是 IOC 将对象创建后注入到被注入的对象中。注解注入（Spring）、构造器注入、setter 方法注入、接口方式注入（不推荐）</p><h3 id="Spring-Boot-的核心注解是什么，它是由哪几个注解组成的"><a href="#Spring-Boot-的核心注解是什么，它是由哪几个注解组成的" class="headerlink" title="Spring Boot 的核心注解是什么，它是由哪几个注解组成的"></a>Spring Boot 的核心注解是什么，它是由哪几个注解组成的</h3><p>核心注解：@SpringBootApplication 包含： @SpringBootConfiguration 实现配置文件功能 @EnableAutoConfiguration 打开自动配置功能 @CompoentScan 组件扫描功能</p><h3 id="SpringBoot-怎么读取配置文件"><a href="#SpringBoot-怎么读取配置文件" class="headerlink" title="SpringBoot 怎么读取配置文件"></a>SpringBoot 怎么读取配置文件</h3><p>属性上使用@Value 注解 类上使用@ConfigurationProperties 注解 读取指定文件注解可在类上使用@PropertySource（不支持 yml 文件读取）注入 Environment 对象获取到。</p><h3 id="SpringCloud-和-Dubbo-的区别"><a href="#SpringCloud-和-Dubbo-的区别" class="headerlink" title="SpringCloud 和 Dubbo 的区别"></a>SpringCloud 和 Dubbo 的区别</h3><p>SpringCloud 采用基于 HTTP 的 REST API，Dubbo 采用 RPC 方式。</p><h3 id="SpringCloud-的-Hystrix-断路器特性"><a href="#SpringCloud-的-Hystrix-断路器特性" class="headerlink" title="SpringCloud 的 Hystrix 断路器特性"></a>SpringCloud 的 Hystrix 断路器特性</h3><p>请求熔断：请求服务失败量超过一定比例（默认 50%）断路器会切换到开路状态，这时所有请求不会发送到后端服务，断路器在保持开路状态一段时间后（默认 5 秒），自动切换到半开路状态。这时如果下一次请求成功，断路器切回闭路状态，否则重新切换到开路状态。服务降级：对于查询操作，可以实现一个 fallback 方法。当请求服务出现异常时，可以使用 fallback 方法返回的值。依赖隔离：通过线程池来实现资源隔离，比如一个服务调用另外两个服务，如果这两个服务在同一线程池，那么如果一个服务卡住，后面的请求又来了，就会导致后面的请求都会卡住等待。请求缓存：缓存上次请求结果，返回给后续请求。请求合并：把多个请求合并成一个请求，提升效率。</p><h3 id="MySQL-数据库部分"><a href="#MySQL-数据库部分" class="headerlink" title="MySQL 数据库部分"></a>MySQL 数据库部分</h3><h3 id="事物的四大特性和隔离级别"><a href="#事物的四大特性和隔离级别" class="headerlink" title="事物的四大特性和隔离级别"></a>事物的四大特性和隔离级别</h3><p>原子性：不可分割的操作单元，要么全部成功，要么回滚。一致性：如果执行事物之前数据库是一致的，那么执行后还是一致的。隔离性：事物操作之间彼此独立和透明，互不影响。持久性：事物一旦提交，其结果就是永久的。未提交读：允许脏读，其他事物只要修改了数据，即使未提交，本事物也能看到修改后的数据值。提交读：只能读取到已提交的数据。可重复读（innoDB 默认）：无论其他事物是否修改并提交了数据，这个事物中的数据不受影响。串行读：完全串行化的读，每次读都要获得锁，读写相互都会阻塞。</p><h3 id="MySQL-优化相关"><a href="#MySQL-优化相关" class="headerlink" title="MySQL 优化相关"></a>MySQL 优化相关</h3><p>使用更小的整数类型、尽可能的定义字段为 not null（否则会导致索引复杂）、只创建需要的索引、分库分表。使用 explain 检查复杂 SQL 语句、LIMIT 语句尽量要跟 order by 或 distinct、插入多条数据时使用单条 INSERT 语句。</p><h3 id="MySQL-存储引擎-InnoDB-和-MyISAM-的区别"><a href="#MySQL-存储引擎-InnoDB-和-MyISAM-的区别" class="headerlink" title="MySQL 存储引擎 InnoDB 和 MyISAM 的区别"></a>MySQL 存储引擎 InnoDB 和 MyISAM 的区别</h3><p>InnoDB 支持事物，MyISAM 不支持。InnoDB 支持外键，MyISAM 不支持。InnoDB 是聚集索引，MyISAM 是非聚集索引。索引和数据文件是分离的。InnoDB 必须要有主键（没有会自己找或创建），MyISAM 可以没有。InnoDB 不保存表的行数，MyISAM 用了一个变量保存表的行数。InnoDB 支持表、行级锁 默认行级锁，MyISAM 只支持表级锁。</p><h3 id="MySQL-在哪些情况下不使用索引"><a href="#MySQL-在哪些情况下不使用索引" class="headerlink" title="MySQL 在哪些情况下不使用索引"></a>MySQL 在哪些情况下不使用索引</h3><p>like 查询使用%开头不能使用索引，但用%结尾的可以使用索引。where 语句中使用&lt;&gt;或!&#x3D;。where 语句中使用 or，且没有把 or 中的所有字段加上索引。where 语句中对字段表达式操作。where 语句中使用 NOT IN。使用简单的 IN 会使用索引。</p><h3 id="MySQL-分库分表策略"><a href="#MySQL-分库分表策略" class="headerlink" title="MySQL 分库分表策略"></a>MySQL 分库分表策略</h3><p>垂直切分：某个表字段过多，可以将不常用或字段长度较大的字段拆分出去到扩展表中。水平切分：分为库内分表和分库分表，是根据表内数据的逻辑关系，按照不同的条件分散到多个数据库或表中。</p><h3 id="MySQL-三个范式"><a href="#MySQL-三个范式" class="headerlink" title="MySQL 三个范式"></a>MySQL 三个范式</h3><ol><li>满足原子性</li><li>满足唯一性</li><li>满足无传递依赖（每个字段依赖且仅依赖于主键</li></ol><p>常用的 SQL 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE <span class="hljs-operator">&lt;</span>database_name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8;<br><span class="hljs-keyword">ALTER</span> DATABASE <span class="hljs-operator">&lt;</span>database_name<span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">DROP</span> DATABASE [IF <span class="hljs-keyword">EXISTS</span>] <span class="hljs-operator">&lt;</span>database_name<span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">SHOW</span> DATABASES <span class="hljs-keyword">LIKE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">module</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">condition</span><span class="hljs-operator">&gt;</span>;<br>USE <span class="hljs-operator">&lt;</span>database_name<span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span> (column1,column2,...) <span class="hljs-keyword">VALUES</span> (value1,value2,...);<br><span class="hljs-keyword">UPDATE</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SET</span> column1<span class="hljs-operator">=</span><span class="hljs-number">1</span>,column2<span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">61618</span>;<br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">condition</span><span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">condition</span><span class="hljs-operator">&gt;</span>;<br><span class="hljs-keyword">TRUNCATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span><br>MySQL存储引擎<br><span class="hljs-keyword">SHOW</span> ENGINES;<br>MySQL数据类型<br></code></pre></td></tr></table></figure><ol><li>整型：TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT</li><li>浮点型：FLOAT, DOUBLE, DECIMAL(可变)</li><li>字符串：CHAR(8), VARCHAR(255)</li><li>文本：TEXT, BLOB</li><li>时间：DATE, TIME, DATETIME, TIMESTAMP, YEAR</li></ol><h3 id="MySQL-修改表操作"><a href="#MySQL-修改表操作" class="headerlink" title="MySQL 修改表操作"></a>MySQL 修改表操作</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; <span class="hljs-keyword">ADD</span> &lt;columnN&gt; <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>;<br><span class="hljs-comment">-- 修改字段定义;</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; MODIFY &lt;columnN&gt; <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>);<br><span class="hljs-comment">-- 展示数据表;</span><br><span class="hljs-keyword">DESC</span> &lt;<span class="hljs-built_in">table_name</span>&gt;;<br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; CHANGE <span class="hljs-keyword">COLUMN</span> &lt;old_column&gt; &lt;new_column&gt;;<br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; <span class="hljs-keyword">DROP</span> &lt;<span class="hljs-keyword">column</span>&gt;;<br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; <span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">AS</span> &lt;new_table_name&gt;;<br><span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; &lt;new_table_name&gt;;<br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt;;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> &lt;<span class="hljs-built_in">table_name</span>&gt; <span class="hljs-keyword">LIKE</span> &lt;back_table_name&gt;;<br>MySQL运算符<br></code></pre></td></tr></table></figure><ol><li><ul><li><ul><li>* &#x2F;</li></ul></li></ul></li><li>&#x3D; &lt; &gt; &lt;&#x3D; &gt;&#x3D; !&#x3D;</li><li>is null, is not null, between and, in , not in, like, not like, regexp</li><li>AND OR XOR NOT</li></ol><h3 id="MySQL-流程控制"><a href="#MySQL-流程控制" class="headerlink" title="MySQL 流程控制"></a>MySQL 流程控制</h3><h3 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h3><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs node-repl">IF &lt;condition&gt; THEN<br><span class="hljs-meta prompt_">...</span><br>ELSE IF &lt;condition&gt; THEN<br><span class="hljs-meta prompt_">...</span><br>ELSE <br><span class="hljs-meta prompt_">...</span><br>END IF<br></code></pre></td></tr></table></figure><h3 id="CASE"><a href="#CASE" class="headerlink" title="CASE"></a>CASE</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">CASE</span> &lt;var&gt;<br><span class="hljs-keyword">WHEN</span> &lt;val&gt; <span class="hljs-keyword">THEN</span><br>...<br><span class="hljs-keyword">WHEN</span> &lt;val&gt; <span class="hljs-keyword">THEN</span><br>...<br><span class="hljs-keyword">WHEN</span> &lt;val&gt; <span class="hljs-keyword">THEN</span><br>...<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">CASE</span><br><span class="hljs-keyword">WHILE</span><br><span class="hljs-keyword">WHILE</span> &lt;condition&gt; <span class="hljs-keyword">THEN</span><br>...<br><span class="hljs-keyword">END</span> <span class="hljs-keyword">WHILE</span><br></code></pre></td></tr></table></figure><h3 id="MySQL-多表联查"><a href="#MySQL-多表联查" class="headerlink" title="MySQL 多表联查"></a>MySQL 多表联查</h3><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>两个表存在相同的字段</p><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span><br><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span><br></code></pre></td></tr></table></figure><p>这种查询建议选择写一段代码进行，提升可读性。</p><h3 id="MySQL-子查询"><a href="#MySQL-子查询" class="headerlink" title="MySQL 子查询"></a>MySQL 子查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">IN</span>, &lt;compare&gt;, <span class="hljs-keyword">EXISTS</span>, <span class="hljs-keyword">ANY</span>(挑一个), <span class="hljs-keyword">ALL</span>(选全部)<br><span class="hljs-comment">-- 基本语法, 两个表可以相同也可以不同</span><br><span class="hljs-keyword">SELECT</span> &lt;<span class="hljs-keyword">columns</span>&gt; <span class="hljs-keyword">FROM</span> &lt;table1_name&gt; <span class="hljs-keyword">WHERE</span> &lt;key?&gt; &lt;subQuery&gt; ( <span class="hljs-keyword">SELECT</span> &lt;<span class="hljs-keyword">columns</span>&gt; <span class="hljs-keyword">FROM</span> &lt;table2_name&gt;)<br><br><span class="hljs-comment">-- 例如</span><br><span class="hljs-keyword">SELECT</span> &lt;<span class="hljs-keyword">columns</span>&gt; <span class="hljs-keyword">FROM</span> &lt;table1_name&gt; <span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">IN</span>( <span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> &lt;table1_name&gt; <span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">7</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">10</span>)<br><span class="hljs-keyword">SELECT</span> &lt;<span class="hljs-keyword">columns</span>&gt; <span class="hljs-keyword">FROM</span> &lt;table1_name&gt; <span class="hljs-keyword">WHERE</span> id &gt; <span class="hljs-keyword">ANY</span>( <span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> &lt;table1_name&gt; <span class="hljs-keyword">WHERE</span> id <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">7</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">10</span>)<br></code></pre></td></tr></table></figure><h3 id="MySQL-索引"><a href="#MySQL-索引" class="headerlink" title="MySQL 索引"></a>MySQL 索引</h3><p>主键是一种特殊的索引</p><h3 id="存储过程与函数"><a href="#存储过程与函数" class="headerlink" title="存储过程与函数"></a>存储过程与函数</h3><p>主要区别在于，存储过程一般用于增删改，而函数一般用于计算结果，不改动数据库本身。</p><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> <span class="hljs-title function_">procedure_name</span> <span class="hljs-params">(<span class="hljs-keyword">IN</span> parameter INTEGER)</span><br><span class="hljs-title function_">BEGIN</span><br><span class="hljs-title function_">IF</span> &lt;<span class="hljs-title function_">condition</span>&gt; <span class="hljs-title function_">THEN</span><br>...<br><span class="hljs-title function_">END</span> <span class="hljs-title function_">IF</span><br><br><span class="hljs-title function_">WHILE</span> &lt;<span class="hljs-title function_">condition</span>&gt; <span class="hljs-title function_">THEN</span><br>...<br><span class="hljs-title function_">END</span> <span class="hljs-title function_">WHILE</span><br><br><span class="hljs-title function_">CASE</span> &lt;<span class="hljs-title function_">var</span>&gt;<br><span class="hljs-title function_">WHEN</span> 1 <span class="hljs-title function_">THEN</span><br>...<br><span class="hljs-title function_">WHEN</span> 2 <span class="hljs-title function_">THEN</span><br>...<br><span class="hljs-title function_">END</span> <span class="hljs-title function_">CASE</span><br><br><span class="hljs-title function_">END</span><br>-- 调用<br>@<span class="hljs-title function_">parameter</span>=7;<br>CALL procedure_name(@parameter)<span class="hljs-punctuation">;</span><br>-- 删除<br>DROP <span class="hljs-keyword">PROCEDURE</span> <span class="hljs-title function_">procedure_name</span>;<br></code></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> func_name (<span class="hljs-keyword">parameter</span> <span class="hljs-type">INTEGER</span>)<br><span class="hljs-keyword">RETURNS</span> <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>)<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-keyword">RETURN</span> (<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span>table_name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span> <span class="hljs-keyword">parameter</span>)<br><span class="hljs-keyword">END</span><br><span class="hljs-comment">-- 调用</span><br><span class="hljs-variable">@parameter</span><span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br>func_name(<span class="hljs-variable">@parameter</span>);<br><span class="hljs-comment">-- 删除</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">FUNCTION</span> func_name<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
